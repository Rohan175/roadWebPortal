{"version":3,"sources":["res/emblem.svg","res/ROHAN.svg","res/empty.svg","res/road.svg","Components/LoginComponent.js","Components/GeneralDialog.js","constants.js","Components/ForgotPasswordComponent.js","Authentication/index.js","Components/ChangePostDialoge.js","Components/MobileDrawer.js","Components/DesktopMenu.js","Components/NavBar.js","Components/DashboardCard.js","Components/newComplaintCard.js","Components/EmergencyComplaintCard.js","Officer/DashboardRoot.js","Components/SideFilter.js","Components/ImageCarousel.js","Components/MO_ComplaintFullView.js","Components/History.js","Components/ComplaintFullView.js","Officer/ComplaintTable.js","Officer/ComplaintReport.js","Officer/ComplaintMap.js","Officer/ComplaintContainer.js","Components/complaintCount.js","Components/complaintChipCount.js","Officer/ManageCharge.js","Components/ReceiveOfficer.js","Components/RoadCode.js","Components/AddNewOfficer.js","Officer/ManageOfficer.js","Components/RoadCodeAdd.js","Officer/AddOfficer.js","Components/Profile.js","Officer/index.js","Admin/AdminRoot.js","Components/grivancesTable.js","Components/rejectionReasons.js","Components/crud.js","Admin/Manage.js","Admin/index.js","Components/ResetPasswordComponent..js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","theme","Card","textAlign","width","logoWrapper","position","marginTop","logo","Object","defineProperty","height","breakpoints","up","display","onMobile","onDesk","loginBtn","forgotPasswordBtn","textField","props","classes","react_default","a","createElement","className","src","style","color","onSubmit","e","preventDefault","handleLogin","document","getElementById","value","TextField_default","id","label","fullWidth","type","min","max","margin","error","Button_default","variant","disabled","disableLogin","loginText","onClick","toForgotPassTab","GeneralDialog","Dialog_default","open","openDialogState","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","dialogTitle","DialogContent_default","DialogContentText_default","dialogMsg","DialogActions_default","children","host","url","getCookie","cname","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","setCookie","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","getFormatedDate","date","getDate","getMonth","getFullYear","status_type","griev_type","hierarchy","hierarchy1","openLocationInGoogleMaps","lon","lat","window","ForgotPasswordComponent","state","openDialog","phonenumber","toLogin","reset_name","handleDialogOpen","_this","setState","toLoginTab","handleforgot","fetch","headers","Accept","Content-Type","method","body","JSON","stringify","phoneNo","then","res","json","success","data","catch","err","console","log","handlechange","event","target","this","Components_GeneralDialog","onChange","Component","Login","loginTab","password","loginType","role","posts","isUpdated","setLogin","wrapper","hideOnMobile","emblem","float","title","roadImage","Paper_default","paper","Components_LoginComponent","Components_ForgotPasswordComponent","padding","right","top","bottom","left","ChangePostDialoge","handleListItemClick","selectedPost","post_id","_this2","_this$props","selectedValue","other","objectWithoutProperties","assign","Wrap","List_default","postLists","map","post","ListItem_default","button","background","key","ListItemAvatar_default","Avatar_default","avatar","Person_default","ListItemText_default","primary","location","reload","minWidth","React","backgroundColor","blue","down","Drawer_default","anchor","openDrawer","ClickAwayListener_default","onClickAway","handleClickAway","component","menuItems","item","index","NavLink","to","path","textDecoration","disableRipple","ListItemIcon_default","icon","_appDesktop","appDesktop","activeLink","palette","secondary","main","&:hover","marginRight","size","activeClassName","Typography_default","NavBar","openPostDialog","Redirect","postList","parse","handleMenuClick","handleDialogClose","handleClosePostDialog","postValue","auth","history","push","handleOpenPostDialog","navBarItems","AppBar_default","Toolbar_default","Toolbar","grow","Link","Components_DesktopMenu","IconButton_default","AccountCircle_default","appNavbar","Menu_default","Components_MobileDrawer","Components_ChangePostDialoge","withRouter","justifyContent","CardButton","dark","media","objectFit","danger","alert","Zoom_default","in","startAnimation","classNames","CardColor","getClassName","pathname","link","dashboardButton","CardName","CardContent_default","CardIcon","fontSize","fromAdmin","CardValue","CardActions_default","_mobileCard","imageClass","uppderDiv","backgroundOpacity","lowerDiv","mobileCard","numberWrapper","iconWrapper","postId","ArrowForward_default","index_es","slice","DashboardRoot","newComplaints","emergency","completed","pending","openUpdateDialog","cardData","AllInbox","AddAlert","Timer","Check","Headers","append","req","Request","mode","dashboardwrapper","cardRoot","card1","newComplaintCard","card2","EmergencyComplaintCard","card3","DashboardCard","card4","_dashboardwrapper","_cardRoot","grid-template-columns","grid-template-rows","grid-column","grid-row","SideFilter","expandedDate","expandedStatus","expandedGriev","handleExpandClick","Eventame","handleChange","statusTypeRender","status_type_map","forEach","FormControlLabel_default","checked","control","Checkbox_default","grievTypeRender","griev_type_map","wrapperItem","paddingRight","alignLeft","searchQuery","doSearch","Divider_default","emergency_state","classnames","expand","expandOpen","bind","aria-expanded","aria-label","ExpandMore_default","Collapse_default","timeout","FormGroup_default","MuiPickersUtilsProvider_default","utils","DateFnsUtils","DatePicker_default","StartingDate","handleStartingDateChange","EndingDate","handleEndingDateChange","exportExcel","href","transform","transition","transitions","create","duration","shortest","marginLeft","verticalAlign","paddingLeft","paddingTop","paddingBottom","ImageCarousel","activeStep","handleNext","prevState","handleBack","postedUsers","maxSteps","root","img","isCompleted","image","alt","userId","square","elevation","header","description","MobileStepper_default","steps","mobileStepper","nextButton","direction","KeyboardArrowLeft_default","KeyboardArrowRight_default","backButton","maxWidth","alignItems","minHeight","spacing","unit","default","overflow","withTheme","Transition","Slide_default","ComplaintFullView","openSnackbarState","snackbarMessage","snackbarVarient","comments","Comment","new_forword_complaint","show_new_complaint_status","ComplaintDialogData","complaint_status","show_new_isEmergency","isEmergency","new_complaint_status","new_estimated_time","estimated_time","new_isEmergency","srOfficerArray","rejection_resons","handleIsEmergency","handleChangeComment","comment","handleSnackbarClose","nextProps","estimated_completion","complaintData","openComplaintDialogState","handleComplaintDialogClose","TransitionComponent","Grid_default","container","xs","md","paddingClass","Components_ImageCarousel","posted_users","completed_complaint_url","toUpperCase","time","toLocaleDateString","weekday","year","month","day","apply","toConsumableArray","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","flexGrow","appBar","flex","alignCenter","snackbar","light","textWrapper","formControl","green","info","warning","amber","History","dialog","overflowX","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","complaint_operation","complaint_comment","changes_by","CommentComponent","comment_error","comment_helper_text","handleComment","multiline","shrink","helperText","rows","lines","history_name","isComplted","fileUploadBtn","fileUploadBtnColor","fileUploadName","uploadFile","isRetry","isSaving","history_open","handleSave","Rejection_Reason","prototype","withoutTime","setHours","today","asyncToGenerator","regenerator_default","mark","_callee2","extraChange","reqBody","wrap","_context2","prev","next","snackbarStyle","_ref2","_callee","finalObj","_context","handleFileFetch","sent","abrupt","stop","arguments","t0","objectSpread","t1","complaint_id","_id","t2","handleIndividualComplaintChange","handleForeword","officerId","handleTabChange","_callee3","file","formData","_context3","FormData","handleFileUpload","_callee4","input","_context4","onchange","fileName","pop","files","blob","newFile","File","getHours","getMinutes","getSeconds","genName","accept","click","_this3","_this4","read","setStateData","_this5","lastGrid","Tooltip_default","join","fullScreen","Close_default","Tabs_default","indicatorColor","textColor","centered","Tab_default","FormControl_default","InputLabel_default","htmlFor","Select_default","inputProps","MenuItem_default","ComplaintFullView_CommentComponent","marginBottom","CloudUpload_default","officer_id","officer_type","Components_History","ComplaintTable","page","rowsPerPage","handleComplaintDialogOpen","handleChangePage","handleChangeRowsPerPage","_this$state","emptyRows","Math","complaintsData","manageOfficer","MO_ComplaintFullView","Components_ComplaintFullView","TablePagination_default","count","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","isLoading","LinearProgress_default","colSpan","ComplaintReport","openOfficerDialogState","openErrorDialog","OfficerData","OfficerDialogData","Loading","handleOfficerDialogClose","handleOfficerDialogOpen","complaints","complaint","allComplaints","newFilteredComplaints","newMap","Map","filter","get","set","filteredComplaints","lodding","openOfficerDialog","Officer_ComplaintContainer","Profile_default","displayInfobox","pinInfobox","setOptions","Title","Description","visible","offset","Microsoft","Maps","Point","setLocation","getLocation","mMapScript","Promise","resolve","reject","script","addEventListener","appendChild","loadMaps","ComplaintMap","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openIndividiualCompaintDialog","load_Data","pushpinInfos","undefined","lng","infoboxLayer","EntityCollection","pinLayer","Infobox","Location","locs","pin","Pushpin","Events","addHandler","entities","bestview","LocationRect","fromLocations","setView","center","zoom","do_load","mThis","assertThisInitialized","status","complaintMapThis","readyState","onload","newProps","getLength","removeAt","LoadingState","ComplaintContainer","setMonth","emptyList","mobileFilterDialogOpen","toLowerCase","keys","oldState","newSearchedData","some","k","bool","includes","b","isComplainForwarded","splice","findIndex","find","cod","_ref","concat","jsonName","handleFilterOpen","handleFilterBar","filterDialogState","handleFilterClose","sideFilter","Components_SideFilter","CsvString","ColItem","ColIndex","RowItem","RowIndex","mDate","setAttribute","encodeURIComponent","query","OfficerIdArray","officerIds","new_griv_type","Number","isNaN","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","_ref3","slicedToArray","value2","return","progress","sideFilterGrid","Officer_ComplaintTable","Switch","Route","exact","render","Officer_ComplaintReport","ComplaintMap_ComplaintMap","progressWrapper","Empty","sideFilterButton","FilterList_default","filterBtn","padding10","overflowY","defaultProps","Total","Emergency","Pending","Completed","Approved","Chip_default","inputComponent","inputRef","ref","components","Control","InputProps","selectProps","innerRef","innerProps","textFieldProps","Menu","MultiValue","tabIndex","chip","chipFocused","isFocused","onDelete","removeProps","deleteIcon","Cancel_default","NoOptionsMessage","noOptionsMessage","Option","buttonRef","selected","fontWeight","isSelected","Placeholder","placeholder","SingleValue","singleValue","ValueContainer","valueContainer","ManageCharge","filterPost","errorStatus","saveButtondisable","officerName","chargeTransfer","selectedFromListPostId","selectedFromListOfficerId","selectedFromUIOfficerId","selectedFromListOfficeType","officetype","handlePostChange","filterPostValue","handleOfficerChange","officerPost","op","selectStyles","base","text","& input","font","ProfileWrapper","divider","NoSsr_default","react_select_esm","styles","options","isClearable","officerData","officer","office_type","flexWrap","emphasize","grey","zIndex","ReceiveOfficerComponent","postData","post1","officerName1","generateBtnDisable","assignBtnDisable","sanctioned_Post","sanctionedPostLable","districts","componentWillMount","officerRole","performValidataion","flag","handleGeneratePost","post_office_type","operationFlag","post_districts","handleAssignPost","allOfficer","allPost","ReceiveOfficerWrapper","RoadCode","single","multi","newopt","setRoadCodes","values","InputLabelProps","isMulti","AddNewOfficer","email","officer_name","officer_phoneNo","officer_email","handleDistrictChange","chips","AddOfficerWrapper","ManageOfficer","openReceiveOfficerDialog","openAddNewOfficerDialog","openChargeDialog","expandOfficerFilters","OfficerMap","sideFilterDialogOpen","officerMap","allOfficersData","mapForFilteringOfficerRole","mapForSearchingOfficerRole","reverse","x","getTotalCountOfComplaintTypes","newFilteredOfficersDataArray","handleChargeDialogClose","Array","isArray","handleChargeDialogOpen","handleCheckBoxChange","sideFilterHandleOpen","sideFilterHandleClose","handleReceive","handleAddnewOfficer","handleReceiveOfficerDialogClose","handleAddNewOfficerDialogClose","officerRoleRender","prevProps","entries","_ref4","val","_ref5","_ref6","tTotal","tPending","tEmergency","tCompleted","tApproved","obj","complaint_data","total","approved","ReceiveOfficer","Components_AddNewOfficer","Officer_ManageCharge","OnSave","complaintChips","Components_complaintChipCount","centerStyle","AddOfficer","repassword","road_code","sr_officer_id","isDisabled","sr_officer_list","roads","roadList","handlePasswordErrors","srOfficerId","RoadCodeAdd","opt","road_code_field","border","borderBottom","outline","Profile","closeButton","disableTypography","MuiDialogContent","borderTop","MuiDialogActions","newPassword","confirmNewPassword","validPhoneNo","changed","Dashboard","TableChart","Place","PieChart","AccountCircle","Components_NavBar","react_router_cache_route","react_router_cache_route_default","Officer_DashboardRoot","locationProps","Officer_ManageOfficer","Officer_AddOfficer","Components_Profile","backgroundImage","bgImage","backgroundSize","backgroundPosition","backgr","AdminRoot","Grievances","update","lists","handleDialougeOpen","handleAdd","handlePush","String","floor","random","handleUpdate","handleDelete","listItem","RejectionReasons","CRUD","updateDialogOpen","currentPage","states","columns","api","crudUrl","handleUpdateDialogClose","handleFetchAll","tableName","disable","Manage","ManageWrapper","crud","AdminDashboard","Admin_Manage","confirmPassword","handleNewPassword","handleConfirmPassword","handleReset","match","token","params","textTransform","App","userType","isLoggedIn","checkLoginStatus","Authentication","redirectIfNotLoggedInOfficer","Officer","redirectIfNotLoggedInAdmin","Admin","handlereset","ResetPasswordComponent_","HashRouter","Boolean","hostname","createMuiTheme","ReactDOM","MuiThemeProvider_default","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1dac331a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emblem.cd8dce0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ROHAN.f4318010.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.32735116.svg\";","module.exports = __webpack_public_path__ + \"static/media/road.4565c56f.svg\";","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport logo from '../res/emblem.svg';\nimport { Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    Card: {\n        // margin: 'auto',\n        textAlign: 'center',\n        width: '270px',\n    },\n    logoWrapper: {\n        position: 'relative',\n        marginTop: '20px'\n    },\n    logo: {\n        width: '70px',\n        height: 'auto',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    onMobile: {\n        display: 'block',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    onDesk: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'block',\n        },\n    },\n    loginBtn: {\n        marginTop: '20px',\n        width: '200px'\n    },\n    forgotPasswordBtn: {\n        marginTop: '20px',\n        width: '200px'\n    },\n    textField: {\n        // width: '100%'\n    },\n})\n\nlet LoginComponent = (props) => {\n    let { classes } = props;\n    \n    \n    return (\n        <div className={classes.Card}>\n            {/* <CardContent> */}\n                <div className={classes.logoWrapper}>\n                    <img src={logo} className={classes.logo} />\n                    <h1 style={{ color: '#263238' }} className={classes.onDesk}>Welcome</h1>\n                    <h5 style={{ color: '#263238' }} className={classes.onMobile}>Roads and Buildings</h5>\n                </div>\n                <form\n                    onSubmit={(e) => { \n                        e.preventDefault();\n                        props.handleLogin(\n                            document.getElementById('phoneNo').value,\n                            document.getElementById('password').value) \n                }}>\n                    <div>\n                        <TextField\n                            id=\"phoneNo\"\n                            label=\"Phone Number\"\n                            fullWidth\n                            type=\"text\"\n                            min=\"1000000000\"\n                            max=\"9999999999\"\n                            className={classes.textField}\n                            margin=\"normal\" />\n                    </div>\n                    <div>\n                        <TextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            fullWidth\n                            error={false}\n                            className={classes.textField}\n                            margin=\"small\" />\n                    </div>\n                    <div>\n                        <br/>\n                        <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\" \n                        disabled={props.disableLogin}\n                        className={classes.loginBtn}\n                        >\n                        {props.loginText}\n                        </Button>\n                    </div>\n                </form>\n                <div>\n                    <Button \n                        variant=\"flat\" \n                        className={classes.forgotPasswordBtn}\n                        onClick={props.toForgotPassTab}\n                    >\n                        Forgot Password?\n                    </Button>\n                </div>\n            {/* </CardContent> */}\n        </div>\n    )\n}\n\nLoginComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LoginComponent);","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst GeneralDialog = props => {    \n    return (\n    <Dialog\n        open={props.openDialogState || false}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        >\n        <DialogTitle id=\"alert-dialog-title\">\n            {props.dialogTitle}\n        </DialogTitle>\n    \n        <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n                {props.dialogMsg}\n            </DialogContentText>\n        </DialogContent>\n    \n        <DialogActions>\n            {props.children}\n        </DialogActions>\n    </Dialog>)\n}\n\n\nexport default GeneralDialog;","// const host = \"http://192.168.12.130:3003\"\nconst host = \"https://roadgrievancealpha.herokuapp.com\";\n//const host = \"https://roadgriev.herokuapp.com\";\n// const host = \"http://192.168.43.165:3003\";\n//const host = \"http://192.168.43.66:3003\";\n//const host = \"http://192.168.2.11:3003\";\n//const host = \"https://roadgrievancealpha.herokuapp.com\";\nconst url = host + \"/api/portal/\";\n\nlet getCookie = function(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return -1;\n};\n\nlet setCookie = (cname, cvalue, exdays) => {\n  var d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  var expires = \"expires=\" + d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";\";\n};\n\nlet getFormatedDate = date => {\n  date = new Date(date);\n  return (\n    (date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate()) +\n    \":\" +\n    (date.getMonth() + 1 < 10\n      ? \"0\" + (date.getMonth() + 1)\n      : date.getMonth() + 1) +\n    \":\" +\n    date.getFullYear()\n  );\n};\n\nconst status_type = [\n  [\"PENDING\", true],\n  [\"APPROVED\", true],\n  [\"REJECTED\", true],\n  [\"IN PROGRESS\", true],\n  [\"COMPLETED\", true]\n];\n\nconst griev_type = [\n  [\"DAMAGED BRIDGE( ક્ષતિગ્રસ્ત બ્રિજ)\", true],\n  [\"DAMAGED BRIDGE PARAPET(ક્ષતિગ્રસ્ત બ્રિજ પેપેટ )\", true],\n  [\"BREACH ON A ROAD(રોડ પર ભીડ)\", true],\n  [\"DAMAGED RAILING\", true],\n  [\"SHARP CURVE\", true],\n  [\"ACCIDENT PRONE ZONE\", true],\n  [\"DAMAGE STRUCTURES\", true],\n  [\"POT HOLES\", true],\n  [\"FALLEN TREE\", true],\n  [\"DEGREDED ROADS\", true],\n  [\"CRACKS LEVELING\", true]\n];\n\nconst hierarchy = [\n  \"Section Officer\",\n  \"Deputy Executive Engineer\",\n  \"Executive Engineer\",\n  \"Superintending Engineer\",\n  \"Chief Engineer\",\n  \"Secretary\"\n];\n\nconst hierarchy1 = [\n  [\"Section Officer\", \"SO\"],\n  [\"Deputy Executive Engineer\", \"DEE\"],\n  [\"Executive Engineer\", \"EE\"],\n  [\"Superintending Engineer\", \"SE\"],\n  [\"Chief Engineer\", \"CE\"],\n  [\"Secretary\", \"Secretary\"]\n];\n\nconst openLocationInGoogleMaps = (lon, lat) => {\n  window.open(\"https://www.google.com/maps/dir/\" + lon + \",\" + lat, \"_blank\");\n};\n\nexport {\n  host,\n  url,\n  getCookie,\n  setCookie,\n  getFormatedDate,\n  griev_type,\n  status_type,\n  hierarchy,\n  hierarchy1,\n  openLocationInGoogleMaps\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GeneralDialog from '../Components/GeneralDialog';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport logo from '../res/emblem.svg';\nimport {url} from \"../constants\";\nimport { Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    Card: {\n        // margin: 'auto',\n        textAlign: 'center',\n        width: '270px'\n    },\n    logoWrapper: {\n        position: 'relative',\n        marginTop: '20px'\n    },\n    logo: {\n        width: '70px',\n        height: 'auto',\n    },\n    loginBtn: {\n        marginTop: '20px',\n        width: '200px'\n    },\n    forgotPasswordBtn: {\n        marginTop: '20px',\n        width: '200px'\n    },\n    textField: {\n        width: '100%'\n    }\n})\n\n    class ForgotPasswordComponent extends Component {\n        state={\n            openDialog : false,\n            phonenumber:\"\",\n            toLogin:false,\n            reset_name:\"Reset Password\",\n        }\n\n        handleDialogOpen = (dialogMsg, dialogTitle) => {        \n            this.setState({ \n                openDialog: true,\n                dialogMsg: dialogMsg,\n                dialogTitle: dialogTitle\n            });\n        };\n\n        \n        handleClose = () => {\n            this.setState({ openDialog: false });\n            if(this.state.toLogin){\n                // this.props.history.push('/');\n                this.props.toLoginTab()\n            }\n        };\n    \n        handleforgot = () => {       \n            if(this.state.phonenumber.length==10){\n\n                this.setState({\n                    reset_name:\"PLEASE WAIT\"\n                })\n            fetch( url + \"forgotPassword/\", {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    method: \"POST\",\n                    body: JSON.stringify({phoneNo:this.state.phonenumber})\n                }\n            )\n            .then(res => res.json())\n            .then(res => {\n             \n                this.setState({\n                    reset_name:\"Reset Password\"\n                })\n                if(res.success){\n                    this.setState({\n                        toLogin:true,\n                    })\n                    this.handleDialogOpen(\"Go to the link which has been messaged on \"+this.state.phonenumber+\" .\",\"To reset your password \");\n                }else{\n                    this.handleDialogOpen(res.data,\"Error\");  \n                }\n            })\n            .catch(err => {\n                \n                this.setState({\n                    reset_name:\"Reset Password\"\n                })\n                console.log(err);   \n                this.handleDialogOpen(err,\"Error Occur\");        \n            });\n            \n\n            }\n            else{\n                this.handleDialogOpen(\"Phone number must contain 10 digits\",\"Error\");\n            }\n        }\n\n        handlechange = (event) =>{\n            this.setState({\n                phonenumber:event.target.value,\n            })       \n        }\n\nrender(){\n        let { classes } = this.props;\n\n    return (\n        <div className={classes.Card}>\n        \n        <GeneralDialog \n                openDialogState = {this.state.openDialog}\n                dialogTitle = {this.state.dialogTitle}\n                dialogMsg = {this.state.dialogMsg}  \n                handleClose={this.handleClose}\n                handleDialogOpen={this.handleDialogOpen}\n            >\n                <Button onClick={this.handleClose}>OK</Button>\n            </GeneralDialog>\n            {/* <CardContent> */}\n                <div className={classes.logoWrapper}>\n                    <h1 style={{ color: '#263238' }}>Forgot Password</h1>\n                </div>\n                    <div>\n                        <TextField\n                            id=\"phoneNo\"\n                            label=\"Phone Number\"\n                            type=\"Number\"\n                            value={this.state.phonenumber}\n                            onChange={this.handlechange}\n                            min=\"1000000000\"\n                            max=\"9999999999\"\n                            className={classes.textField}\n                            margin=\"normal\" />\n                    </div>\n                    <div>\n                        <Button type=\"submit\" \n                        disabled={this.state.reset_name==\"Reset Password\"?false:true}\n                        variant=\"contained\" color=\"primary\" onClick={this.handleforgot} className={classes.loginBtn}>\n                            {this.state.reset_name}\n                        </Button>\n                    </div>\n                <div>\n                    <Button \n                        variant=\"flat\" \n                        className={classes.forgotPasswordBtn}\n                        onClick={this.props.toLoginTab}\n                    >\n                        Login\n                    </Button>\n                </div>\n        </div>\n    )\n    }\n}\n\nForgotPasswordComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ForgotPasswordComponent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nimport Button from '@material-ui/core/Button';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport LoginComponent from '../Components/LoginComponent';\nimport ForgotPasswordComponent from '../Components/ForgotPasswordComponent';\n\nimport { url } from \"../constants\";\nimport GeneralDialog from '../Components/GeneralDialog';\nimport roadImage from '../res/road.svg';\nimport emblem from '../res/emblem.svg';\n\nconst styles = theme => ({\n    wrapper: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'block',\n        },\n    },\n    paper: {\n        padding:'20px',\n        width:'270px',\n        margin: 'auto',\n        [theme.breakpoints.up('md')]: {\n            // display: 'block',\n            position: 'absolute',\n            right: '120px',\n            top: '90px'\n        },\n    },\n    roadImage: {\n        width: '100vw',\n        position: 'fixed',\n        bottom: '-260px',\n        left: '-160px'\n    },\n    logo: {\n        width: '50px',\n        padding: '20px',\n        margin: '40px 0px 40px 40px',\n        display: 'inline-block'\n    },\n    title: {\n        // display: 'inline-block',\n        padding: '0px',\n        margin: '0px',\n        marginTop: '60px'\n    },\n    hideOnMobile: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'block',\n        },\n    }\n})\n\nclass Login extends Component {\n\n    //state of login component\n    state = {\n        loginTab: true,\n        openDialog : false,\n        loginText : \"Login\",\n        disableLogin : false\n    }\n\n    toLoginTab = () => {\n        this.setState( {\n            loginTab: true\n        });\n    }\n\n    toForgotPassTab = () => {\n        this.setState( {\n            loginTab: false\n        });\n    }\n\n    handleDialogOpen = (dialogMsg, dialogTitle) => {        \n        this.setState({ \n            openDialog: true,\n            dialogMsg: dialogMsg,\n            dialogTitle: dialogTitle\n        });\n    };\n\n    setCookie = (cname, cvalue, exdays) => {\n        var d = new Date();\n        d.setTime(d.getTime() + (exdays*24*60*60*1000));\n        var expires = \"expires=\"+ d.toUTCString();\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";\";\n    }\n\n    handleClose = () => {\n        this.setState({ openDialog: false });\n    };\n\n    handleLogin = (phoneNo, password) => {\n\n        this.setState({\n            loginText : \"Logging In ...\",\n            disableLogin : true\n        })\n\n        if(!phoneNo){\n            this.handleDialogOpen(\"Please enter phone number.\", \"Error\")\n            this.setState({\n                loginText:\"Login\",\n                disableLogin:false\n            })\n\n            return;\n        }\n\n        if(phoneNo && password && password.length >= 6 && password.length < 12) {\n            fetch(url + \"login/\", {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    method: \"POST\",\n                    body: JSON.stringify({phoneNo:phoneNo, password:password})\n                }\n            )\n            .then(res => res.json())\n            .then(res => {\n                console.log(\"Auth : \",res);\n                if(res.success){\n                    this.setCookie(\"roadGPortalAuth\", res.data, 1);\n                    this.setCookie(\"roadGPortalUserType\", res.loginType, 1);\n                    this.setCookie(\"roadGPortalRole\", res.role, 1);\n                    this.setCookie(\"roadGPortalPosts\", JSON.stringify(res.posts), 1);\n                    this.setCookie(\"roadGPortalCurrentPosts\", JSON.stringify(res.posts[0]), 1);\n                    this.setCookie(\"firstTimeLogin\", true, 1);\n                    this.setCookie(\"isUpdated\", res.isUpdated, 1);\n                    this.props.setLogin(res.loginType);\n                    console.log(\"posts available\",res.posts);\n                }else{\n                    this.handleDialogOpen(res.data, \"Error\");\n                    this.setState({\n                        loginText:\"Login\",\n                        disableLogin:false\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err);                \n                this.handleDialogOpen(err+\"\", \"Error\")\n                this.setState({\n                    loginText:\"Login\",\n                    disableLogin:false\n                })\n            });\n            \n        } else {\n            this.handleDialogOpen(\"Password is required and it must be between 6 to 12 character\", \"Error\")\n            this.setState({\n                loginText:\"Login\",\n                disableLogin:false\n            })\n        }\n    }\n\n    render() {\n        let { classes } = this.props;\n\n        return (\n          <div className={classes.wrapper}>\n            <div className={classes.hideOnMobile}>\n                <div style={{width: '610px'}}>\n                    <img src={emblem} className={classes.logo} />\n                    <span style={{float: 'right'}}>\n                        <h1 className={classes.title} style={{color: '#263238'}}>Roads & Buildings Department</h1>\n                        <h2 style={{color: '#263238', margin: '0px'}}>Government of Gujarat</h2>\n                    </span>\n                </div>\n                <img src={roadImage} className={classes.roadImage} />\n            </div>\n           <Paper className={classes.paper}>\n            { this.state.loginTab \n                ? \n                <LoginComponent handleLogin={this.handleLogin} toForgotPassTab={this.toForgotPassTab} loginText={this.state.loginText} disableLogin={this.state.disableLogin}/> \n                : <ForgotPasswordComponent toLoginTab={this.toLoginTab} /> }\n            </Paper>\n            <GeneralDialog \n                openDialogState = {this.state.openDialog}\n                dialogTitle = {this.state.dialogTitle}\n                dialogMsg = {this.state.dialogMsg}  \n                handleClose={this.handleClose}\n                handleDialogOpen={this.handleDialogOpen}\n            >\n                <Button onClick={this.handleClose}>OK</Button>\n            </GeneralDialog>\n          </div>  \n        );\n    }\n}\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Login);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\nimport {setCookie} from '../constants';\n\nconst styles = (theme) => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  Wrap: {\n    minWidth: '350px',\n    [theme.breakpoints.down('xs')]: {\n      minWidth: '150px',\n    },\n  }\n});\n\nclass ChangePostDialoge extends React.Component {\n  handleClose = () => {\n    this.props.onClose(-1);\n  };\n\n\n  handleListItemClick = value => {\n    if(this.props.selectedPost.post_id == value.post_id) {\n        this.props.onClose(-1);\n        return;\n    }\n    this.props.onClose(value);\n  };\n\n  render() {\n    const { classes, onClose, selectedValue, open, ...other } = this.props;\n    console.log(\"changePost\", open);\n    \n    return (\n      <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" open={open} {...other} >\n        <DialogTitle id=\"simple-dialog-title\">Change Post</DialogTitle>\n        <div className={classes.Wrap} >\n          <List>\n            {this.props.postLists.map(post => (\n              <ListItem button style={{ background: this.props.selectedPost.post_id === post.post_id ? \"rgba(0, 0, 255, 0.1)\": \"\" }} onClick={() => this.handleListItemClick(post)} key={post}>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatar}>\n                    <PersonIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={post.post_id} />\n              </ListItem>\n            ))}\n          </List>\n          <br/>\n          <Button onClick={ () => {\n                            setCookie(\"roadGPortalAuth\", {}, -1);\n                            setCookie(\"firstTimeLogin\", false, -1);\n                            window.location.reload();\n                        } } variant=\"contained\" color=\"secondary\" style={{ minWidth: '100%', color: 'white' }}>LOGOUT</Button>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nChangePostDialoge.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string,\n};\n\nexport default withStyles(styles)(ChangePostDialoge);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nimport Drawer from '@material-ui/core/Drawer';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = theme => ({\n\n})\n\nconst MobileDrawer = props => {\n    return (\n        <Drawer anchor=\"top\" open={props.openDrawer}>\n            <ClickAwayListener onClickAway={props.handleClickAway}>\n                <List component=\"nav\">\n                    {\n                        props.menuItems.map((item, index) => (\n                            <NavLink to={item.path} key={index} style={{ textDecoration: 'none' }} onClick={props.handleClickAway} >\n                                <ListItem button disableRipple>\n                                    <ListItemIcon>\n                                        {<item.icon />}\n                                    </ListItemIcon>\n                                    <ListItemText primary={item.name} />\n                                </ListItem>\n                            </NavLink>\n                        ))\n                    }\n                </List>\n            </ClickAwayListener>\n        </Drawer>\n    )\n}\n\nMobileDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MobileDrawer);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\n// import Tooltip from '@material-ui/core/Tooltip';\n// import IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n// import { th } from 'date-fns/esm/locale';\n\nconst styles = theme => ({\n    appDesktop: {\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        [theme.breakpoints.up('md')]: {\n            display: 'inline-flex',\n        },\n    },\n    activeLink: {\n        background: theme.palette.secondary.main,\n        color: 'white',\n        '&:hover': {\n            background: 'white',\n            color: 'black'\n        }\n    },\n})\n\nconst DesktopMenu = props => {\n    let { classes } = props;\n    return (\n        <div className={classes.appDesktop}>\n            {\n                props.menuItems.map((item, index) => (\n                    <div title={item.name} key={index} style={{marginRight: '4px'}}>\n                        <Button variant=\"text\" size=\"small\" color=\"inherit\" activeClassName={classes.activeLink} component={NavLink} to={item.path}>\n                            <Typography variant=\"body2\" color=\"inherit\" >{item.name}</Typography>\n                        </Button>\n                        {/* <IconButton color=\"inherit\" component={NavLink} to={item.path}>{<item.icon />}</IconButton> */}\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nDesktopMenu.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DesktopMenu);","import React, { Component } from 'react';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu/';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport ChangePostDialoge from './ChangePostDialoge';\nimport MobileDrawer from './MobileDrawer';\nimport DesktopMenu from './DesktopMenu';\nimport GeneralDialog from '../Components/GeneralDialog';\nimport { getCookie, url ,setCookie} from '../constants';\n\nconst styles = theme => ({\n    Toolbar: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    appNavbar: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    }\n})\n\nclass NavBar extends Component {\n    state = {\n        openDrawer: false,\n        selectedPost: \"\",\n        openPostDialog: getCookie(\"firstTimeLogin\") == \"true\"? true : false,   \n        Redirect: false,\n        postList: JSON.parse(getCookie(\"roadGPortalPosts\")),\n        selectedPost: JSON.parse(getCookie(\"roadGPortalCurrentPosts\")),\n        openDialog : false,\n    }\n\n\n    handleMenuClick = () => {\n        this.setState({\n            openDrawer: true\n        });\n    };\n\n    handleClickAway = () => {\n        this.setState({\n            openDrawer: false\n        });\n    };\n\n    //dialogs\n    handleDialogOpen = (dialogMsg, dialogTitle) => {        \n        this.setState({ \n            openDialog: true,\n            dialogMsg: dialogMsg,\n            dialogTitle: dialogTitle\n        });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ openDialog: false });\n    };\n    //end dialog\n\n    handleClosePostDialog = (postValue) => {\n        this.setState({\n            openPostDialog: false\n        })\n        setCookie(\"firstTimeLogin\",false, 1);\n\n        console.log(\"Post value\",postValue);\n\n        if(postValue != -1) {\n            //change post here\n            //network call\n            //set new cookie\n            //reload page\n\n            fetch(url + \"changePost/\", {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'auth': 'token ' + getCookie(\"roadGPortalAuth\")\n                    },\n                    method: \"POST\",\n                    body: JSON.stringify({post_id:postValue})\n                }\n            )\n            .then(res => res.json())\n            .then(res => {\n                if(res.success){\n                    console.log(\"cookie\" , postValue);\n                    setCookie(\"roadGPortalAuth\", res.data, 1);\n                    setCookie(\"roadGPortalUserType\", res.loginType, 1);\n                    setCookie(\"roadGPortalRole\", res.role, 1);\n                    setCookie(\"roadGPortalPosts\", JSON.stringify(res.posts), 1);\n                    setCookie(\"roadGPortalCurrentPosts\",JSON.stringify(postValue),1);\n                    setCookie(\"firstTimeLogin\",false, 1);\n                    this.setState({\n                        selectedPost: JSON.parse(getCookie(\"roadGPortalCurrentPosts\")),\n                    })\n                    this.props.history.push('/');\n                }else{\n                    this.handleDialogOpen(res.data, \"Error\");\n                    this.setState({\n                        loginText:\"Login\",\n                        disableLogin:false\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err);                \n                this.handleDialogOpen(err+\"\", \"Error\")\n                this.setState({\n                    loginText:\"Login\",\n                    disableLogin:false\n                })\n            });\n        }\n    }\n\n    handleOpenPostDialog = () => {\n        this.setState({\n            openPostDialog: true\n        })\n    }\n\n    // componentWillMount = () => {\n    //     this.setState({\n    //         openDialogState: getCookie(\"firstTimeLogin\") == \"true\"? true : false\n    //     })\n    // }\n\n    \n    render() {\n        let { classes } = this.props;\n        let { navBarItems } = this.props;\n\n        console.log(\"Fuck off : \",typeof getCookie(\"firstTimeLogin\"), getCookie(\"firstTimeLogin\") == \"true\" ? true : false);\n        \n        return (\n            <AppBar position=\"fixed\" color=\"inherit\">\n                <Toolbar variant=\"dense\" className={classes.Toolbar}>\n                    <Typography variant=\"subheading\" color=\"inherit\" className={classes.grow}>\n                        <Button component={Link} style={{color: 'black'}} to=\"/\">Road {'&'} Building</Button>\n                    </Typography>\n                    <div>\n                        <DesktopMenu menuItems={navBarItems} handleOpenPostDialog={this.handleOpenPostDialog} />\n                        {/* <Button variant=\"text\" size=\"small\" color=\"inherit\" onClick={this.handleOpenPostDialog}>Change Post</Button> */}\n                        {this.state.postList.length > 1 && ( \n                        <IconButton size=\"small\" color=\"inherit\" onClick={this.handleOpenPostDialog}>\n                            <AccountCircle />\n                        </IconButton>)}\n                        <IconButton className={classes.appNavbar} color=\"inherit\" onClick={this.handleMenuClick}><MenuIcon /></IconButton>\n                    </div>\n                </Toolbar>\n                <MobileDrawer menuItems={navBarItems} openDrawer={this.state.openDrawer} handleClickAway={this.handleClickAway} />\n\n                <ChangePostDialoge\n                    postLists={this.state.postList}//{['username@gmail.com', 'user02@gmail.com']}\n                    selectedPost={this.state.selectedPost}\n                    open={this.state.postList.length > 1 ? this.state.openPostDialog : false}\n                    onClose={this.handleClosePostDialog}\n                />\n                <GeneralDialog \n                    openDialogState = {this.state.openDialog}\n                    dialogTitle = {this.state.dialogTitle}\n                    dialogMsg = {this.state.dialogMsg}  \n                    handleClose={this.handleDialogClose}\n                    handleDialogOpen={this.handleDialogOpen}\n                >\n                    <Button onClick={this.handleDialogClose}>OK</Button>\n                </GeneralDialog>\n            </AppBar>\n        )\n    }\n}\n\nNavBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(NavBar));","import React from 'react';\nimport classNames from 'classnames';\n// import { Route, Switch, Redirect } from 'react-router-dom';\n import {NavLink} from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\n// import Grid from '@material-ui/core/Grid';\n\nimport Paper from '@material-ui/core/Paper';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = theme => ({\n    Card: { \n        // minWidth: '150px',\n        // display:'inline-block', \n        margin: '15px',\n        height:'82%',\n        position: 'relative',\n        color: 'white',\n        display: 'flex',\n        backgroundColor: 'black',\n        textDecoration : 'none',\n        [theme.breakpoints.down('sm')]: {\n            // display: 'flex',\n            margin: '5px',\n            minWidth: '150px',\n            height: 'auto'\n        },\n    },\n    CardButton: {\n        width:'100%',\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.dark\n        }\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE 11.\n        objectFit: 'cover',\n    },\n    primary: {\n        backgroundColor: 'rgba(0, 0, 255, 0.1)',\n    },\n    danger: {\n        backgroundColor: 'rgba(255, 0, 0, 0.1)',\n    },\n    alert: {\n        backgroundColor: 'rgba(155, 100, 0, 0.1)',\n    },\n    success: {\n        backgroundColor: 'rgba(0, 255, 0, 0.1)',\n    }\n})\n\nconst CardBox = props => {\n    let { classes } = props;\n\n    function getClassName(CardColor) {\n        switch (CardColor) {\n            case 'primary': return classes.primary\n            case 'danger': return classes.danger\n            case 'alert': return classes.alert\n            case 'success': return classes.success\n            default: return -1;\n        }\n    }\n\n    return (\n        <Zoom in={props.startAnimation}>\n            <Paper className={classNames(classes.Card, getClassName(props.CardColor))} component={NavLink} to={{ pathname: props.link, state: {dashboardButton : props.CardName} }}>\n                <div style={{margin: 'auto'}} >\n                    <CardContent>\n                        <Typography variant=\"display1\">{<props.CardIcon fontSize=\"large\" />}</Typography>\n                        <Typography variant=\"caption\">{props.CardName}</Typography>\n                            \n                        {(!props.fromAdmin) &&\n                        <Typography variant=\"caption\">Complaints</Typography>}\n\n                        <Typography variant=\"display2\">{props.CardValue}</Typography>\n                    </CardContent>\n                    <CardActions>\n                        {/* <Button className={classes.CardButton} size=\"small\" component={NavLink} to={{ pathname: '/Dashboard/Complaints/Table', state: {dashboardButton : props.CardName} }}>view</Button> */}\n                    </CardActions>\n                </div>\n            </Paper>\n        </Zoom>\n    )\n}\n\nCardBox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CardBox);","import React from 'react';\nimport classNames from 'classnames';\n// import { Route, Switch, Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\n// import Grid from '@material-ui/core/Grid';\n\nimport Paper from '@material-ui/core/Paper';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport CardIcon from '@material-ui/icons/ArrowForward';\n// import CardIdcon2 from '@material-ui/icons/AddAPhoto';\nimport Typography from '@material-ui/core/Typography';\n\n// import bgImage from '../res/newComplaint.png';\nimport { getCookie} from '../constants';\nimport { Tooltip } from '@material-ui/core';\n\n\nconst styles = theme => ({\n    imageClass: {\n\n    },\n    Card: {\n        // display:'inline-block',\n        minWidth: '250px', \n        marginTop: '15px',\n        height:'91%',\n        position: 'relative',\n        color: 'white',\n        //  display: 'flex',\n        //display: 'inline-block',\n        backgroundColor: 'black',\n        [theme.breakpoints.down('sm')]: {\n            minWidth: '150px',\n            margin: '5px'\n        }\n    },\n    CardButton: {\n        width:'100%',\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.dark\n        }\n    },\n    media: {\n        objectFit: 'cover',\n    },\n    primary: {\n        backgroundColor: 'rgba(0, 0, 255, 0.1)',\n    },\n    danger: {\n        backgroundColor: 'rgba(255, 0, 0, 0.1)',\n    },\n    alert: {\n        backgroundColor: 'rgba(155, 100, 0, 0.1)',\n    },\n    success: {\n        backgroundColor: 'rgba(0, 255, 0, 0.1)',\n    },\n    uppderDiv: {\n        width: '100%',\n        height: \"50%\",\n        display: 'flex',\n        backgroundColor: 'rgba(0, 0, 255, 0.3)',\n        backgroundOpacity: '0.1',\n        // backgroundImage: `url(${bgImage})`,\n        // backgroundSize: 'cover'\n        [theme.breakpoints.down('sm')]: {\n            // marginTop: '-66px',\n            display: 'none',\n        },\n    },\n    lowerDiv: {\n        width: '100%',\n        height: \"50%\",\n        textAlign: 'left',\n        padding: '20px',\n        [theme.breakpoints.down('sm')]: {\n            // marginTop: '-66px',\n            display: 'none',\n        },\n    },\n    mobileCard: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'inline-block',\n        },\n        display: 'none'\n    },\n    numberWrapper: {\n        display: 'flex',\n        width: '100%'\n    },\n    iconWrapper: {\n        display: 'flex',\n        width: '100%'\n    }\n})\n\nconst CardBox = props => {\n    let { classes } = props;\n\n    function getClassName(CardColor) {\n        switch (CardColor) {\n            case 'primary': return classes.primary\n            case 'danger': return classes.danger\n            case 'alert': return classes.alert\n            case 'success': return classes.success\n            default: return -1;\n        }\n    }\n\n    let postId =(JSON.parse(getCookie(\"roadGPortalCurrentPosts\"))).post_id;\n\n    return (\n        <Zoom in={props.startAnimation}>\n            <Paper className={classNames(classes.Card, getClassName(props.CardColor))} >\n                <Link to=\"/Dashboard/Complaints/Table\" style={{textDecoration: 'none'}}>\n                    {/* <div style={{ minWidth: '250px', }}> */}\n                        <div className={classes.uppderDiv}>\n                            <div className={classes.numberWrapper}>\n                                <Typography variant=\"display2\" style={{margin: 'auto auto 0px 0px', padding: '20px', color: 'white', textDecoration: ''}}>{props.CardValue}</Typography>\n                            </div>\n                            <div className={classes.iconWrapper} >\n                                <Typography variant=\"display1\" style={{margin: '0px 0px auto auto', padding: '20px', color: 'white'}}>{<CardIcon fontSize=\"large\" />}</Typography>                        </div>\n                        </div>\n                        <div className={classes.lowerDiv}>\n                            <Typography variant=\"title\" style={{color: 'rgba(0,0,0,0.54)'}}>{props.CardName} Complaints</Typography>\n                            <br />\n                            <br/>\n                            <Typography variant=\"Subheading\" style={{color: 'rgba(0,0,0,0.54)'}}>Logged in as :</Typography>\n                            <br/>\n                            <Tooltip title ={postId}><Typography variant=\"title\" style={{color: 'rgba(0,0,0,0.54)'}}>{postId.length > 15 ? (postId).slice(0,15)+\"...\" : postId}</Typography></Tooltip>\n                        </div>\n                    {/* </div> */}\n                    <div style={{margin: 'auto'}} className={classes.mobileCard} >\n                        <CardContent>\n                            <Typography variant=\"display1\">{<props.CardIcon fontSize=\"large\" />}</Typography>\n                            <Typography variant=\"caption\">{props.CardName}</Typography>\n                            <Typography variant=\"caption\">Complaints</Typography>\n                             <Typography variant=\"display2\">{props.CardValue}</Typography> \n                        </CardContent>\n                        <CardActions>\n                            {/* <Button className={classes.CardButton} size=\"small\" component={NavLink} to={{ pathname: '/Dashboard/Complaints/Table', state: {dashboardButton : props.CardName} }}>view</Button> */}\n                        </CardActions>\n                    </div>\n                </Link>\n            </Paper>\n        </Zoom>\n    )\n}\n\nCardBox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CardBox);\n","import React from 'react';\nimport classNames from 'classnames';\n// import { Route, Switch, Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\n// import Grid from '@material-ui/core/Grid';\n\nimport Paper from '@material-ui/core/Paper';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport CardIcon from '@material-ui/icons/ArrowForward';\n// import CardIdcon2 from '@material-ui/icons/AddAPhoto';\nimport Typography from '@material-ui/core/Typography';\n\n// import bgImage from '../res/newComplaint.png';\n\n\nconst styles = theme => ({\n    imageClass: {\n\n    },\n    Card: { \n        //minWidth: '300px',\n        // display:'inline-block', \n        margin: '15px',\n        height:'91%',\n        position: 'relative',\n        color: 'white',\n        //  display: 'flex'\n        //display: 'inline-block',\n        backgroundColor: 'black',\n        [theme.breakpoints.down('sm')]: {\n            // // marginTop: '-66px',\n            margin: '5px',\n             display: 'inline-block',\n            minWidth: '150px'\n        },\n    },\n    CardButton: {\n        width:'100%',\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.dark\n        }\n    },\n    media: {\n        objectFit: 'cover',\n    },\n    primary: {\n        backgroundColor: 'rgba(0, 0, 255, 0.1)',\n    },\n    danger: {\n        backgroundColor: 'rgba(255, 0, 0, 0.1)',\n    },\n    alert: {\n        backgroundColor: 'rgba(155, 100, 0, 0.1)',\n    },\n    success: {\n        backgroundColor: 'rgba(0, 255, 0, 0.1)',\n    },\n    uppderDiv: {\n        width: '100%',\n        height: \"50%\",\n        display: 'flex',\n        backgroundColor: 'rgba(255, 0, 0, 0.1)',\n        backgroundOpacity: '0.1',\n        // backgroundImage: `url(${bgImage})`,\n        // backgroundSize: 'cover'\n        [theme.breakpoints.down('sm')]: {\n            // marginTop: '-66px',\n            display: 'none',\n        },\n    },\n    lowerDiv: {\n        width: '100%',\n        height: \"50%\",\n        textAlign: 'left',\n        padding: '20px',\n        [theme.breakpoints.down('sm')]: {\n            // marginTop: '-66px',\n            display: 'none',\n        },\n    },\n    mobileCard: {\n        [theme.breakpoints.down('sm')]: {\n            // marginTop: '-66px',\n            display: 'inline-block',\n        },\n        display: 'none'\n    },\n    numberWrapper: {\n        display: 'flex',\n        width: '100%'\n    },\n    iconWrapper: {\n        display: 'flex',\n        width: '100%'\n    }\n})\n\nconst CardBox = props => {\n    let { classes } = props;\n\n    function getClassName(CardColor) {\n        switch (CardColor) {\n            case 'primary': return classes.primary\n            case 'danger': return classes.danger\n            case 'alert': return classes.alert\n            case 'success': return classes.success\n            default: return -1;\n        }\n    }\n\n    return (\n        <Zoom in={props.startAnimation}>\n            <Paper className={classNames(classes.Card, getClassName(props.CardColor))} >\n                <Link  to={{ pathname: \"/Dashboard/Complaints/Table\", state: {dashboardButton : props.CardName} }} style={{textDecoration: 'none'}} >\n                    <div className={classes.uppderDiv}>\n                        <div className={classes.numberWrapper}>\n                            <Typography variant=\"display2\" style={{margin: 'auto auto 0px 0px', padding: '20px', color: 'white', textDecoration: ''}}>{props.CardValue}</Typography>\n                        </div>\n                    </div>\n                    <div className={classes.lowerDiv}>\n                        <Typography variant=\"title\" style={{color: 'rgba(0,0,0,0.54)'}}>{props.CardName} Complaints</Typography>\n                    </div>\n                    <div style={{margin: 'auto'}} className={classes.mobileCard} >\n                        <CardContent>\n                            <Typography variant=\"display1\">{<props.CardIcon fontSize=\"large\" />}</Typography>\n                            <Typography variant=\"caption\">{props.CardName}</Typography>\n                            <Typography variant=\"caption\">Complaints</Typography>\n                            <Typography variant=\"display2\">{props.CardValue}</Typography>\n                        </CardContent>\n                        <CardActions>\n                            {/* <Button className={classes.CardButton} size=\"small\" component={NavLink} to={{ pathname: '/Dashboard/Complaints/Table', state: {dashboardButton : props.CardName} }}>view</Button> */}\n                        </CardActions>\n                    </div>\n                </Link>\n            </Paper>\n        </Zoom>\n    )\n}\n\nCardBox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CardBox);\n","import React, { Component } from 'react';\n// import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n// import Grid from '@material-ui/core/Grid';\n\nimport AllInbox from '@material-ui/icons/AllInbox';\nimport AddAlert from '@material-ui/icons/AddAlert';\nimport Timer from '@material-ui/icons/Timer';\nimport Check from '@material-ui/icons/Check';\n\n// import bgImage from '../res/rnb.svg';\n\nimport CardBox from '../Components/DashboardCard';\nimport NewComplaintCardBox from '../Components/newComplaintCard';\n// import DashboardCard from '../Components/DashboardCard';\nimport EmergencyCardBox from '../Components/EmergencyComplaintCard';\n\nimport { getCookie, url } from '../constants';\n\nconst styles = theme => ({\n    wrapper: {\n        // width: '100vw',\n        // marginTop: '-30px',\n        height: '100vh',\n        display: 'flex',\n        [theme.breakpoints.down('sm')]: {\n            marginTop: '-66px',\n        },\n    },\n    dashboardwrapper: {\n        marginTop: '120px',\n        [theme.breakpoints.down('sm')]: {\n            width: 'auto',\n            margin: 'auto'\n        },\n        margin: 'auto',\n    },\n    cardRoot: {\n        [theme.breakpoints.down('sm')]: {\n            // display: 'inline-block',\n            // marginTop: '0px'\n            'grid-template-columns': '1fr 1fr',\n            'grid-template-rows': '30vh 30vh',\n            margin: '0px'\n        },\n        marginTop: '-30px',\n        display: 'grid',\n        margin: 'auto',\n        'grid-template-columns': '2fr 1fr 1fr',\n        'grid-template-rows': '30vh 30vh'\n    },\n    card1: {\n        'grid-column': '1/2',\n        display: 'inline-block',\n        'grid-row': '1/3',\n        [theme.breakpoints.down('sm')]: {\n            'grid-column': '1/2',\n            display: 'inline-block',\n            'grid-row': '1/2',\n        },\n    },\n    card2: {\n\n        'grid-column': '2/4',\n        display: 'inline-block',\n        'grid-row': '1/2',\n        [theme.breakpoints.down('sm')]: {\n            'grid-column': '2/2',\n            display: 'inline-block',\n            'grid-row': '1/2',\n        },\n    },\n    card3: {\n\n        'grid-column': '2/3',\n        display: 'inline-block',\n        'grid-row': '2/3',\n        [theme.breakpoints.down('sm')]: {\n            'grid-column': '1/2',\n            display: 'inline-block',\n            'grid-row': '2/2',\n        },\n    },\n    card4: {\n\n        'grid-column': '3/4',\n        display: 'inline-block',\n        'grid-row': '2/3',\n        [theme.breakpoints.down('sm')]: {\n            'grid-column': '2/2',\n            display: 'inline-block',\n            'grid-row': '2/2',\n        },\n    }\n});\n\n\nclass DashboardRoot extends Component {\n\n    state = {\n        startAnimation: false,\n        newComplaints: 0,\n        emergency: 0,\n        completed: 0,\n        pending: 0,\n        openUpdateDialog: true,\n        cardData: [\n            {\n                name: \"New\",\n                value: 10,\n                icon: AllInbox,\n                color: \"primary\"\n            },\n            {\n                name: \"Emergency\",\n                value: 10,\n                icon: AddAlert,\n                color: \"danger\"\n            },\n            {\n                name: \"Pending\",\n                value: 10,\n                icon: Timer,\n                color: \"alert\"\n            },\n            {\n                name: \"Completed\",\n                value: 10,\n                icon: Check,\n                color: \"success\"\n            }\n        ]\n    }\n\n    componentWillMount() {\n        let headers = new Headers();\n        headers.append('origin', '*');\n        headers.append('auth', 'token ' + getCookie(\"roadGPortalAuth\"));\n\n        let req = new Request(url + \"newComplaintsCount\", {\n            method: \"GET\",\n            headers: headers,\n            mode: 'cors'\n        });\n\n        fetch(req)\n            .then(res => res.json())\n            .then(res => {\n                console.log(getCookie(\"isUpdated\"));\n                if (res.success) {\n                    this.setState({\n                        newComplaints: res.data.newComplaints,\n                        pending: res.data.pending,\n                        emergency: res.data.emergency,\n                        completed: res.data.completed,\n                        openUpdateDialog: (getCookie(\"isUpdated\") != 'true')\n                    })\n                } else {\n                    console.log(res);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    componentDidMount() {\n        this.setState({\n            startAnimation: true\n        })\n    }\n\n    handleClose = () => {\n        this.setState({ openUpdateDialog: false });\n    };\n\n    render() {\n        let { classes } = this.props;\n\n        return (\n            <div className={classes.wrapper} style={{ textAlign: 'center' }}>\n            \n                <div className={classes.dashboardwrapper}>\n                    <div className={classes.cardRoot}>\n                        <div className={classes.card1}><NewComplaintCardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[0].icon} CardName={this.state.cardData[0].name} CardValue={this.state.newComplaints} CardColor={this.state.cardData[0].color} /></div>\n                        <div className={classes.card2}><EmergencyCardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[1].icon} CardName={this.state.cardData[1].name} CardValue={this.state.emergency} CardColor={this.state.cardData[1].color} link={\"/Dashboard/Complaints/Table\"} /></div>\n                        <div className={classes.card3}><CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[2].icon} CardName={this.state.cardData[2].name} CardValue={this.state.pending} CardColor={this.state.cardData[2].color} link={\"/Dashboard/Complaints/Table\"} /></div>\n                        <div className={classes.card4}><CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[3].icon} CardName={this.state.cardData[3].name} CardValue={this.state.completed} CardColor={this.state.cardData[3].color} link={\"/Dashboard/Complaints/Table\"} /></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboardRoot.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DashboardRoot);","import React, { Component } from 'react';\n// import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiPickersUtilsProvider from 'material-ui-pickers/utils/MuiPickersUtilsProvider';\nimport DateFnsUtils from 'material-ui-pickers/utils/date-fns-utils';\nimport DatePicker from 'material-ui-pickers/DatePicker';\n\nimport Divider from '@material-ui/core/Divider';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport classnames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst styles = theme => ({\n    expand: {\n        transform: 'rotate(0deg)',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shortest,\n        }),\n        marginLeft: 'auto',\n        [theme.breakpoints.up('sm')]: {\n          marginRight: -8,\n        },\n      },\n      expandOpen: {\n        transform: 'rotate(180deg)',\n      },\n      alignLeft: {\n        display:'flex',justifyContent :'space-between',verticalAlign :'middle'\n      },\n      wrapperItem: {\n        marginLeft: '10px', marginRight:'10px',paddingLeft: '10px',paddingRight: '10px',paddingTop:'10px',paddingBottom:'10px', textAlign: 'left'\n      }\n})\n\nclass SideFilter extends Component {\n\n    state = {\n        name: [],\n        expandedDate : false,\n        expandedStatus : false,\n        expandedGriev : false,\n    };\n    \n    handleExpandClick = Eventame => {\n        this.setState(state => ({ [Eventame] : !state[Eventame] }));\n    };\n\n    handleChange = name => event => {\n        this.setState({\n          [name]: event.target.value,\n        });\n    };\n\n    \n    render() {\n\n        const { classes } = this.props;\n        const statusTypeRender = [];\n        this.props.status_type_map.forEach((value, key) => statusTypeRender.push(\n            <FormControlLabel key={key} checked={value} value={key} \n                            onChange={this.props.handleChange('status_type_map')} control={<Checkbox/>} label={key} />\n        ))\n\n        const grievTypeRender = [];\n        this.props.griev_type_map.forEach((value, key) => grievTypeRender.push(\n            <FormControlLabel key={key} checked={value} value={key} \n                            onChange={this.props.handleChange('griev_type_map')} control={<Checkbox/>} label={key} />\n        ))\n\n\n        return (\n            <div>                        \n                <div className={classes.wrapperItem} style={{paddingRight:'0px'}}>\n                    \n                    <div className={classes.alignLeft}>\n                        <TextField\n                                id=\"outlined-name\"\n                                style={{width:'100%'}}\n                                label=\"Search\"\n                                className={classes.textField}\n                                value={this.props.searchQuery}\n                                onChange={this.props.doSearch}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                />\n                    </div>\n                    <br/>\n                    <Divider />\n                </div>\n\n                <div className={classes.wrapperItem} style={{paddingRight:'0px'}}>\n\n                    <div className={classes.alignLeft}>\n                        <Typography variant=\"subheading\">Only Emergency Complaints</Typography>\n                        \n                        <Checkbox\n                            style={{padding:'0px'}}\n                            checked={!this.props.emergency_state}\n                            onChange={this.props.handleChange('emergency_state')}\n                            value=\"emergency\"/>\n                    </div>\n                    <br/>\n                    <Divider />\n                </div>\n                \n\n                <div className={classes.wrapperItem}>\n\n                    <div className={classes.alignLeft}>\n                        <Typography variant=\"subheading\">Complaint Status</Typography>\n                        <IconButton\n                            style={{padding:'0px'}}\n                            className={classnames(classes.expand, {\n                            [classes.expandOpen]: this.state.expandedStatus,\n                            })}\n                            onClick={this.handleExpandClick.bind(this,'expandedStatus')}\n                            aria-expanded={this.state.expandedStatus}\n                            aria-label=\"Show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    </div>\n                    <br />\n                    <Divider />\n                    <Collapse in={this.state.expandedStatus} timeout=\"auto\">\n                        <FormGroup>\n                            {statusTypeRender}\n                        </FormGroup>\n                    </Collapse>\n                </div>\n\n\n                <div className={classes.wrapperItem}>\n                    <div className={classes.alignLeft}>\n                        <Typography variant=\"subheading\">Grievance Type</Typography>\n                        <IconButton\n                            style={{padding:'0px'}}\n                            className={classnames(classes.expand, {\n                            [classes.expandOpen]: this.state.expandedGriev,\n                            })}\n                            onClick={() => this.handleExpandClick('expandedGriev')}\n                            aria-expanded={this.state.expandedGriev}\n                            aria-label=\"Show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    </div>\n                    <br />\n                    <Divider />\n                    <Collapse in={this.state.expandedGriev} timeout=\"auto\">\n                        <FormGroup>\n                            {grievTypeRender}\n                        </FormGroup>\n                    </Collapse>\n                </div>\n\n\n                <div className={classes.wrapperItem}>\n                    <div className={classes.alignLeft}>\n                        <Typography variant=\"subheading\" style={{textAlign: 'left'}}>Date</Typography>\n                        <IconButton\n                            style={{padding:'0px'}}\n                            className={classnames(classes.expand, {\n                            [classes.expandOpen]: this.state.expandedDate,\n                            })}\n                            onClick={() => this.handleExpandClick('expandedDate')}\n                            aria-expanded={this.state.expandedDate}\n                            aria-label=\"Show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    </div>\n                    <br />\n                    <Divider />\n                    <br />\n                    <Collapse in={this.state.expandedDate} timeout=\"auto\">\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Typography variant=\"caption\">Starting Date</Typography>\n\n                            <DatePicker\n                                value={this.props.StartingDate}\n                                onChange={this.props.handleStartingDateChange}\n                            />\n                        </MuiPickersUtilsProvider>\n                        <br /><br />\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Typography variant=\"caption\">Ending Date</Typography>\n                            <DatePicker \n                                value={this.props.EndingDate}\n                                onChange={this.props.handleEndingDateChange}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </Collapse>\n                    <br /><br />\n                    <Button onClick={this.props.exportExcel} href=\"\"> Export Selected Data to Excel </Button>\n                </div>\n                \n                {/* <Divider /> */}\n            </div>\n        )\n    }\n}\n\nSideFilter.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SideFilter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\n\nconst styles = theme => ({\n  root: {\n    maxWidth: '80%',\n    // flexGrow: 1,\n    margin: 'auto',\n    textAlign: 'center'\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    minHeight: 50,\n    paddingLeft: theme.spacing.unit * 4,\n    backgroundColor: theme.palette.background.default,\n    textAlign: 'left'\n  },\n  img: {\n    height: 'auto',\n    overflow: 'hidden',\n    display: 'block',\n    width: '100%',\n  },\n});\n\nclass ImageCarousel extends React.Component {\n    state = {\n        activeStep: 0,\n    };\n\n    handleNext = () => {\n        this.setState(prevState => ({\n            activeStep: prevState.activeStep + 1,\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(prevState => ({\n            activeStep: prevState.activeStep - 1,\n        }));\n    };\n\n    render() {\n        if(!this.props.postedUsers) {\n            return (<h1>Sorry</h1>)\n        }\n\n        const { classes, theme } = this.props;\n        const { activeStep } = this.state;\n        const maxSteps = this.props.postedUsers.length;\n\n        return (\n            <div className={classes.root}>\n                <img\n                    className={classes.img}\n                    src={this.props.isCompleted ? this.props.image : this.props.postedUsers[activeStep].url}\n                    //src={\"http://picsum.photos/300/300\"}\n                    alt={this.props.postedUsers[activeStep].userId}\n                />\n                <Paper square elevation={0} className={classes.header}>\n                    <Typography style={{textAlign: 'left'}}>\n                        { this.props.isCompleted ? \"After Completion\" : \n                        \"Description : \" + this.props.postedUsers[activeStep].description}\n                    </Typography>\n                </Paper>\n                {\n                    !this.props.isCompleted && (maxSteps > 1) && (\n                        <MobileStepper\n                            steps={maxSteps}\n                            position=\"static\"\n                            activeStep={activeStep}\n                            className={classes.mobileStepper}\n                            nextButton={\n                                <Button size=\"small\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\n                                Next\n                                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                                </Button>\n                            }\n                            backButton={\n                                <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\n                                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                                Back\n                                </Button> \n                            } />\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nImageCarousel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageCarousel);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport TextField from '@material-ui/core/TextField';\nimport Slide from '@material-ui/core/Slide';\n// import CardContent from '@material-ui/core/CardContent';\nimport Snackbar from '@material-ui/core/Snackbar';\n// import SnackbarContent from '@material-ui/core/SnackbarContent';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ImageCarousel from \"./ImageCarousel\";\nimport { getFormatedDate,openLocationInGoogleMaps, getCookie, url} from \"../constants\";\n\n\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n      },\n    ComplaintFullView: {\n        // overflow: 'hidden'\n        padding: '20px'\n    },\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    alignCenter: {\n        textAlign: 'center',\n        margin: 'auto'\n    },\n    paddingClass: {\n        // margin: '20px'\n    },\n    snackbar: {\n        background: theme.palette.primary.light,\n        // color: \"black\"\n    },\n\n    textField: {\n        // minWidth: '270px'\n        width: '100%',\n        // marginleft: '10px'\n    },\n    textWrapper: {\n        padding: '10px'\n    }, \n    formControl: {\n        minWidth: 280,\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n});\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n\n\nclass ComplaintFullView extends Component {\n\n    state = {\n        value: 0,\n        openSnackbarState: false,\n        snackbarMessage: '',\n        snackbarVarient: '',\n\n        comments : [],\n        Comment: null,\n        new_forword_complaint: \"\",\n        \n        show_new_complaint_status: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.complaint_status : \"Pending\",\n        show_new_isEmergency: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.isEmergency : false,\n\n        new_complaint_status: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.complaint_status : \"Pending\",\n        new_estimated_time: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.estimated_time : new Date(),\n        new_isEmergency: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.isEmergency : false,\n\n        srOfficerArray: [],\n        rejection_resons: []\n    }\n\n    handleIsEmergency = () => {        \n        this.setState(prevState => {\n            return { new_isEmergency: !(prevState.new_isEmergency) }\n        })\n    }\n\n    handleChange = e => {\n        this.setState({ Comment:\"\",[e.target.name]: e.target.value });\n    };\n\n    handleChangeComment = (comment) => {\n        this.setState({\n            Comment: comment\n        })\n    }\n    \n    handleSnackbarClose = () => {\n        this.setState({\n            openSnackbarState: false,\n            snackbarMessage: '',\n            snackbarVarient: {},\n        })\n    }\n\n\n\n\n    componentWillReceiveProps(nextProps) {\n       let ComplaintDialogData = nextProps.ComplaintDialogData;\n       \n       console.log(\"-----\");\n       console.log(ComplaintDialogData);\n\n        this.setState({\n            Comment: ComplaintDialogData ? ComplaintDialogData.comments[0] : null,\n            comments: ComplaintDialogData ? ComplaintDialogData.comments : [],\n            // new_forword_complaint: null,\n            isCompleted:ComplaintDialogData ? (ComplaintDialogData.complaint_status == \"Completed\" ? true : false ) : false,\n            new_complaint_status: ComplaintDialogData ? ComplaintDialogData.complaint_status : \"Pending\",\n            new_estimated_time: ComplaintDialogData && ComplaintDialogData.estimated_completion ? ComplaintDialogData.estimated_completion : new Date(),\n            new_isEmergency: ComplaintDialogData ? ComplaintDialogData.isEmergency : false\n        })\n    }\n\n    render() {\n        let props = this.props;\n        const { classes } = props;\n        const complaintData = props.ComplaintDialogData;\n\n        return (\n            <div>\n                <Dialog \n                \n                open={props.openComplaintDialogState}\n                onClose={props.handleComplaintDialogClose}\n                TransitionComponent={Transition}\n                className={classes.ComplaintFullView} >\n                    <Typography variant=\"subhading\" style={{marginLeft:'20px',marginRight:'10px', marginTop:'10px', padding:'10px', textAlign: 'left'}}>{(complaintData? complaintData.name : null)}</Typography>\n                    <Grid container  style={{ padding: '10px'}}>\n                        <Grid item xs={12} md={6} className={classes.paddingClass}>\n                            <ImageCarousel postedUsers={complaintData? complaintData.posted_users : null} />\n                        </Grid>\n                        {\n                            this.state.isCompleted &&\n                            (\n                                <Grid item xs={12} md={6} className={classes.paddingClass}>\n                                    <ImageCarousel isCompleted={true} image={complaintData ? complaintData.completed_complaint_url : \"\"} postedUsers={complaintData? complaintData.posted_users : null} />\n                                </Grid>\n                            )\n                        }\n                        {\n                            this.state.isCompleted &&\n                            (\n                                <Grid item xs={12} md={5} className={classes.paddingClass} style={{ margin: \"20px\", paddingLeft: \"10px\" }}>\n                                    <Typography>{ \"Emergency :   \".toUpperCase() + (complaintData? this.state.show_new_isEmergency ? \"YES\": \"NO\" : null)}</Typography>\n                                    <br/> \n                                    <Typography>{ \"Grievance :   \".toUpperCase() + (complaintData? complaintData.griev_type : null)} <Button color=\"secondary\" size=\"small\" style={{float: 'right', display: 'none'}}>view on map</Button></Typography>\n                                    <br />\n                                    <Typography>{ \"Status :   \".toUpperCase() + (complaintData? this.state.show_new_complaint_status : null)}</Typography>  \n                                </Grid>  \n                            )\n                        }\n                        <Grid item xs={12} md={5} className={classes.paddingClass} style={{ paddingLeft: '35px', paddingTop: '20px' }}>\n                            {\n                                !this.state.isCompleted && \n                                (\n                                    <div>\n                                    <Typography>{ \"Emergency :   \".toUpperCase() + (complaintData? this.state.show_new_isEmergency ? \"YES\": \"NO\" : null)}</Typography>\n                                    <br/> \n                                    <Typography>{ \"Grievance :   \".toUpperCase() + (complaintData? complaintData.griev_type : null)} <Button color=\"secondary\" size=\"small\" style={{float: 'right', display: 'none'}}>view on map</Button></Typography>\n                                    <br />\n                                    <Typography>{ \"Status :   \".toUpperCase() + (complaintData? this.state.show_new_complaint_status : null)}</Typography> \n                                    <br />\n                                    </div>\n                                )\n                            }\n                            <Typography>{ \"Date :   \".toUpperCase() + \n                            (complaintData\n                                        ? new Date(complaintData.time)\n                                            .toLocaleDateString(\"en-US\",{\n                                                weekday: 'long', \n                                                year: 'numeric', \n                                                month: 'long', \n                                                day: 'numeric' \n                                            }) \n                                        : null)}\n                            </Typography>\n                            { this.state.new_estimated_time ? \n                                <Typography><br />{ \"Estimated Date :   \".toUpperCase() + getFormatedDate(this.state.new_estimated_time)}</Typography> : null }\n                                <br/>\n                                <Button variant=\"outlined\" size=\"small\" style={{width:\"100%\"}} onClick={() => { openLocationInGoogleMaps(... (complaintData? complaintData.location: [1,2]) ) }}  color=\"secondary\">SHOW ON MAP</Button> \n                        </Grid> \n                    </Grid>\n                </Dialog>\n\n                <Snackbar\n                    anchorOrigin={{ vertical : 'bottom', horizontal : 'left' }}\n                    open={this.state.openSnackbarState}\n                    autoHideDuration={5000}\n                    onClose={this.handleSnackbarClose}\n                    ContentProps={{\n                    'aria-describedby': 'message-id',\n                    }}\n                    message={\n                        <span id=\"message-id\" >{this.state.snackbarMessage}</span>\n                    } />\n            </div>\n        );\n    }\n}\n\nComplaintFullView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    };\n\nexport default withStyles(styles)(ComplaintFullView);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst styles = theme => ({\n  dialog: {\n    // width: \"100%\",\n    // marginTop: theme.spacing.unit * 3,\n    // overflowX: \"auto\"\n  },\n  table: {\n    // minWidth: 700\n    // width: '80%'\n  },\n});\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass History extends Component {\n\n  componentWillReceiveProps() {\n    console.log(\"--------------------------------------------------\");\n    console.log(\"History\", this.props.open);\n  }\n\n  render() {\n    const { classes, data } = this.props;\n\n    return (\n      <Dialog open={this.props.open} maxWidth=\"lg\" className={classes.dialog} onClose={this.props.onClose} TransitionComponent={Transition}>\n        <div style={{ overflowX: 'auto' }}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Date</TableCell>\n                <TableCell>Operation</TableCell>\n                <TableCell>Comment By Officer</TableCell>\n                <TableCell>Under</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map((item, index) => [\n                <TableRow>\n                  <TableCell>{item.time}</TableCell>\n                  <TableCell style={{ maxWidth: '200px' }}>{item.complaint_operation}</TableCell>\n                  <TableCell>{item.complaint_comment}</TableCell>\n                  <TableCell>{item.changes_by.name}</TableCell>\n                </TableRow>\n              ])}\n            </TableBody>\n          </Table>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nHistory.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(History);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport MuiPickersUtilsProvider from 'material-ui-pickers/utils/MuiPickersUtilsProvider';\nimport DateFnsUtils from 'material-ui-pickers/utils/date-fns-utils';\nimport DatePicker from 'material-ui-pickers/DatePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Slide from '@material-ui/core/Slide';\n// import CardContent from '@material-ui/core/CardContent';\nimport Snackbar from '@material-ui/core/Snackbar';\n// import SnackbarContent from '@material-ui/core/SnackbarContent';\nimport green from '@material-ui/core/colors/green';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport amber from '@material-ui/core/colors/amber';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport ImageCarousel from \"./ImageCarousel\";\nimport History from \"./History\";\nimport { host, getFormatedDate,openLocationInGoogleMaps, getCookie, url, hierarchy } from \"../constants\";\nimport { tr } from 'date-fns/esm/locale';\n// import { tr } from 'date-fns/esm/locale';\n\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n      },\n    ComplaintFullView: {\n        // overflow: 'hidden'\n    },\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    alignCenter: {\n        textAlign: 'center',\n        margin: 'auto'\n    },\n    paddingClass: {\n        marginTop: '20px'\n    },\n    snackbar: {\n        background: theme.palette.primary.light,\n        // color: \"black\"\n    },\n\n    textField: {\n        // minWidth: '270px'\n        width: '100%',\n        // marginleft: '10px'\n    },\n    textWrapper: {\n        padding: '10px'\n    }, \n    formControl: {\n        minWidth: 280,\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n});\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass CommentComponent extends Component{\n    state={\n        comment:\"\",\n        comment_error:null,\n        comment_helper_text:\"\",\n    }\n\n    handleComment = e => {\n            this.setState({\n                Comment: e.target.value\n            })\n            this.props.handleChangeComment(e.target.value)\n        }\n    render(){\n        let props = this.props;\n        const { textField } = props;\n        \n        return(\n            <TextField\n            id=\"Comment\"\n            label=\"Remark\"\n            multiline\n            shrink=\"true\"\n            value={props.comment}\n            error={this.state.comment_error}\n            helperText={this.state.comment_helper_text}\n            rows={props.lines}\n            onChange={this.handleComment}\n            // defaultValue=\"Enter Your Coment Here..\"\n            className={textField}\n            // InputLabelProps={{\n            //     shrink: false,\n            // }}\n            style={{margin: '0px'}}\n            margin=\"normal\" />\n\n        );\n    }\n}\n\nclass ComplaintFullView extends Component {\n\n    state = {\n        value: 0,\n        history_name:\"HISTORY\",\n        openSnackbarState: false,\n        snackbarMessage: '',\n        snackbarVarient: '',\n        comments : [],\n        Comment: null,\n        new_forword_complaint: \"\",\n        \n        show_new_complaint_status: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.complaint_status : \"Pending\",\n        show_new_isEmergency: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.isEmergency : false,\n\n        new_complaint_status: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.complaint_status : \"Pending\",\n        new_estimated_time: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.estimated_time : new Date(),\n        new_isEmergency: this.props.ComplaintDialogData ? this.props.ComplaintDialogData.isEmergency : false,\n\n        isComplted:this.props.ComplaintDialogData ? (this.props.ComplaintDialogData.complaint_status==\"Completed\" ?true:false) : false,      \n\n        srOfficerArray: [],\n        rejection_resons: [],\n        fileUploadBtn: 'Upload Image',\n        fileUploadBtnColor: '',\n        fileUploadName: '',\n        uploadFile:\"\",\n        isRetry:false,\n        isSaving: false,\n\n        //history dialog\n        history_open: false,\n        history : []\n    }\n\n    handleIsEmergency = () => {        \n        this.setState(prevState => {\n            return { new_isEmergency: !(prevState.new_isEmergency) }\n        })\n    }\n\n    // handleEstimatedDateChange = (date) => {\n    //     this.setState({ new_estimated_time: date });\n    // }\n\n    handleChange = e => {\n        this.setState({ Comment:\"\",[e.target.name]: e.target.value });\n    };\n\n    handleChangeComment = (comment) => {\n        this.setState({\n            Comment: comment\n        })\n    }\n    handleSave = () => {        \n        // updateComplaint\n        \n        if(this.state.new_complaint_status == \"Rejected\" && ( this.state.Rejection_Reason == \"\" || this.state.Rejection_Reason == null ) ) {\n            this.setState({\n                openSnackbarState: true,\n                snackbarMessage: 'Please select a rejection reason',\n                snackbarStyle: {\n                    backgroundColor: green[600],\n                    display: 'flex',\n                },\n            }) \n            return;\n        }\n       \n        if(this.state.Comment == \"\" || this.state.Comment == null  ) {\n            this.setState({\n                openSnackbarState: true,\n                snackbarMessage: 'Please Enter Remark',\n                snackbarStyle: {\n                    backgroundColor: green[600],\n                    display: 'flex',\n                },\n            }) \n            return;\n        }\n        \n        \n        Date.prototype.withoutTime = function () {\n            var d = new Date(this);\n            d.setHours(0, 0, 0, 0);\n            return d;\n        }\n        let today = new Date();\n        \n        this.setState({\n            new_estimated_time: new Date(this.state.new_estimated_time)\n        },async () => {\n\n            console.log(this.state.new_estimated_time);\n            \n\n            if(this.state.new_estimated_time.withoutTime() < today.withoutTime()) {\n                this.setState({\n                    openSnackbarState: true,\n                    snackbarMessage: 'Invalid Date',\n                    snackbarStyle: {\n                        backgroundColor: green[600],\n                        display: 'flex',\n                    },\n                })    \n            }\n            // console.log(this.state);\n            \n\n            // this.setState({\n            //     openSnackbarState: true,\n            //     snackbarMessage: this.state.new_estimated_time,\n            // })\n\n            // return;\n\n\n            let extraChange =  async () => {\n                let finalObj = {};\n\n                if(this.state.new_complaint_status==\"Completed\") {\n                    let res = await this.handleFileFetch(this.state.uploadFile)\n                    if(res.success){\n                        finalObj['completed_complaint_url'] = res.data;\n                    }    \n            \n                }\n\n                return finalObj;\n            }\n\n            this.setState({\n                isSaving: true\n            })\n\n            let reqBody = {\n                complaint_id: this.props.ComplaintDialogData._id, \n                complaint_status: this.state.new_complaint_status,\n                isEmergency: this.state.new_isEmergency,\n                comment: this.state.Comment,\n                completed_complaint_url: \"\",\n                ... (await extraChange())\n            }    \n\n            fetch(url + \"updateComplaint/\", {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'auth': 'token ' + getCookie(\"roadGPortalAuth\")\n                    },\n                    method: \"POST\",\n                    body: JSON.stringify(reqBody)\n                }\n            )\n            .then(res => res.json())\n            .then(res => {\n                if(res.success) {\n                    this.setState({\n                        openSnackbarState: true,\n                        snackbarMessage: 'Complaint has been updated',\n                        show_new_complaint_status :reqBody.complaint_status,\n                        show_new_isEmergency: reqBody.isEmergency,\n                        isSaving: false,\n                        Comment:\"\",\n                    })\n\n                    reqBody['completed_complaint_url'] = host + \"/api/android/image/\" + reqBody['completed_complaint_url'];\n\n                    this.props.handleIndividualComplaintChange(reqBody,false);\n                    if(this.state.new_complaint_status == \"Completed\")\n                        this.props.handleComplaintDialogClose();\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                this.setState({\n                    openSnackbarState: true,\n                    snackbarMessage: err.message,\n                    isSaving: false,\n                    Comment:\"\",\n                })\n            });\n            \n        });\n    }\n\n    handleForeword = () => {\n\n        if(this.state.Comment == \"\" || this.state.Comment == null  ) {\n            this.setState({\n                openSnackbarState: true,\n                snackbarMessage: 'Please Enter comment',\n                snackbarStyle: {\n                    backgroundColor: green[600],\n                    display: 'flex',\n                },\n            }) \n            return;\n        }\n\n        this.setState({\n            isSaving: true\n        })\n        \n        fetch(url + \"forewordComplaint/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'auth': 'token ' + getCookie(\"roadGPortalAuth\")\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n                officerId: this.state.new_forword_complaint,\n                complaint_id: this.props.ComplaintDialogData._id\n            })\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log(\"foreword complaint response\", res);\n            this.props.handleIndividualComplaintChange(this.props.ComplaintDialogData,true);\n            if(res.success) {\n                this.setState({\n                    openSnackbarState: true,\n                    snackbarMessage: 'Complaint is now forwarded',\n                    isSaving: false\n                })\n                this.props.handleComplaintDialogClose();\n            }\n        })\n        .catch(err => {\n            console.log(err);\n            this.setState({\n                openSnackbarState: true,\n                snackbarMessage: err.message,\n                isSaving: false\n            })\n        });\n    }\n\n    handleTabChange = (event, value) => {\n        this.setState({ value });\n        this.setState({ Comment:\"\"}); \n    }\n    \n\n    handleSnackbarClose = () => {\n        this.setState({\n            openSnackbarState: false,\n            snackbarMessage: '',\n            snackbarVarient: {},\n        })\n    }\n\n    read() {\n        fetch(url + \"manage/rejections/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"GET\",\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.success){\n                this.setState({\n                    rejection_resons: res.data\n                })\n            }else {\n                console.log(\"Err\", res.data);\n                alert(res.data);                \n            }\n        })\n        .catch(err => {\n            console.log(\"new errre\",err);\n        });\n    }\n\n\n    componentWillMount() {\n        \n        console.log(\"will mount\");\n        fetch(url + \"getSrIdsForeword/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'auth': 'token ' + getCookie(\"roadGPortalAuth\")\n            },\n            method: \"GET\",\n        })\n        .then(res => res.json())\n        .then(res => {\n             console.log(\"Foreword Complaints\", res);\n            if(res.success) {\n                this.setState({\n                    srOfficerArray: res.data\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err);\n            this.setState({\n                openSnackbarState: true,\n                snackbarMessage: err.message,\n            })\n        });\n    }\n\n    componentDidMount() {\n        console.log(\"Did mount\");\n        this.read();\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"will receive props\", this.props.ComplaintDialogData);\n\n        let ComplaintDialogData = nextProps.ComplaintDialogData;\n       \n        let setStateData = {\n            fileUploadBtn: 'Upload Image',\n            fileUploadBtnColor: '',\n            fileUploadName: '',\n            uploadFile:\"\",\n            isRetry:false,\n            Comment: \"\",\n            comments: ComplaintDialogData ? ComplaintDialogData.comments : [],\n            // new_forword_complaint: null,\n            show_new_complaint_status: ComplaintDialogData ? ComplaintDialogData.complaint_status : \"Pending\",\n            show_new_isEmergency: ComplaintDialogData ? ComplaintDialogData.isEmergency : false,\n            isComplted:ComplaintDialogData ? (ComplaintDialogData.complaint_status == \"Completed\" ? true : false ) : false,      \n            new_complaint_status: ComplaintDialogData ? ComplaintDialogData.complaint_status : \"Pending\",\n            new_estimated_time: ComplaintDialogData && ComplaintDialogData.estimated_completion ? ComplaintDialogData.estimated_completion : new Date(),\n            new_isEmergency: ComplaintDialogData ? ComplaintDialogData.isEmergency : false\n        }\n\n        console.log(nextProps,this.props.ComplaintDialogData,nextProps.ComplaintDialogData != this.props.ComplaintDialogData);\n        \n        if(nextProps.ComplaintDialogData != null && nextProps.ComplaintDialogData != this.props.ComplaintDialogData ){\n            console.log(\"if called\")\n            setStateData.history=[]\n            setStateData.value=0\n        }\n\n        console.log(\">>>>>\" ,this.props.ComplaintDialogData ? this.props.ComplaintDialogData.complaint_status : \"\");\n        console.log(\"-----\");\n       \n       console.log(\"ComplaintDialogDta: \",ComplaintDialogData);\n\n        this.setState({...setStateData})\n    }\n\n    handleFileFetch = async (file) => {\n        let formData = new FormData();\n        formData.append('file', file);\n        \n        return await fetch(host + \"/api/android/image\", {\n            headers: {\n                'Accept': 'application/json',\n            },\n            method: \"POST\",\n            body: formData\n        })\n        .then(res => res.json());\n    }\n\n    handleFileUpload = async () => {\n        var input = document.createElement('input');\n        input.onchange = (event) => {\n            let fileName = input.value.split('\\\\')\n            fileName = fileName.pop();\n\n            console.log(\"file : \", input.files[0].size);\n            if((input.files[0].size) > 300000){\n                this.setState({\n                    openSnackbarState:true,\n                    snackbarMessage: 'File Size must not exceed 300kb',\n                })\n                return;\n            }\n\n            let genName = (date) => {\n                let d = new Date(date);\n                let name = \"IMG_\" + d.getDate() + (d.getMonth() + 1) + d.getFullYear() + \"_\" + d.getHours() + d.getMinutes() + d.getSeconds() + \".jpg\";\n                return name;\n            }\n            \n            let blob = input.files[0].slice(0, input.files[0].size, 'image/jpg'); \n            let newFile = new File([blob], genName(new Date()), {type: 'image/jpg'});\n            \n            this.setState({\n                isRetry:true,\n                fileUploadBtn: 'File Selected',\n                fileUploadBtnColor: 'green'\n            })\n\n            this.setState({\n                uploadFile:newFile,\n            })\n            \n\n        }\n        input.accept = 'image/*'\n        input.type = 'file';\n        input.click();\n    }\n\n    render() {\n\n        console.log(this.state);\n        \n        let props = this.props;\n        const { classes } = props;\n        const complaintData = props.ComplaintDialogData;\n\n        let lastGrid = (complaintData) => {\n            return (\n                <div>\n                    <Typography>{ \"Emergency :   \".toUpperCase() + (complaintData? this.state.show_new_isEmergency ? \"YES\": \"NO\" : null)}</Typography>\n                    <br/>\n                    <Tooltip title={complaintData? \"Location : \"+complaintData.location.join(\",\"):\"\"}>\n                    <Button variant=\"outlined\" \n                    size=\"small\" style={{ width: '70%' }} onClick={() => { openLocationInGoogleMaps(... (complaintData? complaintData.location: [1,2]) ) }}  color=\"secondary\">SHOW ON MAP</Button>\n                    </Tooltip>\n                    <br/><br/>\n                    <Button variant=\"outlined\" \n                    disabled={this.state.history_name==\"HISTORY\"?false:true}\n                    size=\"small\" style={{ width: '70%' }} onClick={() => {\n                        this.setState({\n                            history_name:\"FETCHING HISTORY..\"\n                        })\n                        fetch(url + \"getComplaintHistory/?complaint_id=\"+this.props.ComplaintDialogData._id, {\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json',\n                                    'auth': 'token ' + getCookie(\"roadGPortalAuth\")\n                                },\n                                method: \"GET\",\n                            })\n                            .then(res => res.json())\n                            .then(res => {\n                                console.log(\"kaushik\",res);\n                                if(res.success) {\n                                    if(res.data !=null ){\n                                        this.setState({\n                                            history:res.data,\n                                            history_open: true,\n                                            history_name:\"HISTORY\"\n                                        })   \n                                    }\n                                \n                                }\n                            })\n                            .catch(err => {\n                                this.setState({\n                                    history_name:\"HISTORY\"\n                                })\n                                console.log(err);\n                            });\n                            \n\n                    }} color=\"secondary\">{this.state.history_name}</Button>\n                   \n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Dialog\n                fullScreen\n                open={props.openComplaintDialogState}\n                onClose={props.handleComplaintDialogClose}\n                TransitionComponent={Transition}\n                className={classes.ComplaintFullView} >\n                    <AppBar className={classes.appBar} color=\"inherit\">\n                        <Toolbar>\n                            <IconButton color=\"inherit\" onClick={props.handleComplaintDialogClose} aria-label=\"Close\">\n                                <CloseIcon />\n                            </IconButton>\n                            {/* <Button color=\"inherit\" onClick={this.handleSave}>\n                                Save\n                            </Button> */}\n                        </Toolbar>\n                    </AppBar>\n                {/* complaint content here */}\n                    <Grid container style={{ paddingRight: '10px' }}>\n                        <Grid item xs={12} md={4} className={classes.paddingClass}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    <ImageCarousel postedUsers={complaintData? complaintData.posted_users : null} />\n                                </Grid>\n                                <Grid item xs={12}>\n                                  <br/>\n                                    <Typography variant=\"subhading\" style={{textAlign: 'center'}}>{(complaintData? complaintData.name : null)}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} md={8} className={classes.paddingClass} >\n                           \n                            \n                            <Grid container>\n\n                                {\n                                    this.state.isComplted\n                                    &&\n                                    (\n                                        <Grid xs={12} md >\n                                            <ImageCarousel isCompleted={true} image={complaintData ? complaintData.completed_complaint_url : \"\"} postedUsers={complaintData? complaintData.posted_users : null} />\n                                        </Grid>\n                                    )\n                                }\n                                <Grid item xs={12} md>\n                                <Typography>{ \"Grievance :   \".toUpperCase() + (complaintData? complaintData.griev_type : null)} <Button color=\"secondary\" size=\"small\" style={{float: 'right', display: 'none'}}>view on map</Button></Typography>\n                                <br />\n                                <Typography>{ \"Status :   \".toUpperCase() + (complaintData? this.state.show_new_complaint_status : null)}</Typography>\n                                <br />\n                                <Typography>{ \"Date :   \".toUpperCase() + \n                                (complaintData\n                                            ? new Date(complaintData.time)\n                                                .toLocaleDateString(\"en-US\",{\n                                                    weekday: 'long', \n                                                    year: 'numeric', \n                                                    month: 'long', \n                                                    day: 'numeric' \n                                                }) \n                                            : null)}\n                                </Typography>\n                               \n                                { this.state.new_estimated_time ? \n                                \n                                <Typography><br />{ \"Estimated Date :   \".toUpperCase() + getFormatedDate(this.state.new_estimated_time)}</Typography> : null }\n                                <br />\n                                {\n                                    this.state.isComplted \n                                    &&\n                                    lastGrid(complaintData)\n                                }\n                                </Grid>\n\n                                {\n                                    !this.state.isComplted\n                                    &&\n                                    (\n                                        <Grid xs={12} md >\n                                            {lastGrid(complaintData)}\n                                        </Grid>\n                                    )\n                                }\n                            </Grid>\n\n\n                            <br /> \n                                <Paper className={classes.root} style={{ display: this.state.isComplted == true  ? \"none\" :\"block\" }}>\n                            <Tabs\n                            value={this.state.value}\n                            onChange={this.handleTabChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            centered\n                            >\n                            <Tab label=\"UPDATE\" />\n\n                            {\n                            (getCookie(\"roadGPortalRole\") !== hierarchy[hierarchy.length - 1]) &&\n                            <Tab label=\"FORWARD COMPLAIN\" />\n                            }\n                            </Tabs>\n                          </Paper>\n                         <Divider style={{ display: this.state.isComplted == true  ? \"none\" :\"block\" }}/>\n                            {\n                            this.state.value==0 &&\n                            <Paper style={{ display: this.state.isComplted == true  ? \"none\" :\"block\" }} >\n                            <Grid container >\n                                <Grid item xs={12} md className={classes.textWrapper}>\n                                    <Grid container>\n                                        <Grid item xs={12} className={classes.textWrapper}>\n                                            <FormControlLabel\n                                                checked={this.state.new_isEmergency}\n                                                onChange={this.handleIsEmergency}\n                                                value=\"isEmergency\"\n                                                control={ <Checkbox /> }\n                                                label=\"Mark Complaint as Emergency\" />\n                                        </Grid>\n                                        <Grid item xs={12} className={classes.textWrapper}>\n                                            <FormControl className={classes.formControl}>\n                                                <InputLabel htmlFor=\"new_complaint_status\">Change Complaint Status</InputLabel>\n                                                <Select\n                                                    value={this.state.new_complaint_status}\n                                                    onChange={this.handleChange}\n                                                    inputProps={{\n                                                        name: 'new_complaint_status',\n                                                        id: 'new_complaint_status',\n                                                    }} >\n\n                                                {this.props.ComplaintDialogData && this.props.ComplaintDialogData.complaint_status === \"Pending\" &&\n                                                    ([<MenuItem value=\"Pending\" disabled>Pending</MenuItem>,\n                                                     <MenuItem value=\"Approved\">Approve</MenuItem>,\n                                                     <MenuItem value=\"Rejected\">Reject</MenuItem>])\n                                                }\n\n                                                {this.props.ComplaintDialogData && this.props.ComplaintDialogData.complaint_status === \"Approved\" &&\n                                                    ([<MenuItem value=\"Approved\" disabled>Approved</MenuItem>,\n                                                    <MenuItem value=\"Rejected\">Reject</MenuItem>,\n                                                    <MenuItem value=\"In Progress\">In Progress</MenuItem>])}\n                                                    \n                                                {this.props.ComplaintDialogData && this.props.ComplaintDialogData.complaint_status === \"Rejected\" &&\n                                                    ([<MenuItem value=\"Rejected\">Rejected</MenuItem>,\n                                                    <MenuItem value=\"Approved\">Approve</MenuItem>])}\n                                                \n                                                {this.props.ComplaintDialogData && this.props.ComplaintDialogData.complaint_status === \"In Progress\" &&\n                                                    ([<MenuItem value=\"In Progress\">In Progress</MenuItem>,\n                                                    <MenuItem value=\"Completed\">Complete</MenuItem>])}\n                                                \n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                        {/* <Grid item xs={12} className={classes.textWrapper}>\n                                            <br />\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <Typography variant=\"caption\">Set Estimated Date</Typography>\n                                            <DatePicker \n                                                error={this.state.estimated_time_Error}\n                                                helperText={this.state.estimated_time_helper_text}\n                                                value={this.state.new_estimated_time}\n                                                onChange={this.handleEstimatedDateChange}\n                                                style={{width: '100%'}}\n                                            />\n                                            </MuiPickersUtilsProvider>\n                                        </Grid> */}\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12} md className={classes.textWrapper}>\n                                        \n                                        <CommentComponent comment={this.state.Comment} handleChangeComment={this.handleChangeComment} textField={classes.textField} lines={5}/>\n\n                                </Grid>\n\n                            </Grid>\n                            <Grid item xs={12} md className={classes.textWrapper} >\n                                {\n                                    this.state.new_complaint_status == \"Completed\" &&\n                                        <Button onClick={this.handleFileUpload} variant=\"contained\" color=\"primary\" style={{marginRight:\"10px\", marginBottom: '20px', backgroundColor: this.state.fileUploadBtnColor, color: 'white' }} >\n                                            {this.state.fileUploadBtn}\n                                            <CloudUploadIcon style={{marginLeft:\"10\"}}/>\n                                        </Button>\n                                }\n                                {\n                                    this.state.new_complaint_status == \"Completed\" &&\n                                    this.state.isRetry &&\n                                        <Button onClick={this.handleFileUpload} variant=\"contained\" color=\"primary\" style={{ backgroundColor:\"red\", marginBottom: '20px', color: 'white' }} >\n                                            Retry\n                                        </Button>\n                                }\n                                {\n                                        this.state.new_complaint_status == \"Rejected\"\n                                        &&\n                                        <div>\n                                            <FormControl style={{marginLeft:'10px',width: '70%'}} className={classes.formControl} >\n                                                <InputLabel htmlFor=\"Rejection_Reason\" shrink >Rejection Reason</InputLabel>\n                                                <Select\n                                                    // multiline\n                                                    value={this.state.Rejection_Reason}\n                                                    onChange={this.handleChange}\n                                                    inputProps={{\n                                                        name: 'Rejection_Reason',\n                                                        id: 'Rejection_Reason',\n                                                    }}\n                                                    fullWidth >\n                                                    {\n                                                        this.state.rejection_resons.map((item, index) => {\n                                                            return (\n                                                                <MenuItem key={index} value={item.name}>{item.name}</MenuItem>\n                                                            )\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                            <br/><br/>\n                                        </div>\n                                    }\n                                            \n                                <Button variant=\"raised\" onClick={this.handleSave} style={{width: '100%', color: 'white'}} color=\"secondary\" disabled={this.state.isSaving}>{!this.state.isSaving ? \"Save\" : \"Saving...\"}</Button>\n                                    </Grid>\n                             </Paper>\n                            }\n                            {\n                            (getCookie(\"roadGPortalRole\") !== hierarchy[hierarchy.length - 1])\n                            && this.state.value==1 &&\n                            <Paper style={{padding:'10px',textAlign: \"center\",display:this.state.value==1?\"\":\"none\"}}>\n        \n                               <Grid container>\n                               <Grid item xs={12} md className={classes.textWrapper}> \n                               <br/>\n                               <FormControl style={{width: '100%'}} className={classes.formControl} >\n                                    <InputLabel htmlFor=\"new_forword_complaint\">Forward Complaint To</InputLabel>\n                                    <Select\n                                        value={this.state.new_forword_complaint}\n                                        onChange={this.handleChange}\n                                        inputProps={{\n                                            name: 'new_forword_complaint',\n                                            id: 'new_forword_complaint',\n                                        }} >\n                                        {\n                                            this.state.srOfficerArray.map(item => (\n                                                <MenuItem value={item._id}>{item.officer_id.name} ({item.officer_type})</MenuItem>\n                                            ))\n                                        }\n                                \n                                    </Select>\n                                </FormControl>\n                                        \n                                    </Grid>\n                                    <Grid item xs={12} md className={classes.textWrapper}>\n                                        <CommentComponent handleChangeComment={this.handleChangeComment} comment={this.state.comment} textField={classes.textField} lines={2}/>\n                                    </Grid>\n                                    </Grid>\n                                    <br/>\n                                    <Button variant=\"raised\" style={{width: '100%', color: 'white'}} onClick={this.handleForeword} color=\"secondary\" disabled={this.state.isSaving} >{this.state.isSaving ? \"Forwording\" : \"Forword\"}</Button>\n                          </Paper>\n                            }\n                            <History open={this.state.history_open} onClose={() => {\n                                this.setState({\n                                    history_open: false\n                                })\n                            }} data={this.state.history}>\n                            </History>\n                            \n                        </Grid>\n                    </Grid>\n                </Dialog>\n\n                <Snackbar\n                    anchorOrigin={{ vertical : 'bottom', horizontal : 'left' }}\n                    open={this.state.openSnackbarState}\n                    autoHideDuration={5000}\n                    onClose={this.handleSnackbarClose}\n                    ContentProps={{\n                    'aria-describedby': 'message-id',\n                    }}\n                    message={\n                        <span id=\"message-id\" >{this.state.snackbarMessage}</span>\n                    } />\n            </div>\n        );\n    }\n}\n\nComplaintFullView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    };\n\nexport default withStyles(styles)(ComplaintFullView);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MO_ComplaintFullView from \"../Components/MO_ComplaintFullView\"\nimport ComplaintFullView from \"../Components/ComplaintFullView\";\n\n// import Card from '@material-ui/core/Card';\n\nconst styles = theme => ({\n\n})\n\nclass ComplaintTable extends Component {\n\n    state = {\n        page: 0,\n        rowsPerPage: 10,\n        openComplaintDialogState: false,\n        ComplaintDialogData: null\n    };\n\n    //-----------------------------------------\n    //handling complaint full view\n    handleComplaintDialogClose = () => {\n        this.setState({\n            openComplaintDialogState: false\n        })\n    }\n\n    handleComplaintDialogOpen = (ComplaintDialogData) => {\n        this.setState({\n            ComplaintDialogData: ComplaintDialogData,\n            openComplaintDialogState: true\n        })\n    }\n    //----------------------------------------------\n\n\n    //----------------------------------------------\n    //handling table pagination\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n      };\n    \n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    //----------------------------------------------\n\n    render() {\n        // let { classes } = this.props;\n        const { rowsPerPage, page } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, this.props.complaintsData.length - page * rowsPerPage);\n\n        return (\n            <Paper style={{'padding' : '5px'}}>\n                {this.props.manageOfficer\n                \n                ?(<MO_ComplaintFullView ComplaintDialogData={this.state.ComplaintDialogData} handleComplaintDialogClose={this.handleComplaintDialogClose} openComplaintDialogState={this.state.openComplaintDialogState}  handleIndividualComplaintChange={this.props.handleIndividualComplaintChange}/>)\n                :(<ComplaintFullView ComplaintDialogData={this.state.ComplaintDialogData} handleComplaintDialogClose={this.handleComplaintDialogClose} openComplaintDialogState={this.state.openComplaintDialogState}  handleIndividualComplaintChange={this.props.handleIndividualComplaintChange}/>)\n                }\n                \n                <Toolbar>\n                    <Grid container>\n                        <Grid item xs style={{display : 'flex',overflow:'auto'}}>\n                            \n                            <div style={{'flex' : 1,height:'56px',marginTop : '10px'}}>\n                            <Typography variant=\"headline\" style={{display:'inline-block'}}>\n                                {this.props.complaintsData.length + \"\"} \n                            </Typography>\n\n                            <Typography variant=\"subheading\" style={{display:'inline-block'}}>\n                                &nbsp;&nbsp;Complaints\n                            </Typography>\n                            </div>\n\n                            <TablePagination\n                                style={{'padding' : 0,'flex' : 1}}\n                                component=\"div\"\n                                count={this.props.complaintsData.length}\n                                rowsPerPageOptions={[5, 10, 15, 20]}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                                }}\n                                nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                                }}\n                                onChangePage={this.handleChangePage}\n                                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                            />\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n                { this.props.isLoading ? <LinearProgress /> : '' }\n                <div style={{overflowX: 'auto',}}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>index</TableCell>\n                                <TableCell>Girevance</TableCell>\n                                <TableCell>Status</TableCell>\n                                <TableCell>Emergency</TableCell>\n                                <TableCell>#</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.props.complaintsData\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((item, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell component=\"th\" >{page * rowsPerPage + index+1}</TableCell>\n                                        <TableCell>{item.griev_type}</TableCell>\n                                        <TableCell>{item.complaint_status}</TableCell>\n                                        <TableCell>{item.isEmergency?\"YES\":\"NO\"}</TableCell>\n                                        <TableCell><Button \n                                            onClick={\n                                                () => {\n                                                    this.handleComplaintDialogOpen(item);\n                                                }\n                                            }\n                                            color=\"secondary\"\n                                            variant=\"outlined\"\n                                        >view</Button></TableCell>\n                                    </TableRow>\n                                ))\n                            }\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n            </Paper>  \n        );\n    }\n}\n\nComplaintTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComplaintTable);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Profile from './Profile';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ComplaintContainer from './ComplaintContainer';\nimport GeneralDialog from '../Components/GeneralDialog';\nimport ComplaintFullView from \"../Components/ComplaintFullView\";\nimport { griev_type,status_type,getCookie, url } from '../constants';\n\nconst styles = theme => ({\n\n})\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n\nclass ComplaintReport extends Component {\n\n    state = {\n        page: 0,\n        rowsPerPage: 25,\n\n        openOfficerDialogState: false,\n        openComplaintDialogState : false,\n        openErrorDialog : false,\n\n        OfficerData: null,\n\n        OfficerDialogData : null,\n        ComplaintDialogData : null,\n        \n        Loading : true\n    };\n\n    jrdOfficerList() {\n        let headers = new Headers();\n            headers.append('origin', '*');\n            headers.append('auth', 'token ' + getCookie(\"roadGPortalAuth\"));\n    \n            let req = new Request(url  + \"getJrOfficerList\", {\n                method: \"GET\",\n                headers: headers,\n                mode: 'cors'\n            });\n    \n            fetch(req)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({\n                        lodding : false\n                    });\n                    if(res){\n                        this.setState({\n                            data: res,\n                        })\n                    }else{\n                        this.handleDialogOpen(res.data, \"Error\");\n                    }\n                })\n                .catch(err => {\n                    console.log(err);      \n                    this.setState({\n                        lodding : false\n                    });          \n                    this.handleDialogOpen(err.message, \"Error\")\n                });\n      }\n      \n     //handling table pagination\n     handleChangePage = (event, page) => {\n        this.setState({ page });\n      };\n    \n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    //------------------\n\n     \n    handleComplaintDialogClose = () => {\n        this.setState({\n            OfficerDialogData: null,\n            openComplaintDialogState: false\n        })\n    }\n\n    handleOfficerDialogClose = () => {\n        this.setState({\n            OfficerDialogData: null,\n            openOfficerDialogState: false\n        })\n    }\n\n    handleOfficerDialogOpen = (OfficerDialogData) => {\n        this.setState({\n            OfficerDialogData: OfficerDialogData,\n            openOfficerDialogState : true\n        })\n    }\n\n    handleComplaintDialogOpen = (OfficerDialogData) => {\n\n        this.setState({\n            OfficerDialogData: OfficerDialogData,\n            openComplaintDialogState : true\n        })\n\n\n        let headers = new Headers();\n        headers.append('origin', '*');\n        headers.append('auth', 'token ' + getCookie(\"roadGPortalAuth\"));\n\n        let req = new Request(url  + \"testOfficers\", {\n            method: \"GET\",\n            headers: headers,\n            mode: 'cors'\n        });\n\n        fetch(req)\n            .then(res => res.json())\n            .then(res => {\n               \n                this.setState({\n                    Loading : false\n                });\n\n                if(res.success){\n                    res.complaints.map(complaint => {\n                        complaint.time = new Date(complaint.time);\n                    })\n                    \n                    this.allComplaints = res.complaints;\n                    \n                    console.log(this.allComplaints);\n                    let newFilteredComplaints = res.complaints;\n                    const newMap = new Map(this.state.status_type_map); \n                 \n                    if(this.props.dashboardButton){\n\n                        newFilteredComplaints = newFilteredComplaints.filter(complaint => (\n                            complaint['complaint_status'] && (complaint['complaint_status'].toUpperCase() !== this.props.dashboardButton.toUpperCase())\n                        ));\n                        \n                        const checked = !newMap.get(this.props.dashboardButton)\n                        newMap.set(this.props.dashboardButton.toUpperCase(),checked);\n                        console.log(newMap,this.props.dashboardButton);\n\n                    }\n\n                    \n                    this.setState({\n                        status_type_map : newMap,\n                        filteredComplaints : newFilteredComplaints,\n                    })\n                }else{\n                    this.handleDialogOpen(res.data, \"Error\");\n                }\n            })\n            .catch(err => {\n                console.log(err);      \n                this.setState({\n                    lodding : false\n                });          \n                this.handleDialogOpen(err.message, \"Error\")\n            });\n\n        this.setState({\n            OfficerDialogData: OfficerDialogData,\n            openOfficerDialog: true\n        })\n    }\n\n    \n    handleDialogOpen = (dialogMsg, dialogTitle) => {        \n      this.setState({ \n          openErrorDialog: true,\n          dialogMsg: dialogMsg,\n          dialogTitle: dialogTitle\n      });\n    };\n\n    handleClose = () => {\n        this.setState({ openErrorDialog: false });\n    };\n\n    componentDidMount() {\n\n      let headers = new Headers();\n      headers.append('origin', '*');\n      headers.append('auth', 'token ' + getCookie(\"roadGPortalAuth\"));\n\n      let req = new Request(url  + \"testOfficers\", {\n          method: \"GET\",\n          headers: headers,\n          mode: 'cors'\n      });\n\n      fetch(req)\n          .then(res => res.json())\n          .then(res => {\n            console.log(res)\n              \n              console.log(\"officerData\",res);\n                  this.setState({\n                    Loading : false,\n                    OfficerData : res,\n                  })\n              \n            //   if(res.success){\n                  \n            //       this.setState({\n            //         OfficerDialogData : res.data,\n            //       })\n            //   }else{\n            //       this.handleDialogOpen(res.data, \"Error\");\n            //   }\n          })\n          .catch(err => {\n              console.log(err);      \n              this.setState({\n                  Loading : false\n              });          \n              this.handleDialogOpen(err.message, \"Error\")\n          });\n  }\n\n    render() {\n\n        const { rowsPerPage, page } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, this.props.complaintsData.length - page * rowsPerPage);\n\n    \n        return (\n            <Paper>\n                  <GeneralDialog \n                    openDialogState = {this.state.openDialog}\n                    dialogTitle = {this.state.dialogTitle}\n                    dialogMsg = {this.state.dialogMsg}  \n                    handleClose={this.handleClose}\n                    handleDialogOpen={this.handleDialogOpen}\n                >\n                    {/* <Button>Hello</Button> */}\n                </GeneralDialog>\n                \n                {/* <ComplaintFullView \n                    OfficerDialogData={this.state.OfficerDialogData}\n                    handleComplaintDialogClose={this.handleOfficerDialogClose} \n                    openComplaintDialogState={this.state.openComplaintDialogState}  /> */}\n\n                <Dialog\n                        fullScreen\n                        open={this.state.openComplaintDialogState}\n                        onClose={this.handleComplaintDialogOpen}\n                        TransitionComponent={Transition}\n                    >\n                    <Toolbar>\n                        <IconButton color=\"inherit\" onClick={this.handleComplaintDialogClose} aria-label=\"Close\">\n                            <CloseIcon />\n                        </IconButton>\n                    </Toolbar>\n                    <ComplaintContainer />\n                </Dialog>\n\n                <Dialog\n                        fullScreen\n                        open={this.state.openOfficerDialogState}\n                        onClose={this.handleOfficerDialogClose}\n                        TransitionComponent={Transition}\n                    >\n                    <Toolbar>\n                        <IconButton color=\"inherit\" onClick={this.handleOfficerDialogClose} aria-label=\"Close\">\n                            <CloseIcon />\n                        </IconButton>\n                    </Toolbar>\n                    <Profile OfficerData={this.state.OfficerDialogData}/>\n                </Dialog>\n\n                { this.state.Loading ? <LinearProgress /> :  \n                <div style={{overflowX: 'auto',}}>\n\n                            <TablePagination\n                                component=\"div\"\n                                count={this.state.OfficerData.length}\n                                rowsPerPageOptions={[15, 30, 45]}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                                }}\n                                nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                                }}\n                                onChangePage={this.handleChangePage}\n                                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                            />\n\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>index</TableCell>\n                                <TableCell>Officer Name</TableCell>\n                                <TableCell>Officer Role</TableCell>\n                                <TableCell>Profile</TableCell>\n                                <TableCell>Complaints</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.state.OfficerData\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((item, index) => (\n                                    <TableRow key={index}>\n\n                                        <TableCell>{item.griev_type}</TableCell>\n                                        <TableCell>{item.complaint_status}</TableCell>\n                                        <TableCell>NO</TableCell>\n                                        <TableCell>\n                                            <Button \n                                                onClick={\n                                                    () => {\n                                                        this.handleOfficerDialogOpen(item);\n                                                    }\n                                                }\n                                                color=\"secondary\"\n                                                variant=\"outlined\"\n                                                >\n                                               View\n                                              </Button>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Button \n                                                onClick={\n                                                    () => {\n                                                        this.handleComplaintDialogOpen(item);\n                                                    }\n                                                }\n                                                color=\"secondary\"\n                                                variant=\"outlined\"\n                                                >\n                                               Update\n                                              </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            }\n                        </TableBody>\n                        {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                <TableCell colSpan={6} />\n                                </TableRow>\n                        )}\n\n                    </Table>\n                </div>\n                }\n            </Paper>  \n        );\n    }\n}\n\nComplaintReport.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComplaintReport);","import React, { Component } from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport ComplaintFullView from \"../Components/ComplaintFullView\";\n\nimport Button from '@material-ui/core/Button';\n\nimport {openLocationInGoogleMaps} from '../constants';\nfunction loadMaps(src) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.src = src;\n    script.addEventListener('load', function () {\n      resolve();\n    });\n    script.addEventListener('error', function (e) {\n      reject(e);\n    });\n    document.body.appendChild(script);\n  })\n};\n\nfunction displayInfobox(e) {\n  pinInfobox.setOptions({ title: e.target.Title, description: e.target.Description, visible: true, offset: new window.Microsoft.Maps.Point(0, 25) });\n  pinInfobox.setLocation(e.target.getLocation());\n}\n\nfunction hideInfobox(e) {\n  pinInfobox.setOptions({ visible: false });\n}\n\n\n// Promise Interface can ensure load the script only once.\nvar mMapScript = loadMaps('https://www.bing.com/api/maps/mapcontrol?key=AjlGU3ieeFyzhwTbfMkukBolwpcjkab8my5_x_qfnz88Kc5RHh04Y8dL5_acLQ3P');\nvar pinInfobox,map;\n\nexport default class ComplaintMap extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'start',\n      openIndividiualCompaintDialog : false,\n      ComplaintDialogData: null\n    };\n  }\n\n  openIndividiualCompaintDialog = (i) => {\n\n    console.log(\"--------> \" ,  this.props.complaintsData[i], i);\n    \n\n    this.setState({\n      openIndividiualCompaintDialog : true,\n      ComplaintDialogData:this.props.complaintsData[i]\n    })\n  }\n\n  \n  handleClose = () => {\n    this.setState({ openIndividiualCompaintDialog: false, ComplaintDialogData: null });\n};\n  \n\n  load_Data = (data) => {\n    \n    let pushpinInfos = [];\n    // pushpinInfos[0] = { 'lat': 23.456574, 'lng': 72.234324, 'title': 'Kipper Market', 'description': 'Braka Miladinovi 178, 1200 Tetovë, Tetovo, Macedonia' };\n    // pushpinInfos[1] = { 'lat': 41.799645, 'lng': 20.913514, 'title': 'Kipper Market', 'description': 'Kipper Gostilet' };\n    //console.log(data);\n    \n    data.forEach((d,i) => {\n\n      console.log(\"Location ===> \", d.location[0], d.location[1]);\n      if(d.location[0] !== undefined && d.location[1] !== undefined)\n      pushpinInfos.push({ 'lat': d.location[0], \n                          'lng': d.location[1], \n                          'title': d.name.slice(0,50) + \"... \", \n                          'description': '<div onclick = window.complaintMapThis.openIndividiualCompaintDialog('+i+') > <div>Status : ' + d.complaint_status +\n                           ' ( ' + d.griev_type + ' ) '+\n                           '<div><a style=\"color : blue;font-size: 15px\" onclick = window.complaintMapThis.openIndividiualCompaintDialog()> View more</a></div></div>'})\n    });\n\n    let apiKey = \"<api key>\";\n\n    //let map = new window.Microsoft.Maps.Map(document.getElementById(\"map\"), { credentials: apiKey });\n    let infoboxLayer = new window.Microsoft.Maps.EntityCollection();\n    let pinLayer = new window.Microsoft.Maps.EntityCollection();  \n\n    // Create the info box for the pushpin\n    \n    pinInfobox = new window.Microsoft.Maps.Infobox(new window.Microsoft.Maps.Location(0, 0), { visible: false });\n    infoboxLayer.push(pinInfobox);\n\n\n    //console.log(pinLayer, infoboxLayer, map, pinLayer['_primitives'],pinLayer['_id']);\n\n    //pinLayer['_primitives'] = []\n\n\n    let locs = [];\n    for (let i = 0 ; i < pushpinInfos.length; i++) {\n        locs[i] = new window.Microsoft.Maps.Location(pushpinInfos[i].lat, pushpinInfos[i].lng);\n        let pin = new window.Microsoft.Maps.Pushpin(locs[i]);\n        pin.Title = pushpinInfos[i].title;\n        pin.Description = pushpinInfos[i].description;\n        pinLayer.push(pin); \n        window.Microsoft.Maps.Events.addHandler(pin, 'click', displayInfobox);\n    }\n\n    //console.log(map.entities, typeof map.entities);\n\n    map.entities.push(pinLayer);\n    map.entities.push(infoboxLayer);\n    //console.log('Pins : ', pinLayer)\n    let bestview = window.Microsoft.Maps.LocationRect.fromLocations(locs);\n    map.setView({ center: bestview.center, zoom: 8 });\n}\n\n  do_load = (data) => {\n    const mThis = this;\n    \n    //console.log(data);\n    \n\n    mMapScript.then(function () {\n      //console.log(data);\n      // window.onload = () => {\n        mThis.setState({ 'status': 'done' });\n\n        map = new window.Microsoft.Maps.Map(document.getElementById('mMap'), {})\n    \n        //console.log('Loaded');\n        mThis.load_Data(data);\n\n    }).catch(function (err) {\n      //console.log(err);\n      \n      mThis.setState({ 'status': 'error' });\n      //console.log('Error');\n\n    })\n  }\n\n\n  componentWillMount() {\n    console.log(window);\n    \n    window.complaintMapThis = this;\n\n//    console.log(window);\n    \n    if (this.state.status === 'start') {\n      this.setState({ status: 'loading' });\n      console.log('Maps loading');\n      if(document.readyState != 'complete') {\n        window.onload = () => {\n          this.do_load(this.props.complaintsData);\n        }\n      } else {\n        this.do_load(this.props.complaintsData);\n      }\n    }\n\n  }\n\n  componentWillReceiveProps(newProps){\n    \n    if(this.state.status === 'done'){ \n      console.log(\"semdomg \", newProps.complaintsData.length);\n\n\n      for (var i = map.entities.getLength() - 1; i >= 0; i--) {\n        var pushpin = map.entities.get(i);\n        if (pushpin instanceof window.Microsoft.Maps.Pushpin) {\n            map.entities.removeAt(i);\n        }\n      }\n\n      this.load_Data(newProps.complaintsData);\n    }\n  }\n\n  render() {\n    const LoadingState = (this.state.status == 'loading');\n\n    return (\n\n      <div>\n\n\n        <ComplaintFullView \n                ComplaintDialogData={this.state.ComplaintDialogData} \n                handleComplaintDialogClose={this.handleClose} \n                openComplaintDialogState={this.state.openIndividiualCompaintDialog}  \n                handleIndividualComplaintChange={this.props.handleIndividualComplaintChange}/>\n\n        { LoadingState ? (<LinearProgress />) :\n        (<div id=\"mMap\" style={{ width: 'auto', height: '90vh' }}>  Loading...</div>)\n        }\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SideFilter from \"../Components/SideFilter\";\nimport ComplaintTable from \"./ComplaintTable\";\nimport ComplaintReport from \"./ComplaintReport\";\nimport ComplaintMap from \"./ComplaintMap\";\nimport GeneralDialog from '../Components/GeneralDialog';\nimport { griev_type,status_type,getCookie, url } from '../constants';\n// import Card from '@material-ui/core/Card';\nimport Empty from '../res/empty.svg';\nimport { Button } from '@material-ui/core';\nimport FilterIcon from '@material-ui/icons/FilterList';\n\nconst styles = theme => ({\n    progressWrapper: {\n        width: '100%',\n        display: 'flex'\n    },\n    progress: {\n        margin: 'auto',\n        marginTop : '50px',\n        textAlign: 'center',\n       \n    },\n    wrapper: {\n      //  paddingTop: '60px',\n        display: 'block',\n        // minHeight: '90vh',\n        background: 'white'\n    },\n    filterBtn: {\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    SideFilter: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    padding10: {\n        padding: '10px'\n    },\n    sideFilterGrid: {\n        height: '97vh',\n        paddingTop: '56px', \n        overflowY: 'scroll', \n        overflowX: 'hidden',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    sideFilterButton: {\n        position: 'fixed', \n        bottom: '20px', \n        right: '20px',\n        display: 'none',\n        [theme.breakpoints.down('sm')]: {\n          display: 'flex',\n        },\n    }\n})\n\nclass ComplaintContainer extends Component {\n\n    state = {\n        StartingDate: new Date(new Date().setMonth(new Date().getMonth()-6)).setHours(0,0,0,0),\n        EndingDate: new Date().setHours(0,0,0,0),\n        griev_type_map: new Map(griev_type),\n        status_type_map : new Map(status_type),\n        emergency_state : true,\n        startAnimation: false,\n        lodding : true,\n        SideFilter: true,\n        emptyList: true,\n        filteredComplaints: [],\n        searchQuery: \"\",\n        mobileFilterDialogOpen: false,\n    }\n\n    \n    doSearch = e => {\n        let searchQuery = e.target.value.toLowerCase();\n\n        console.log(Object.keys(this.state.filteredComplaints),this.state.filteredComplaints,searchQuery);\n        this.setState(oldState => {\n            let newSearchedData;\n\n            if(searchQuery.length < oldState.searchQuery.length){\n\n                newSearchedData = this.allComplaints.filter(complaint => {\n                    return complaint.complaint_status\n                        && oldState.status_type_map.get(complaint.complaint_status.toUpperCase())\n                        && complaint.griev_type\n                        && oldState.griev_type_map.get(complaint.griev_type.toUpperCase())\n                        && (oldState.emergency_state===true || oldState.emergency_state !== complaint.isEmergency)\n                        && (complaint.time >= oldState.StartingDate && complaint.time <= oldState.EndingDate)\n                        && Object.keys(complaint).some(k => {\n                            let bool = false;\n                            if(complaint[k] && complaint[k].includes && complaint[k].toLowerCase)\n                                bool = complaint[k].toLowerCase().includes(searchQuery)\n                            console.log(\"Inside some : \",bool);\n                            \n                            return bool;\n                        })\n                })\n\n            }else{\n                newSearchedData = oldState.filteredComplaints.filter(c => {\n                    console.log(\"Individual complaint :\",c);\n                    console.log(\"Keys : \", Object.keys(c));\n                    \n                    let b =  Object.keys(c).some(k => {\n                        console.log(\"Keys : \", c[k], k);\n                        \n                        let bool = false;\n                        if(c[k] && c[k].includes && c[k].toLowerCase)\n                            bool = c[k].toLowerCase().includes(searchQuery)\n                        console.log(\"Inside some : \",bool);\n                        \n                        return bool;\n                    })\n    \n                    console.log(\"inside filter : \",b);\n                    return b;    \n                })\n            }\n\n            return{searchQuery:searchQuery, filteredComplaints:newSearchedData }\n        })\n        \n    }\n    \n    handleIndividualComplaintChange = (complaintData,isComplainForwarded) => {\n\n        console.log(complaintData,isComplainForwarded);\n        \n        if(isComplainForwarded){\n\n            this.allComplaints.splice(this.allComplaints.findIndex(c => c._id === complaintData._id),1);\n            this.setState(oldState =>{\n                oldState.filteredComplaints.splice(oldState.filteredComplaints.findIndex(c => c._id === complaintData._id),1);\n\n                return {\n                    filteredComplaints : oldState.filteredComplaints,\n                }\n            })\n            \n\n        }else{\n            let c = this.allComplaints.find(c => c._id === complaintData.complaint_id)\n            c.complaint_status = complaintData.complaint_status;\n            c.isEmergency = complaintData.isEmergency;\n            c.completed_complaint_url = complaintData.completed_complaint_url;\n            \n            console.log(\"Test Completed\", complaintData);\n\n            this.setState((oldState) => {\n                let cod = oldState.filteredComplaints.find(c => c._id === complaintData.complaint_id);\n                cod.complaint_status = complaintData.complaint_status;\n                cod.isEmergency = complaintData.isEmergency;\n                cod.completed_complaint_url = complaintData.completed_complaint_url;\n            })\n            \n        }\n    }\n\n    handleStartingDateChange = (date) => {\n        \n        this.setState( oldState  => {\n\n            let newFilteredComplaints;\n                \n            if(date > this.state.StartingDate){\n\n                if(oldState.filteredComplaints.length === 0){\n                    newFilteredComplaints = this.allComplaints;\n                }\n                \n                newFilteredComplaints = oldState.filteredComplaints.filter(complaint => (\n                    complaint['time'] && (complaint['time'] >= date)\n                ));\n\n                console.log('After Remove :',newFilteredComplaints);\n\n            }else{\n\n                newFilteredComplaints = this.allComplaints.filter(complaint => {\n                                \n                    return complaint.complaint_status\n                        && oldState.status_type_map.get(complaint.complaint_status.toUpperCase())\n                        && complaint.griev_type\n                        && oldState.griev_type_map.get(complaint.griev_type.toUpperCase())\n                        && (oldState.emergency_state===true || oldState.emergency_state !== complaint.isEmergency)\n                        && (complaint.time >= date && complaint.time <= oldState.EndingDate)\n                });\n\n                console.log('After all filter :',newFilteredComplaints);\n\n            }\n\n            return { \n                filteredComplaints : newFilteredComplaints,\n                StartingDate: date \n            }\n        });\n\n    }\n\n    handleEndingDateChange = (date) => {\n        \n        date = date.setHours(0,0,0,0);\n        this.setState( oldState  => {\n\n            let newFilteredComplaints;\n            if(date < this.state.EndingDate){\n\n                if(oldState.filteredComplaints.length === 0){\n                    newFilteredComplaints = this.allComplaints;\n                }\n                \n                newFilteredComplaints = oldState.filteredComplaints.filter(complaint => {\n                    console.log(complaint['time'] && (complaint['time'] <= date),new Date(date),new Date(complaint['time']));\n                    \n                    return complaint['time'] && (complaint['time'] <= date)\n                });\n\n                console.log('After Remove :',newFilteredComplaints);\n            }else{\n\n                newFilteredComplaints = this.allComplaints.filter(complaint => {\n                                \n                    return complaint.complaint_status\n                        && oldState.status_type_map.get(complaint.complaint_status.toUpperCase())\n                        && complaint.griev_type\n                        && oldState.griev_type_map.get(complaint.griev_type.toUpperCase())\n                        && (oldState.emergency_state===true || oldState.emergency_state !== complaint.isEmergency)\n                        && (complaint.time >= oldState.StartingDate && complaint.time <= date)\n                        \n                });\n\n                console.log('After all filter :',newFilteredComplaints);\n            }\n\n            return { \n                filteredComplaints : newFilteredComplaints,\n                EndingDate: date \n            }\n        });\n\n\n    }\n\n    handleChange = name => e  => {\n\n        \n        this.setState({\n            lodding : true\n        });\n\n        const value = e.target.value;\n        console.log('handleChange : ',value,name);\n        this.setState( oldState  => {\n            \n            let checked,newMap;\n            if(oldState[name] instanceof Map){\n                newMap = new Map(oldState[name]);  \n                checked = !newMap.get(value) \n                newMap.set(value,checked);\n            }else{\n                newMap = checked = !oldState[name];\n                console.log(\"inside emergency if\");\n                \n            }\n\n            let newFilteredComplaints = [];\n\n            \n            if(checked){\n                \n                if(name === \"status_type_map\"){\n\n                    // console.log(\"here2\",oldState.emergency_state,this.allComplaints[0].isEmergency,(oldState.emergency_state===true || oldState.emergency_state !== this.allComplaints[0].isEmergency));\n                    // console.log(\"here3\",oldState.emergency_state,this.allComplaints[1].isEmergency,(oldState.emergency_state===true || oldState.emergency_state !== this.allComplaints[1].isEmergency));\n                    // console.log(\"adding status : \" + value ) \n                    // console.log(this.allComplaints);\n                    // console.log(oldState.griev_type_map);\n                    \n                    newFilteredComplaints = this.allComplaints.filter(complaint => {\n                            \n                            return complaint.complaint_status\n                                && complaint.complaint_status.toUpperCase() == value.toUpperCase() \n                                && complaint.griev_type\n                                && oldState.griev_type_map.get(complaint.griev_type.toUpperCase())\n                                && (oldState.emergency_state===true || oldState.emergency_state !== complaint.isEmergency)\n                                && (complaint.time >= oldState.StartingDate && complaint.time <= oldState.EndingDate)\n                        });\n                    \n                    newFilteredComplaints = newFilteredComplaints.concat(oldState.filteredComplaints)\n                    //console.log(newFilteredComplaints);\n\n                }else if(name === \"griev_type_map\"){\n                            \n                    // console.log(\"adding status : \" + value ) \n                    // console.log(this.allComplaints);\n                    // console.log(oldState.status_type_map);\n                    \n                    newFilteredComplaints = this.allComplaints.filter(complaint => {\n                            \n                            return complaint.griev_type\n                                && complaint.griev_type.toUpperCase() == value.toUpperCase() \n                                && complaint.complaint_status\n                                && oldState.status_type_map.get(complaint.complaint_status.toUpperCase())\n                                && (oldState.emergency_state===true || oldState.emergency_state !== complaint.isEmergency)\n                                && (complaint.time >= oldState.StartingDate && complaint.time <= oldState.EndingDate)\n                        });\n                    \n                    newFilteredComplaints = oldState.filteredComplaints.concat(newFilteredComplaints)\n                    //console.log(newFilteredComplaints);\n\n                }else if(name === \"emergency_state\"){\n\n                    console.log(\"here \",this.allComplaints,oldState)\n                    \n                    newFilteredComplaints = this.allComplaints.filter(complaint => {\n                        \n                        return complaint.griev_type\n                            && oldState.griev_type_map.get(complaint.griev_type.toUpperCase())\n                            && complaint.complaint_status\n                            && oldState.status_type_map.get(complaint.complaint_status.toUpperCase())\n                            && (complaint.time >= oldState.StartingDate && complaint.time <= oldState.EndingDate)\n                    });\n                \n                    //newFilteredComplaints = oldState.filteredComplaints.concat(newFilteredComplaints)\n              \n                    \n                }\n                console.log(\"Added\",newFilteredComplaints);\n\n            }else{ //Checked Else\n                console.log(\"removing\",oldState.filteredComplaints);\n                \n                if(oldState.filteredComplaints == []){\n                    oldState.filteredComplaints = this.allComplaints;\n                }\n\n                if(name === \"emergency_state\"){\n                    \n                    //console.log(oldState.filteredComplaints, oldState.filteredComplaints[0]['isEmergency']);\n                    \n                    newFilteredComplaints = oldState.filteredComplaints.filter(complaint => (\n                        complaint['isEmergency'] && (complaint['isEmergency'] == true)\n                    ));\n                        \n                    console.log(newFilteredComplaints);\n                    \n                }else{\n\n                    let jsonName = null;\n                    if(name === \"status_type_map\"){\n                        jsonName = \"complaint_status\";\n                    }else if(name === \"griev_type_map\"){\n                        jsonName = \"griev_type\"\n                    }\n\n                    //console.log(value,oldState.filteredComplaints[0][jsonName] && (oldState.filteredComplaints[0][jsonName].toUpperCase()));\n\n                    newFilteredComplaints = oldState.filteredComplaints.filter(complaint => (\n                        complaint[jsonName] && (complaint[jsonName].toUpperCase() !== value.toUpperCase())\n                    ));\n                    console.log(newFilteredComplaints);\n              }\n\n\n            }\n\n\n            return {\n                [name] : newMap,\n                lodding : false,\n                filteredComplaints : newFilteredComplaints\n            }\n          });\n\n\n    }\n\n\n    allComplaints = []\n\n\n    handleDialogOpen = (dialogMsg, dialogTitle) => {        \n        this.setState({ \n            openDialog: true,\n            dialogMsg: dialogMsg,\n            dialogTitle: dialogTitle\n        });\n    };\n\n    handleClose = name => () => {\n        this.setState({ [name]: false });\n    };\n\n    handleFilterOpen = () => {\n        this.setState({\n            mobileFilterDialogOpen: true\n        })\n    }\n\n    exportExcel(e){\n\n        console.log(\"Excel : \");        \n        console.log(this);\n        \n        console.log(this.state.filteredComplaints);\n        var Headers = Object.keys(this.state.filteredComplaints[0]);\n        console.log(\"Headers -----\"+Headers);\n        //     [\"_id\", \"road_code\", \"name\", \"postedUsers\",\"location\",\"isEmergency\",\"griev_type\",\n        // \"description\",\"complaint_status\",\"time\",\"estimated_completion\"];\n            \n        let mHeaders = [\"longitude\",\"latitude\", \"complaint_status\", \"isEmergency\", \"_id\", \"road_code\", \"name\", \"griev_type\", \"time\", \"estimated_completion\"];\n        var CsvString = \"\";\n\n        mHeaders.forEach(function(ColItem, ColIndex) {\n            CsvString += ColItem + ',';\n        });\n        CsvString += \"\\r\\n\";\n        this.state.filteredComplaints.forEach(function(RowItem, RowIndex) {\n            Headers.forEach(function(ColItem, ColIndex) {\n                \n                if(ColItem === 'time'){\n                    console.log(\"Date ---> \",RowItem[ColItem]);\n                    let mDate = new Date(RowItem[ColItem]);\n                    console.log(\"Date ---> \",mDate);\n                    RowItem[ColItem] = mDate.getDate() + \"-\" + mDate.getMonth() + \"-\" + mDate.getFullYear();\n\n                    console.log(RowItem[ColItem]);\n                }\n                if(ColItem ==='estimated_completion'){\n                    if(RowItem[\"complaint_status\"] == \"Pending\"){\n                        RowItem[ColItem]=\"No Estimated date\";\n                    }\n                    else{\n                        let mDate = new Date(RowItem[ColItem]);\n                        RowItem[ColItem] = mDate.getDate() + \"-\" + mDate.getMonth() + \"-\" + mDate.getFullYear();\n                        console.log(RowItem[ColItem]);\n                    }\n                    \n                }\n            if(ColItem!=='comments' && ColItem!== 'posted_users' && ColItem!== 'completed_complaint_url'){\n                console.log(ColItem, \"  \", RowItem[ColItem]);\n                CsvString += RowItem[ColItem] + ',';\n            }else{\n                console.log(\"Skiiping commenst & posted Uswers\");\n                \n            }\n          });\n          CsvString += \"\\r\\n\";\n          console.log(\"\\n\");\n        });\n        console.log(CsvString);\n        \n        let link = document.createElement('a');\n        console.log(\"Excel \", document, link);\n        document.body.appendChild(link);\n        link.setAttribute('href','data:application/vnd.ms-excel;charset=utf-8,'+encodeURIComponent(CsvString));\n        link.setAttribute('download','R&BPortal_Data.csv');\n        link.setAttribute('target', '_self');\n        link.click();\n\n        //e.downlaod = \"R&BPortal_Data.xls\"\n        //window.open(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,\" + encodeURIComponent(CsvString));\n        console.log(\"Exprot excel \");\n        //window.open('data:application/vnd.ms-excel,' + encodeURIComponent(CsvString));\n        \n    }\n\n    componentDidMount() {\n        this.setState({\n            startAnimation: true,\n        })\n\n        let headers = new Headers();\n\n        headers.append('origin', '*');\n        headers.append('Content-Type','application/json');\n   headers.append('auth', 'token ' + getCookie(\"roadGPortalAuth\"));\n\n        let req;\n\n        if(this.props.manageOfficer){\n            \n            let query = '';\n            console.log(this.props.OfficerIdArray);\n\n            for(let i = 0; i < this.props.OfficerIdArray.length; i++){\n                \n                query+= this.props.OfficerIdArray[i] + ';';\n                //console.log(i);\n            }\n            console.log(query);\n\n            query = query.slice(0,query.length-1)\n            req = new Request(url + \"getJrOfficerComplaints\",{\n                method: \"POST\",\n                headers:headers,\n                body: JSON.stringify({\n                    officerIds : query,\n                })\n            });\n\n        }else{\n                \n            req = new Request(url  + \"getComplaints?isPaginated=0\", {\n                method: \"GET\",\n                headers: headers,\n                mode: 'cors'\n            });\n        }\n        \n        fetch(req)\n            .then(res => res.json())\n            .then(res => {\n               \n                if(res.success){\n                    console.log(\"complaints \", res);\n                    \n                    \n                    console.log(res.complaints);\n                    \n                    let new_griv_type = new Map();\n                    res.complaints.map(complaint => {\n                        complaint.time = new Date(complaint.time).setHours(0,0,0,0);\n                        new_griv_type.set(complaint.griev_type,true);\n                    })\n                    \n                    res.complaints = res.complaints.filter(c =>  {\n                            console.log(c.time, Number.isNaN(c.time));\n                            return !Number.isNaN(c.time)\n                    });\n\n                    this.allComplaints = res.complaints;\n                    \n                    console.log(this.allComplaints);\n                    \n                    if(this.props.dashboardButton){\n                        let value = this.props.dashboardButton;\n\n                        if(value.toUpperCase() === 'EMERGENCY'){\n                            \n                            let newFilteredComplaints = this.allComplaints.filter(complaint => {\n                                return complaint['isEmergency'] && (complaint['isEmergency'] == true)\n                            });\n                            \n                            \n\n                            this.setState({\n                                emergency_state : false,\n                                filteredComplaints : newFilteredComplaints,\n                            })\n\n                        }else{\n                            \n                            let newFilteredComplaints = res.complaints;\n                            const newMap = new Map(this.state.status_type_map); \n                            for (var [key, value2] of newMap) {\n                                newMap.set(key,!value2);\n                            }\n\n                            newFilteredComplaints = newFilteredComplaints.filter(complaint => (\n                                complaint['complaint_status'] && (complaint['complaint_status'].toUpperCase() === this.props.dashboardButton.toUpperCase())\n                            ));\n                            \n                            const checked = !newMap.get(this.props.dashboardButton)\n                            newMap.set(this.props.dashboardButton.toUpperCase(),checked);\n                            console.log(newMap,this.props.dashboardButton);\n                            \n                            \n                            this.setState({\n                                \n                                status_type_map : newMap,\n                                filteredComplaints : newFilteredComplaints,\n                            })\n                        }\n                    \n                        \n\n                        \n                    }else{\n                        \n                        this.setState({\n                            filteredComplaints : this.allComplaints\n                        })\n                    }\n\n                    this.setState({\n                        lodding : false,\n                        griev_type_map : new_griv_type\n                    });\n\n                    \n                }else{\n                    this.handleDialogOpen(res.data, \"Error\");\n                }\n\n            })\n            .catch(err => {\n                console.log(err);      \n                this.setState({\n                    lodding : false\n                });          \n                this.handleDialogOpen(err.message, \"Error\")\n            });\n    }\n\n    handleFilterBar = () => {\n        this.setState({\n            filterDialogState: true\n        })\n    }\n\n    handleFilterClose = () => {\n        this.setState({\n            filterDialogState: false\n        })\n    }\n\n    sideFilter = () => {\n        console.log(\"SideFilter : \");\n        console.log(this, this instanceof ComplaintContainer);\n\n        return (\n            <SideFilter \n                status_type_map={this.state.status_type_map} \n                griev_type_map={this.state.griev_type_map} \n                StartingDate={this.state.StartingDate}\n                EndingDate={this.state.EndingDate}\n                exportExcel = {this.exportExcel.bind(this)}\n                emergency_state={this.state.emergency_state}\n                handleChange={this.handleChange}\n                handleEndingDateChange = {this.handleEndingDateChange}\n                handleStartingDateChange ={this.handleStartingDateChange}\n                doSearch = {this.doSearch}\n            />\n        )\n    }\n\n    render() {\n        let { classes } = this.props;\n        //console.log(this.props);\n        \n        return (    \n          <div className={classes.wrapper}>\n            <GeneralDialog \n                openDialogState = {this.state.openDialog}\n                dialogTitle = {this.state.dialogTitle}\n                dialogMsg = {this.state.dialogMsg}  \n                handleClose={this.handleClose(\"openDialog\")}\n                handleDialogOpen={this.handleDialogOpen}\n            >\n                {/* <Button>Hello</Button> */}\n            </GeneralDialog>\n\n            {this.props.manageOfficer && \n            (<IconButton color=\"inherit\" style={{position: 'absolute', top: '10px', left: '10px'}} onClick={this.props.handleComplaintDialogClose} aria-label=\"Close\">\n                <CloseIcon />\n            </IconButton>)}\n\n            <GeneralDialog \n                openDialogState = {this.state.mobileFilterDialogOpen}\n                dialogTitle = {\"Filters\"}\n                dialogMsg = {\"\"}  \n                handleClose={this.handleClose(\"mobileFilterDialogOpen\")}\n                handleDialogOpen={this.handleFilterOpen}\n            >\n                {this.sideFilter()}\n            </GeneralDialog>\n            \n\n                {this.state.lodding &&  <LinearProgress  className={classes.progress} />}    \n                \n                {!this.state.lodding && this.allComplaints && this.allComplaints.length !== 0 &&\n                <Grid container spacing={0} style={{margin:'auto'}}>\n                    <Grid item md={3} xs={12} className={classes.sideFilterGrid}>\n                        {this.sideFilter()}\n                    </Grid>\n                    <Grid item md={9} xs={12} >\n                        {   \n\n                            (this.state.filteredComplaints && this.state.filteredComplaints.length != 0) ?\n                            (this.props.manageOfficer ? \n\n                            (<div style={{paddingTop: '0px'}}>\n                                    <ComplaintTable manageOfficer complaintsData={this.state.filteredComplaints} />\n                            </div>)\n                            : (<div style={{paddingTop: '50px'}}>\n                                    <Switch >\n                                        <Route exact path=\"/Dashboard/Complaints/Table\" render={() => (<ComplaintTable complaintsData={this.state.filteredComplaints} handleIndividualComplaintChange={this.handleIndividualComplaintChange}/>)} />\n                                        <Route exact path=\"/Dashboard/Complaints/Reports\" render={() => (<ComplaintReport complaintsData={this.state.filteredComplaints} />)} />\n                                        <Route exact path=\"/Dashboard/Complaints/Maps\" render={() => (<ComplaintMap complaintsData={this.state.filteredComplaints } handleIndividualComplaintChange={this.handleIndividualComplaintChange} />)} />\n                                        <Route path=\"/Dashboard/Complaints/*\">\n                                            <Redirect to=\"/Dashboard/\" />\n                                        </Route>\n                                    </Switch>\n                                </div>)\n                            )\n                            : (\n                                <div className={classes.progressWrapper} style={{height: '100vh'}}>\n                                    <div style={{margin: 'auto', textAlign: 'center'}}>\n                                        <img src={Empty} style={{width: '100px'}} />\n                                        <br />\n                                        <br />\n                                        <Typography variant=\"display2\" style={{color: 'black'}}>No such Complaints</Typography>\n                                        <br />\n                                        <Typography variant=\"headline\" style={{color: 'rgba(0,0,0,0.5)'}}>Try some diffrent combinations</Typography>\n                                    </div>\n                                </div>\n                            )\n                        } \n                        <Button variant=\"extendedFab\" color=\"secondary\" onClick={this.handleFilterOpen} className={classes.sideFilterButton}><FilterIcon />&nbsp;Filter</Button>\n                    </Grid>\n                </Grid>\n                }\n                \n                {!this.state.lodding && this.allComplaints && this.allComplaints.length === 0 &&\n                <div className={classes.progressWrapper} style={{height: '100vh'}}>\n                    <div style={{margin: 'auto', textAlign: 'center'}}>\n                        <img src={Empty} style={{width: '100px'}} />\n                        <br />\n                        <br />\n                        <Typography variant=\"display2\" style={{color: 'black'}}>No Complaints...Yet!</Typography>\n                        <br />\n                        <Typography variant=\"headline\" style={{color: 'rgba(0,0,0,0.5)'}}>Complaints posted by citizen will be shown here</Typography>\n                    </div>\n                </div>\n                }\n          </div>  \n        );\n    }\n}\n\nComplaintContainer.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComplaintContainer);\n","import React, { Component } from 'react'\n\nexport default class complaintCount extends Component {\n  \n    static defaultProps = {\n        data : 0,    \n    }\n    \n    render() {\n\n    return (\n      <span style={{\"display\":\"block\",paddingTop:'10px',fontSize:'12px'}}>{this.props.type} : {this.props.data}</span>\n    )\n  }\n\n}\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  Total: {\n    backgroundColor: \"rgba(0, 0, 255, 0.1)\"\n  },\n  Emergency: {\n    backgroundColor: \"rgba(255, 0, 0, 0.1)\"\n  },\n  Pending: { backgroundColor: \"rgba(155, 100, 0, 0.1)\" },\n  Completed: {\n    backgroundColor: \"rgba(0, 255, 0, 0.1)\"\n  },\n  Approved: {\n    backgroundColor: \"rgba(128, 203, 196, 0.4)\"\n  }\n});\n\nconst complaintChipCount = props => {\n  function getClassName(CardColor) {\n    switch (CardColor) {\n      case \"Total Complaints\":\n        return props.classes.Total;\n      case \"Emergency\":\n        return props.classes.Emergency;\n      case \"Pending\":\n        return props.classes.Pending;\n      case \"Completed\":\n        return props.classes.Completed;\n      case \"Approved\":\n        return props.classes.Approved;\n      default:\n        return -1;\n    }\n  }\n\n  return (\n    <Chip\n      className={getClassName(props.type)}\n      avatar={\n        <Avatar className={getClassName(props.type)}>\n          {props.data ? props.data : 0}\n        </Avatar>\n      }\n      label={props.type}\n      variant=\"outlined\"\n    />\n  );\n};\n\nexport default withStyles(styles)(complaintChipCount);\n","import ReactDOM from \"react-dom\";\nimport Input from \"@material-ui/core/Input\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { Button } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Select from \"react-select\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NoSsr from \"@material-ui/core/NoSsr\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport GeneralDialog from '../Components/GeneralDialog';\nimport { emphasize } from \"@material-ui/core/styles/colorManipulator\";\nimport {\n  griev_type,\n  status_type,\n  getCookie,\n  url,hierarchy,\n  hierarchy1\n} from \"../constants\";\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250\n  },\n  input: {\n    display: \"flex\",\n    padding: 0\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    fontSize: 16\n  },\n  paper: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0\n  },\n  divider: {\n    height: theme.spacing.unit * 3\n  },\n  ProfileWrapper: {\n    margin: \"auto\",\n    padding: \"20px\",\n    textAlign: \"center\",\n    //padding: \"\",\n    // background: 'white',\n    // borderRadius: '2px',\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"40%\"\n    }\n  }\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction SingleValue(props) {\n  return (\n    <Typography\n      className={props.selectProps.classes.singleValue}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nclass ManageCharge extends React.Component {\n  state = {\n    post: \"\",\n    filterPost: \"\",\n    errorStatus:false,\n    saveButtondisable:false,\n    officerName: \"\",\n    openDialog : false,\n  };\n\n  \n  handleDialogOpen = (dialogMsg, dialogTitle) => {        \n    this.setState({ \n        openDialog: true,\n        dialogMsg: dialogMsg,\n        dialogTitle: dialogTitle\n    });\n};\n\n  chargeTransfer = () =>{\n    if(this.state.officerName.value==null || this.props.officerId==null || this.props.postId==null){\n      this.handleDialogOpen(\"Please select all data\",\"Error\");  \n      this.setState({\n        openDialog:true,\n            errorStatus:true,\n        })\n        return;\n    } \n    this.setState({\n      openDialog:false,\n        errorStatus:false,\n        saveButtondisable:true,\n    })\n\n    fetch(url + \"chargeTransfer/\", {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'auth': 'token ' + getCookie(\"roadGPortalAuth\")\n        },\n        method: \"POST\",\n        body: JSON.stringify({selectedFromListPostId:this.props.postId,\n                              selectedFromListOfficerId:this.props.officerId,\n                              selectedFromUIOfficerId:this.state.officerName.value[0],\n                              selectedFromListOfficeType:this.props.officetype})\n    }\n)\n.then(res => res.json())\n.then(res => {\n \n    if(res.success){\n      this.handleDialogOpen(\"Officer transfer successfully !!\",\"\");  \n      //this.props.saveChanges(this.state.officerName.value[2]);\n    }else{\n    //here\n    this.handleDialogOpen(\"Officer transfer successfully !!\",\"\");  \n    }\n    this.setState({\n      openDialog:true,\n    })\n})\n.catch(err => {\n    console.log(err);   \n    //here       \n    this.handleDialogOpen(err,\"Error Occur\");        \n    this.setState({\n      openDialog:true,\n        saveButtondisable:false,\n    })\n});\n\n        \n    \n    // this.props.onSave();\n  }\n\n  handlePostChange = value => {\n    let filterPostValue;\n    if (value == null) {\n      filterPostValue = \"\";\n    } else {\n      filterPostValue = value.value;\n    }\n\n    this.setState({\n      post: value,\n      filterPost: filterPostValue,\n      officerName: \"\"\n    });\n  };\n\n  handleOfficerChange = (value) => {\n    console.log(\"check\",value);\n    if (value == null) {\n      value = { value: \"\" };\n    }\n\n    this.setState({\n      officerName: value\n    });\n  };\n\n\nhandleClose = () => {\n    this.setState({ openDialog: false });\n};\n\n\n  render() {\n    const { classes, theme } = this.props;\n    const officerPost = hierarchy1\n      .slice(0, hierarchy.indexOf(getCookie(\"roadGPortalRole\")))\n      .map(op => ({\n        value: op[1],\n        label: op[0]\n      }));\n    // const officer = this.props.officerData\n    //   .filter(officer => {\n    //     return officer.officer_type == this.state.post;\n    //   })\n    //   .map(officer => ({\n    //     value: officer.officer_id.name + officer.officer_id.phoneNo,\n    //     label: officer.officer_id.name + officer.officer_id.phoneNo\n    //   }));\n\n    //console.log(\"Officer --->\" + officer.officer_id);\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        color: theme.palette.text.primary,\n        \"& input\": {\n          font: \"inherit\"\n        }\n      })\n    };\n\n    return (\n      <Paper className={classes.ProfileWrapper} >\n        <Toolbar>\n          <Typography\n            variant=\"headline\"\n            style={{ textAlign: \"center\", width: \"100%\" }}\n          >\n            Manage Officer Charge Here\n          </Typography>\n        </Toolbar>\n        <div className={classes.divider} />\n        <NoSsr>\n          <Select\n            classes={classes}\n            styles={selectStyles}\n            options={officerPost}\n            components={components}\n            value={this.state.post}\n            onChange={this.handlePostChange}\n            placeholder=\"Select Post\"\n            isClearable\n          />\n\n          <div className={classes.divider} />\n          <Select\n            classes={classes}\n            styles={selectStyles && {marginTop:\"200dp\"}}\n            \n            options={\n              // officer\n              this.props.officerData\n                .filter(officer => {\n                  return officer.officer_type == this.state.filterPost;\n                })\n                .map(officer => ({\n                  value: [officer.officer_id._id,officer.officer_type],\n                  label:\n                    officer.officer_id.name +\n                    \"   No. - \" +\n                    officer.officer_id.phoneNo +\n                    \"  ( Office : \" +\n                    officer.office_type +\n                    \" ) \"\n                }))\n            }\n            components={components}\n            value={this.state.officerName}\n            onChange={this.handleOfficerChange}\n            placeholder=\"Select Officer\"\n          />\n          <div className={classes.divider} /><br/>\n          <Button\n            style={{width:\"100%\"}}\n            onClick={this.chargeTransfer}\n            disabled={this.state.saveButtondisable}\n            color=\"secondary\"\n            variant=\"outlined\"\n          >\n            Save\n          </Button>\n        </NoSsr>\n\n        <GeneralDialog \n                openDialogState = {this.state.openDialog}\n                dialogTitle = {this.state.dialogTitle}\n                dialogMsg = {this.state.dialogMsg}  \n                handleClose={this.handleClose}\n                handleDialogOpen={this.handleDialogOpen}\n            >\n                <Button onClick={this.handleClose}>OK</Button>\n            </GeneralDialog>\n      </Paper>\n    );\n  }\n}\n\nManageCharge.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ManageCharge);","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport GeneralDialog from \"../Components/GeneralDialog\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"react-select\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { getCookie, url } from \"../constants\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n  textField: {\n    width: \"100%\",\n    textAlign: \"left\"\n  },\n  wrapper: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    textAlign: \"center\"\n  },\n  ReceiveOfficerWrapper: {\n    margin: \"auto\",\n    padding: \"10px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"50%\"\n    }\n  }\n});\n\nclass ReceiveOfficerComponent extends Component {\n  state = {\n    postData: [],\n    officerData: [],\n    value: 0,\n    post: \"\",\n    post1: {\n      label: \"\"\n    },\n    openDialog: false,\n    officerName1: {\n      label: \"\"\n    },\n    officerName: \"\",\n    generateBtnDisable: false,\n    assignBtnDisable: false,\n    sanctioned_Post: \"\",\n    sanctionedPostLable: \"DEE\",\n    districts: \"\",\n  };\n\n  handleDialogOpen = (dialogMsg, dialogTitle) => {\n    this.setState({\n      openDialog: true,\n      dialogMsg: dialogMsg,\n      dialogTitle: dialogTitle\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ openDialog: false });\n    if (this.state.toLogin) {\n      this.props.history.push(\"/\");\n    }\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleOfficerChange = value => {\n    if (value == null) {\n      value = { value: \"\" };\n    }\n    this.setState({\n      officerName1: value,\n      officerName: value\n    });\n  };\n\n  handlePostChange = e => {\n    let value = e.label;\n    console.log(\"check 3\", e);\n    if (value == null) {\n      value = { value: \"\" };\n    }\n\n    this.setState({\n      post1: e,\n      post: e\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  componentWillMount = () => {\n    fetch(url + \"getUnallocatedOfficers/\", {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        auth: \"token \" + getCookie(\"roadGPortalAuth\")\n      },\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          console.log(\"data\", res.data);\n          this.setState({\n            officerData: res.data\n          });\n        } else {\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.handleDialogOpen(err.message, \"Please try again later \");\n      });\n\n    fetch(url + \"getAllJrPosts/\", {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        auth: \"token \" + getCookie(\"roadGPortalAuth\")\n      },\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          this.setState({\n            postData: res.data\n          });\n        } else {\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.handleDialogOpen(err.message, \"Please try again later \");\n      });\n    let role = getCookie(\"roadGPortalRole\");\n    let label = \"\";\n    if (role === \"Chief Engineer\") {\n      label = \"Enter Name Of Circle (ex. ASTC(Ahmedabad State Circle ))\";\n      role = \"SE\";\n    } else if (role === \"Deputy Executive Engineer\") {\n      label = \"Enter Name Of Sanctioned Post(ex. SO1,SO2)\";\n      role = \"\";\n    } else if (role === \"Executive Engineer\") {\n      label = \"Enter Name Of Sub Division (ex.Subdivision Mehsana... )\";\n      role = \"DEE\";\n    } else if (role === \"Superintending Engineer\") {\n      label = \"Enter Name Of  Division (ex.Ahmedabad,Mehsana... )\";\n      role = \"EE\";\n    }\n    this.setState({ sanctionedPostLable: label, officerRole: role });\n  };\n\n  performValidataion = flag => {\n    if (this.state.officerName1.label.length > 0) {\n      //Flag 0 For Assign Post\n      //Flag 1 For Generate Post\n\n      if (flag === 0 && this.state.post1.label.length > 0) return true;\n      if (flag === 1) {\n        if (this.state.sanctioned_Post.length > 0) {\n          if (\n            this.state.officerRole === \"EE\" &&\n            this.state.districts.length === 0\n          ) {\n            return false;\n          }\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n\n  handleGeneratePost = () => {\n    if (this.performValidataion(1)) {\n      this.setState({ generateBtnDisable: true });\n      fetch(url + \"addOfficer\", {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          auth: \"token \" + getCookie(\"roadGPortalAuth\")\n        },\n\n        method: \"POST\",\n        body: JSON.stringify({\n          post_office_type: this.state.sanctioned_Post,\n          officer_id: this.state.officerName.value,\n          operationFlag: \"oonp\",\n          post_districts: this.state.districts.split(\",\")\n        })\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.success) {\n            //success\n            this.handleDialogOpen(res.data, \"Notice\");\n          } else {\n            //Error\n            this.handleDialogOpen(res.data, \"Error\");\n            console.log(\"Error : \", res);\n          }\n          this.setState({ generateBtnDisable: false });\n        })\n        .catch(err => {\n          console.log(err);\n          this.handleDialogOpen(\"Please try again later \");\n          this.setState({ generateBtnDisable: false });\n        });\n    } else {\n      this.handleDialogOpen(\"Please Fill In All The Fields \", \"Error\");\n    }\n  };\n\n  handleAssignPost = () => {\n    console.log(\"Before\");\n\n    if (this.performValidataion(0)) {\n      this.setState({ assignBtnDisable: true });\n\n      console.log(\"after\");\n      fetch(url + \"hierarchyTransfer/\", {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          auth: \"token \" + getCookie(\"roadGPortalAuth\")\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          post_id: this.state.post.value._id,\n          officer_id: this.state.officerName.value,\n          post_office_type: this.state.post.value.office_type\n        })\n      })\n        .then(res => res.json())\n        .then(res => {\n          this.setState({ assignBtnDisable: false });\n\n          if (res.success) {\n            //success\n            this.handleDialogOpen(res.data, \"Notice\");\n          } else {\n            //Error\n            console.log(res.data, \"Error :\");\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({ assignBtnDisable: false });\n\n          this.handleDialogOpen(err.message, \"Please try again later \");\n        });\n    } else {\n      this.handleDialogOpen(\"Please Fill In all Fields\", \"Error \");\n    }\n  };\n\n  render() {\n    const allOfficer = this.state.officerData.map(op => ({\n      value: op._id,\n      label: op.name + \" ( \" + op.phoneNo + \" )\"\n    }));\n    const allPost = this.state.postData.map(op => ({\n      value: op,\n      label: op.post_id\n    }));\n    const { classes, theme } = this.props;\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        color: theme.palette.text.primary,\n        \"& input\": {\n          font: \"inherit\"\n        }\n      })\n    };\n\n    return (\n      <div className={classes.wrapper}>\n        <GeneralDialog\n          openDialogState={this.state.openDialog}\n          dialogTitle={this.state.dialogTitle}\n          dialogMsg={this.state.dialogMsg}\n          handleClose={this.handleClose}\n          handleDialogOpen={this.handleDialogOpen}\n        >\n          <Button onClick={this.handleClose}>OK</Button>\n        </GeneralDialog>\n        <Paper className={classes.ReceiveOfficerWrapper}>\n          <Toolbar>\n            <Typography\n              variant=\"headline\"\n              style={{ textAlign: \"center\", width: \"100%\" }}\n            >\n              Receive Officer\n            </Typography>\n          </Toolbar>\n          <br />\n          <Select\n            classes={classes}\n            styles={selectStyles && { marginTop: \"200dp\" }}\n            options={allOfficer}\n            value={this.state.officerName}\n            onChange={this.handleOfficerChange}\n            placeholder=\"Select Transferred Officer\"\n          />\n          <br />\n          <Divider />\n          <Paper\n            elevation=\"0\"\n            className={classes.root}\n            style={{ paddingLeft: \"-30px\", paddingRight: \"-30px\" }}\n          >\n            <Tabs\n              value={this.state.value}\n              onChange={this.handleTabChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered\n            >\n              <Tab label=\"ASSIGN OFFICER POSITION\" />\n              <Tab label=\"CREATE OFFICER POSITION\" />\n            </Tabs>\n          </Paper>\n          <Divider />\n\n          {this.state.value == 0 && (\n            <Paper elevation=\"0\" style={{ padding: \"40px\" }}>\n              <Select\n                classes={classes}\n                styles={selectStyles && { marginTop: \"100dp\" }}\n                options={allPost}\n                value={this.state.post}\n                onChange={e => this.handlePostChange(e)}\n                placeholder=\"Select Post Of Officer\"\n              />\n              <br />\n              <Button\n                style={{ width: \"100%\" }}\n                onClick={this.handleAssignPost}\n                color=\"secondary\"\n                variant=\"outlined\"\n                disabled={this.state.assignBtnDisable}\n              >\n                {this.state.assignBtnDisable\n                  ? \"Assigning Post...\"\n                  : \"Assign Post\"}\n              </Button>\n            </Paper>\n          )}\n          {this.state.value == 1 && (\n            <Paper\n              elevation=\"0\"\n              style={{\n                paddingLeft: \"40px\",\n                paddingRight: \"40px\",\n                paddingBottom: \"40px\",\n                paddingTop: \"20px\"\n              }}\n            >\n              <TextField\n                id=\"sanctioned_Post\"\n                label={this.state.sanctionedPostLable}\n                name=\"sanctioned_Post\"\n                className={classes.textField}\n                value={this.state.sanctioned_Post}\n                onChange={this.handleChange}\n                margin=\"none\"\n              />\n              {this.state.officerRole === \"EE\" && (\n                <TextField\n                  id=\"districts\"\n                  label=\"Name of District (enter , after each district name ex. Ahmedabad,Surat...)\"\n                  name=\"districts\"\n                  className={classes.textField}\n                  value={this.state.districts}\n                  onChange={this.handleChange}\n                  margin=\"none\"\n                />\n              )}\n\n              <br />\n              <br />\n              <Button\n                style={{ width: \"100%\" }}\n                onClick={this.handleGeneratePost}\n                color=\"secondary\"\n                variant=\"outlined\"\n                disabled={this.state.generateBtnDisable}\n              >\n                {this.state.generateBtnDisable\n                  ? \"Generating Post...\"\n                  : \"Generate Post\"}\n              </Button>\n            </Paper>\n          )}\n        </Paper>\n      </div>\n    );\n  }\n}\n\nReceiveOfficerComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ReceiveOfficerComponent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n      0.08,\n    ),\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  singleValue: {\n    fontSize: 16,\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    fontSize: 16,\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps,\n        },\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction SingleValue(props) {\n  return (\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused,\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\nclass RoadCode extends React.Component {\n  state = {\n    single: null,\n    multi: null,\n  };\n\n  handleChange = value => {\n    console.log(value);\n    \n    let newopt = value.map(item => {\n      return {\n          label: item.value,\n          value: item.value\n      }\n    })\n\n    console.log(newopt);\n    \n\n    this.props.setRoadCodes(newopt);\n    this.setState({\n      multi: newopt\n    })\n  };\n\n  componentWillReceiveProps() {\n    this.setState({\n      multi: this.props.values\n    })\n  }\n\n  render() {\n    const { classes, theme } = this.props;\n\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        color: theme.palette.text.primary,\n        '& input': {\n          font: 'inherit',\n        },\n      }),\n    };\n\n    return (\n      <div className={classes.root}>\n        <NoSsr>\n          <Select\n            classes={classes}\n            styles={selectStyles}\n            textFieldProps={{\n              label: 'Road Code',\n              InputLabelProps: {\n                shrink: true,\n              },\n            }}\n            options={this.props.options}\n            components={components}\n            value={this.props.values}\n            onChange={this.handleChange}\n            placeholder=\"Select Roads\"\n            isMulti\n          />\n        </NoSsr>\n      </div>\n    );\n  }\n}\n\nRoadCode.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(RoadCode);","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from \"react-select\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Divider from \"@material-ui/core/Divider\";\nimport RoadCode from \"../Components/RoadCode\";\nimport GeneralDialog from \"../Components/GeneralDialog\";\nimport { url, getCookie } from \"../constants\";\n//import ChipInput from \"material-ui-chip-input\";\n\nconst styles = theme => ({\n  wrapper: {\n    // marginTop: '-56px',\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    textAlign: \"center\"\n  },\n  textWrapper: {\n    padding: \"10px\"\n  },\n  textField: {\n    width: \"100%\",\n    textAlign: \"left\"\n  },\n  AddOfficerWrapper: {\n    margin: \"auto\",\n    padding: \"10px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"50%\"\n    }\n  }\n});\n\nclass AddNewOfficer extends Component {\n  state = {\n    startAnimation: false,\n    name: \"\",\n    email: \"\",\n    phoneNo: \"\",\n    value: 0,\n    postData: [],\n    post: \"\",\n    sanctionedPostLable: \"DEE\",\n    sanctioned_Post: \"\",\n    districts: \"\",\n    generateBtnDisable: false,\n    assignBtnDisable: false\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handlePostChange = e => {\n    let value = e.label;\n    console.log(\"check 3\", e);\n    if (value == null) {\n      value = { value: \"\" };\n    }\n\n    this.setState({\n      post: e\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleDialogOpen = (dialogMsg, dialogTitle) => {\n    this.setState({\n      openDialog: true,\n      dialogMsg: dialogMsg,\n      dialogTitle: dialogTitle\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ openDialog: false });\n  };\n\n  performValidataion = flag => {\n    //Flag 0 For Assign Post\n    //Flag 1 For Generate Post\n\n    if (\n      this.state.name.length > 0 &&\n      this.state.phoneNo.length === 10 &&\n      this.state.email.length > 0\n    ) {\n      if (flag === 0 && this.state.post.label.length > 0) return true;\n      if (flag === 1) {\n        if (this.state.sanctioned_Post.length > 0) {\n          if (\n            this.state.officerRole === \"EE\" &&\n            this.state.districts.length === 0\n          ) {\n            return false;\n          }\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n\n  handleGeneratePost = () => {\n    if (this.performValidataion(1)) {\n      getCookie(\"roadGPortalCurrentPosts\");\n      this.setState({ generateBtnDisable: true });\n      fetch(url + \"addOfficer\", {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          auth: \"token \" + getCookie(\"roadGPortalAuth\")\n        },\n\n        method: \"POST\",\n        body: JSON.stringify({\n          officer_name: this.state.name,\n          post_office_type: this.state.sanctioned_Post,\n          officer_phoneNo: this.state.phoneNo,\n          officer_email: this.state.email,\n          operationFlag: \"nonp\",\n          post_districts: this.state.districts.split(\",\")\n        })\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.success) {\n            //success\n            this.handleDialogOpen(res.data, \"Notice\");\n          } else {\n            //Error\n            this.handleDialogOpen(res.data, \"Error\");\n            console.log(\"Error : \", res);\n          }\n          this.setState({ generateBtnDisable: false });\n        })\n        .catch(err => {\n          console.log(err);\n          this.handleDialogOpen(\"Please try again later \");\n          this.setState({ generateBtnDisable: false });\n        });\n    } else {\n      this.handleDialogOpen(\"Please Fill In All The Fields \", \"Error\");\n    }\n  };\n  handleAssignPost = () => {\n    console.log(\"Before\");\n\n    if (this.performValidataion(0)) {\n      this.setState({ assignBtnDisable: true });\n      console.log(\"after\");\n      fetch(url + \"addOfficer/\", {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          auth: \"token \" + getCookie(\"roadGPortalAuth\")\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          post_id: this.state.post.value._id,\n          post_office_type: this.state.post.value.office_type,\n          officer_name: this.state.name,\n          officer_phoneNo: this.state.phoneNo,\n          officer_email: this.state.email,\n          operationFlag: \"noop\"\n        })\n      })\n        .then(res => res.json())\n        .then(res => {\n          this.setState({ assignBtnDisable: false });\n          if (res.success) {\n            //success\n            this.handleDialogOpen(res.data, \"Notice\");\n          } else {\n            //Error\n            this.handleDialogOpen(res.data, \"Error\");\n            console.log(\"Error : \", res);\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          this.handleDialogOpen(err.message, \"Please try again later \");\n          this.setState({ assignBtnDisable: false });\n        });\n    } else {\n      this.handleDialogOpen(\"Please Fill In All The Fields \", \"Error\");\n    }\n  };\n  handleDistrictChange = chips => {\n    console.log(\"Disticts\" + chips);\n    //  this.setState({districts:chips})\n  };\n  componentWillMount = () => {\n    fetch(url + \"getAllJrPosts/\", {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        auth: \"token \" + getCookie(\"roadGPortalAuth\")\n      },\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          this.setState({\n            postData: res.data\n          });\n          console.log(\"Response data\" + res.data);\n        } else {\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.handleDialogOpen(err.message, \"Please try again later \");\n      });\n    let role = getCookie(\"roadGPortalRole\");\n    let label = \"\";\n    if (role === \"Chief Engineer\") {\n      label = \"Enter Name Of Circle (ex. ASTC(Ahmedabad State Circle ))\";\n      role = \"SE\";\n    } else if (role === \"Deputy Executive Engineer\") {\n      label = \"Enter Name Of Sanctioned Post(ex. SO1,SO2)\";\n      role = \"\";\n    } else if (role === \"Executive Engineer\") {\n      label = \"Enter Name Of Sub Division (ex.Subdivision Mehsana... )\";\n      role = \"DEE\";\n    } else if (role === \"Superintending Engineer\") {\n      label = \"Enter Name Of  Division (ex.Ahmedabad,Mehsana... )\";\n      role = \"EE\";\n    }\n    this.setState({ sanctionedPostLable: label, officerRole: role });\n  };\n\n  componentDidMount() {\n    this.setState({\n      startAnimation: true\n    });\n  }\n\n  render() {\n    const allPost = this.state.postData.map(op => ({\n      value: op,\n      label: op.post_id\n    }));\n    const { classes, theme } = this.props;\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        color: theme.palette.text.primary,\n        \"& input\": {\n          font: \"inherit\"\n        }\n      })\n    };\n\n    return (\n      <div className={classes.wrapper}>\n        <GeneralDialog\n          openDialogState={this.state.openDialog}\n          dialogTitle={this.state.dialogTitle}\n          dialogMsg={this.state.dialogMsg}\n          handleClose={this.handleClose}\n          handleDialogOpen={this.handleDialogOpen}\n        >\n          <Button onClick={this.handleClose}>OK</Button>\n        </GeneralDialog>\n        <Paper className={classes.AddOfficerWrapper}>\n          {/* <Collapse in={this.state.startAnimation}> */}\n          <Toolbar>\n            <Typography\n              variant=\"headline\"\n              style={{ textAlign: \"center\", width: \"100%\" }}\n            >\n              Add New Officer\n            </Typography>\n          </Toolbar>\n          <Grid container>\n            <Grid item xs={12} className={classes.textWrapper}>\n              <TextField\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                className={classes.textField}\n                value={this.state.name}\n                onChange={this.handleChange}\n                margin=\"none\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6} className={classes.textWrapper}>\n              <TextField\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                className={classes.textField}\n                value={this.state.email}\n                onChange={this.handleChange}\n                margin=\"none\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6} className={classes.textWrapper}>\n              <TextField\n                id=\"phoneNo\"\n                label=\"Phone Number\"\n                name=\"phoneNo\"\n                className={classes.textField}\n                value={this.state.phoneNo}\n                onChange={this.handleChange}\n                margin=\"none\"\n              />\n            </Grid>\n          </Grid>\n          {/* </Collapse> */}\n          <br />\n          <Paper\n            elevation=\"0\"\n            className={classes.root}\n            style={{ paddingLeft: \"-30px\", paddingRight: \"-30px\" }}\n          >\n            <Tabs\n              value={this.state.value}\n              onChange={this.handleTabChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered\n            >\n              <Tab label=\"ASSIGN OFFICER POSITION\" />\n              <Tab label=\"CREATE OFFICER POSITION\" />\n            </Tabs>\n          </Paper>\n          <Divider />\n\n          {this.state.value == 0 && (\n            <Paper elevation=\"0\" style={{ padding: \"40px\" }}>\n              <Select\n                classes={classes}\n                styles={selectStyles && { marginTop: \"100dp\" }}\n                options={allPost}\n                value={this.state.post}\n                onChange={e => this.handlePostChange(e)}\n                placeholder=\"Select Post Of Officer\"\n              />\n              <br />\n              <Button\n                style={{ width: \"100%\" }}\n                onClick={this.handleAssignPost}\n                color=\"secondary\"\n                variant=\"outlined\"\n                disabled={this.state.assignBtnDisable}\n              >\n                {this.state.assignBtnDisable\n                  ? \"Assigning Post...\"\n                  : \"Assign Post\"}\n              </Button>\n            </Paper>\n          )}\n\n          {this.state.value == 1 && (\n            <Paper\n              elevation=\"0\"\n              style={{\n                paddingLeft: \"40px\",\n                paddingRight: \"40px\",\n                paddingBottom: \"40px\",\n                paddingTop: \"20px\"\n              }}\n            >\n              <TextField\n                id=\"sanctioned_Post\"\n                label={this.state.sanctionedPostLable}\n                name=\"sanctioned_Post\"\n                className={classes.textField}\n                value={this.state.sanctioned_Post}\n                onChange={this.handleChange}\n                margin=\"none\"\n              />\n              {this.state.officerRole === \"EE\" && (\n                <TextField\n                  id=\"districts\"\n                  label=\"Name of District (enter , after each district name ex. Ahmedabad,Surat...)\"\n                  name=\"districts\"\n                  className={classes.textField}\n                  value={this.state.districts}\n                  onChange={this.handleChange}\n                  margin=\"none\"\n                />\n              )}\n              <br />\n              <br />\n              <Button\n                style={{ width: \"100%\" }}\n                onClick={this.handleGeneratePost}\n                color=\"secondary\"\n                variant=\"outlined\"\n                disabled={this.state.generateBtnDisable}\n              >\n                {this.state.generateBtnDisable\n                  ? \"Generating Post...\"\n                  : \"Generate Post\"}\n              </Button>\n            </Paper>\n          )}\n        </Paper>\n      </div>\n    );\n  }\n}\n\nAddNewOfficer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(AddNewOfficer);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// import Typography from '@material-ui/core/Typography';\nimport { Button, TextField } from \"@material-ui/core\";\nimport classnames from \"classnames\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport SideFilter from \"../Components/SideFilter\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n// import Button from '@material-ui/core/Button';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Profile from \"./Profile\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ComplaintContainer from \"./ComplaintContainer\";\nimport GeneralDialog from \"../Components/GeneralDialog\";\nimport ComplaintCount from \"../Components/complaintCount\";\nimport ComplaintChipCount from \"../Components/complaintChipCount\";\nimport ComplaintFullView from \"../Components/ComplaintFullView\";\nimport ManageCharge from \"./ManageCharge\";\nimport ReceiveOfficer from \"../Components/ReceiveOfficer\";\nimport AddNewOfficer from \"../Components/AddNewOfficer\";\nimport {\n  griev_type,\n  status_type,\n  getCookie,\n  url,\n  hierarchy,\n  hierarchy1\n} from \"../constants\";\nimport ManageComplaints from \"./ComplaintContainer\";\nimport { it } from \"date-fns/esm/locale\";\n\nconst styles = theme => ({\n  wrapper: {\n    marginTop: \"50px\",\n    // width: '100vw',\n    height: \"100vh\"\n    // display: 'flex',\n  },\n  centerStyle: {\n    textAlign: \"center\"\n  },\n  alignLeft: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    verticalAlign: \"middle\"\n  },\n  wrapperItem: {\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    textAlign: \"left\"\n  },\n  avatar: {\n    //padding: \"10px\",\n    margin: \"2px\",\n    // marginBottom: \"1px\",\n    width: 40,\n    height: 40\n    // minWidth: \"15px\",\n    // borderRadius: \"50%\",\n    // display: 'inline-block',\n    // textAlign: 'center'\n  },\n  textField: {\n    width: \"100%\"\n  },\n  sideFilter: {\n    height: \"90vh\",\n    overflowY: \"scroll\",\n    display: \"block\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  complaintChips: {\n    overflow: \"auto\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    paddingTop: \"20px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\"\n    }\n  },\n  sideFilterButton: {\n    position: \"fixed\",\n    bottom: \"20px\",\n    right: \"20px\",\n    display: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\"\n    }\n  }\n});\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass ManageOfficer extends Component {\n  state = {\n    page: 0,\n    rowsPerPage: 10,\n\n    openReceiveOfficerDialog: false,\n    openOfficerDialogState: false,\n    openComplaintDialogState: false,\n    openAddNewOfficerDialog: false,\n    openChargeDialog: false,\n    expandOfficerFilters: true,\n    openErrorDialog: false,\n\n    OfficerData: [],\n\n    OfficerMap: null,\n    searchQuery : \"\",\n    OfficerDialogData: null,\n    ComplaintDialogData: null,\n\n    Loading: true,\n\n    sideFilterDialogOpen: false\n  };\n\n  officerMap = null;\n  allOfficersData = [];\n  mapForFilteringOfficerRole = new Map(hierarchy1);\n  mapForSearchingOfficerRole = new Map(hierarchy1.map(e => e.slice().reverse()));\n  \n    \n  doSearch = e => {\n    let searchQuery = e.target.value.toLowerCase();\n\n    console.log(\"doSearch => \",this.state.OfficerData,searchQuery);\n    this.setState(oldState => {\n        let newSearchedData;\n\n        if(searchQuery.length < oldState.searchQuery.length){\n\n          console.log(this.mapForSearchingOfficerRole);\n          \n            newSearchedData = this.allOfficersData.filter(complaint => {\n                return complaint.officer_type\n                    && oldState.OfficerMap.get(this.mapForSearchingOfficerRole.get(complaint.officer_type.toUpperCase()))\n                    && Object.keys(complaint).some(k => {\n                        let bool = false;\n                        if(complaint[k] && complaint[k].includes && complaint[k].toLowerCase)\n                            bool = complaint[k].toLowerCase().includes(searchQuery)\n\n                        if(k === \"officer_id\"){\n\n                          console.log(complaint[k]);\n                          \n                          bool = Object.keys(complaint[k]).some(x => {\n          \n                              let bool = false;\n                              if(complaint[k][x] && complaint[k][x].includes && complaint[k][x].toLowerCase){\n                                console.log(\"Gone inside ! => \",complaint[k][x].toLowerCase(),searchQuery)\n                                bool = complaint[k][x].toLowerCase().includes(searchQuery)\n                              }\n                              return bool;\n                          })\n                      }\n      \n                        \n                      console.log(\"Inside some : \",bool);\n                      \n                      return bool;\n                    })\n            })\n\n        }else{\n            newSearchedData = oldState.OfficerData.filter(c => {\n                //console.log(\"Individual complaint :\",c);\n                //console.log(\"Keys : \", Object.keys(c));\n                \n                let b =  Object.keys(c).some(k => {\n                    console.log(\"Keys : \", c[k], k);\n                    \n                    let bool = false;\n                    if(c[k] && c[k].includes && c[k].toLowerCase){\n                      console.log(\"Gone inside ! => \",c[k].toLowerCase(),searchQuery)\n                      bool = c[k].toLowerCase().includes(searchQuery)\n                    }\n\n                    if(k === \"officer_id\"){\n\n                        console.log(c[k]);\n                        \n                        bool = Object.keys(c[k]).some(x => {\n        \n                            let bool = false;\n                            if(c[k][x] && c[k][x].includes && c[k][x].toLowerCase){\n                              console.log(\"Gone inside ! => \",c[k][x].toLowerCase(),searchQuery)\n                              bool = c[k][x].toLowerCase().includes(searchQuery)\n                            }\n                            return bool;\n                        })\n                    }\n\n                    console.log(\"Inside some : \",bool);\n                    \n                    return bool;\n                })\n\n                console.log(\"inside filter : \",b);\n                return b;    \n            })\n\n            console.log(\"newSearchedData\",newSearchedData)\n        }\n        this.getTotalCountOfComplaintTypes(newSearchedData);\n        return{searchQuery:searchQuery, OfficerData:newSearchedData }\n    })\n    \n}\n\n  handleChange = name => e => {\n    this.setState({\n      Loading: true\n    });\n\n    let value = e.target.value;\n    console.log(value, name);\n\n    this.setState(oldState => {\n      let checked, newMap;\n      newMap = new Map(oldState[name]);\n      checked = !newMap.get(value);\n      newMap.set(value, checked);\n\n      value = this.mapForFilteringOfficerRole.get(value);\n      console.log(\"nwer map \", newMap);\n      console.log(value, name);\n\n      let newFilteredOfficersDataArray = [];\n\n      if (checked) {\n        console.log(this.allOfficersData);\n\n        newFilteredOfficersDataArray = this.allOfficersData.filter(\n          complaint => {\n            return (\n              complaint.officer_type &&\n              complaint.officer_type.toUpperCase() == value.toUpperCase()\n            );\n          }\n        );\n\n        newFilteredOfficersDataArray = newFilteredOfficersDataArray.concat(\n          oldState.OfficerData\n        );\n        console.log(\"Added\", newFilteredOfficersDataArray);\n      } else {\n        //Checked Else\n        if (oldState.OfficerData == []) {\n          oldState.OfficerData = this.allOfficersData;\n        }\n        let jsonName = \"officer_type\";\n        newFilteredOfficersDataArray = oldState.OfficerData.filter(\n          complaint =>\n            complaint[jsonName] &&\n            complaint[jsonName].toUpperCase() !== value.toUpperCase()\n        );\n      }\n      this.getTotalCountOfComplaintTypes(newFilteredOfficersDataArray);\n      return {\n        [name]: newMap,\n        Loading: false,\n        OfficerData: newFilteredOfficersDataArray\n      };\n    });\n  };\n\n  handleExpandClick = Eventame => {\n    console.log(\"event\" + Eventame);\n\n    this.setState(state => ({ [Eventame]: !state[Eventame] }));\n  };\n\n  // handleSearchFielde = event => {\n  //   const value = event.target.value;\n  //   const id = event.target.id;\n  //   console.log(\"Search field\" + value);\n  //   this.setState({ searchFieldValue: value });\n  // };\n\n  //handling table pagination\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n  //------------------\n\n  handleComplaintDialogClose = () => {\n    this.setState({\n      OfficerDialogData: null,\n      openComplaintDialogState: false\n    });\n  };\n\n  handleOfficerDialogClose = () => {\n    this.setState({\n      OfficerDialogData: null,\n      openOfficerDialogState: false\n    });\n  };\n\n  handleChargeDialogClose = () => {\n    console.log(\"Handle Charge Dialog called\");\n    this.setState({\n      openChargeDialog: false\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    Object.entries(this.props).forEach(\n      ([key, val]) =>\n        prevProps[key] !== val && console.log(`Prop '${key}' changed`)\n    );\n    Object.entries(this.state).forEach(\n      ([key, val]) =>\n        prevState[key] !== val && console.log(`State '${key}' changed`)\n    );\n  }\n  handleOfficerDialogOpen = OfficerDialogData => {\n    this.setState({\n      OfficerDialogData: OfficerDialogData,\n      openOfficerDialogState: true\n    });\n  };\n\n  handleComplaintDialogOpen = OfficerDialogData => {\n    let data = [];\n    console.log(\"OfficerDialog \", OfficerDialogData, typeof OfficerDialogData);\n    if (Array.isArray(OfficerDialogData)) {\n      for (let i = 0; i < OfficerDialogData.length; i++)\n        data.push(OfficerDialogData[i][\"_id\"]);\n    } else {\n      data.push(OfficerDialogData[\"_id\"]);\n    }\n\n    this.setState({\n      OfficerIdArray: data,\n      openComplaintDialogState: true\n    });\n  };\n\n  handleChargeDialogOpen = item => {\n    console.log(item);\n\n    this.setState({\n      officetype: item.office_type,\n      postId: item._id,\n      officerId: item.officer_id._id,\n      openChargeDialog: true\n    });\n  };\n\n  handleDialogOpen = (dialogMsg, dialogTitle) => {\n    this.setState({\n      openErrorDialog: true,\n      dialogMsg: dialogMsg,\n      dialogTitle: dialogTitle\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ openErrorDialog: false });\n  };\n  handleCheckBoxChange = name => {};\n  componentWillMount() {\n    this.officerMap = new Map();\n    hierarchy1\n      .map(e => e[0])\n      .slice(0, hierarchy.indexOf(getCookie(\"roadGPortalRole\")))\n      .forEach(e => {\n        this.officerMap.set(e, true);\n        console.log(\"balue of e\" + e);\n      });\n    console.log(this.officerMap);\n    this.setState({\n      OfficerMap: this.officerMap\n    });\n    this.getTotalCountOfComplaintTypes();\n  }\n\n  getTotalCountOfComplaintTypes(newFilteredOfficersDataArray) {\n    let tTotal = 0,\n      tPending = 0,\n      tEmergency = 0,\n      tCompleted = 0,\n      tApproved = 0;\n\n    if (newFilteredOfficersDataArray == undefined) {\n      this.state.OfficerData.forEach(obj => {\n        console.log(\"Total complaints ===>\" + obj.complaint_data.total);\n        tTotal += obj.complaint_data.total;\n        tPending += obj.complaint_data.pending;\n        tEmergency += obj.complaint_data.emergency;\n        tCompleted += obj.complaint_data.completed;\n        tApproved += obj.complaint_data.approved;\n      });\n    } else {\n      newFilteredOfficersDataArray.forEach(obj => {\n        console.log(\"Total complaints ===>\" + obj.complaint_data.total);\n        tTotal += obj.complaint_data.total;\n        tPending += obj.complaint_data.pending;\n        tEmergency += obj.complaint_data.emergency;\n        tCompleted += obj.complaint_data.completed;\n        tApproved += obj.complaint_data.approved;\n      });\n    }\n    console.log(\n      \"total: \" +\n        tTotal +\n        \" Pending: \" +\n        tPending +\n        \" Emergency: \" +\n        tEmergency +\n        \" Completed: \" +\n        tCompleted +\n        \" Approved: \" +\n        tApproved\n    );\n    this.setState({ tTotal, tPending, tEmergency, tApproved, tCompleted });\n  }\n  componentDidMount() {\n    let headers = new Headers();\n    headers.append(\"origin\", \"*\");\n    headers.append(\"auth\", \"token \" + getCookie(\"roadGPortalAuth\"));\n\n    let req = new Request(url + \"getAllJrdIds\", {\n      method: \"GET\",\n      headers: headers,\n      mode: \"cors\"\n    });\n\n    this.setState(oldState => ({\n      officerData: oldState.officerData\n    }));\n    fetch(req)\n      .then(res => res.json())\n      .then(res => {\n        console.table(res.data);\n        //console.log(res.data);\n        res.data = res.data.reverse();\n        this.allOfficersData = res.data;\n        if (res.success) {\n          this.setState({\n            Loading: false,\n            OfficerData: res.data\n          });\n\n          this.getTotalCountOfComplaintTypes(res.data);\n        } else {\n          this.handleDialogOpen(res.data, \"Error\");\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          Loading: false\n        });\n        this.handleDialogOpen(err.message, \"Error\");\n      });\n  }\n\n  sideFilterHandleOpen = () => {\n    this.setState({\n      sideFilterDialogOpen: true\n    });\n  };\n\n  sideFilterHandleClose = () => {\n    this.setState({\n      sideFilterDialogOpen: false\n    });\n  };\n  handleReceive = () => {\n    this.setState({\n      openReceiveOfficerDialog: true\n    });\n  };\n  handleAddnewOfficer = () => {\n    this.setState({ openAddNewOfficerDialog: true });\n  };\n\n  handleReceiveOfficerDialogClose = () => {\n    this.setState({\n      openReceiveOfficerDialog: false\n    });\n  };\n\n  handleAddNewOfficerDialogClose = () => {\n    this.setState({\n      openAddNewOfficerDialog: false\n    });\n  };\n\nsideFilter = (classes, officerRoleRender) => (\n    <div>                  \n      <div className={classes.wrapperItem} style={{paddingRight:'0px'}}>\n          \n          <div className={classes.alignLeft}>\n              <TextField\n                      id=\"outlined-name\"\n                      style={{width:'100%'}}\n                      label=\"Search\"\n                      className={classes.textField}\n                      value={this.state.searchQuery}\n                      onChange={this.doSearch}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      />\n          </div>\n          <br/>\n          <Divider />\n      </div>\n\n\n      <div className={classes.wrapperItem}>\n        <div className={classes.alignLeft}>\n          <Typography variant=\"subheading\">Officer Role</Typography>\n\n          <IconButton\n            style={{ padding: \"0px\" }}\n            className={classnames(classes.expand, {\n              [classes.expandOpen]: this.state.expandOfficerFilters\n            })}\n            onClick={() => this.handleExpandClick(\"expandOfficerFilters\")}\n            aria-expanded={this.state.expandOfficerFilters}\n            aria-label=\"Show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n\n        </div>\n        <br />\n        <Divider />\n\n        <Collapse in={this.state.expandOfficerFilters} timeout=\"auto\">\n          <FormGroup>{officerRoleRender}</FormGroup>\n        </Collapse>\n        <br />\n        <Divider />\n        <br />\n        <Button\n          style={{ width: \"100%\" }}\n          onClick={() => {\n            this.handleComplaintDialogOpen(this.allOfficersData);\n          }}\n          color=\"secondary\"\n          variant=\"outlined\"\n        >\n          View All COMPLAINTS\n        </Button>\n        <br />\n        <br />\n        <Button\n          style={{ width: \"100%\" }}\n          onClick={this.handleReceive}\n          color=\"secondary\"\n          variant=\"outlined\"\n        >\n          RECEIVE OFFICER\n        </Button>\n        <br />\n        <br />\n        <Button\n          style={{ width: \"100%\" }}\n          onClick={this.handleAddnewOfficer}\n          color=\"secondary\"\n          variant=\"outlined\"\n        >\n          Add New OFFICER\n        </Button>\n      </div>\n    </div>\n  );\n\n  render() {\n    let { classes } = this.props;\n\n    const { rowsPerPage, page } = this.state;\n    const emptyRows =\n      rowsPerPage -\n      Math.min(rowsPerPage, this.state.OfficerData.length - page * rowsPerPage);\n    const officerRoleRender = [];\n\n    // console.log(\"Helo\", this.officerMap);\n\n    // this.state.OfficerMap.forEach((value, key) =>\n    //  // console.log(\"hello\", value, key)\n    // );\n    this.state.OfficerMap.forEach((value, key) =>\n      officerRoleRender.push(\n        <FormControlLabel\n          key={key}\n          checked={value}\n          value={key}\n          onChange={this.handleChange(\"OfficerMap\")}\n          control={<Checkbox />}\n          label={key}\n        />\n      )\n    );\n\n    return (\n      <div className={classes.wrapper}>\n        <GeneralDialog\n          openDialogState={this.state.openDialog}\n          dialogTitle={this.state.dialogTitle}\n          dialogMsg={this.state.dialogMsg}\n          handleClose={this.handleClose}\n          handleDialogOpen={this.handleDialogOpen}\n        >\n          {/* <Button>Hello</Button> */}\n        </GeneralDialog>\n\n        <GeneralDialog\n          openDialogState={this.state.sideFilterDialogOpen}\n          dialogTitle={\"Filter\"}\n          dialogMsg={\"\"}\n          handleClose={this.sideFilterHandleClose}\n          handleDialogOpen={this.sideFilterHandleOpen}\n        >\n          {this.sideFilter(classes, officerRoleRender)}\n        </GeneralDialog>\n\n        <Dialog\n          fullScreen\n          open={this.state.openReceiveOfficerDialog}\n          onClose={this.handleReceiveOfficerDialogClose}\n          TransitionComponent={Transition}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.handleReceiveOfficerDialogClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n          <ReceiveOfficer />\n        </Dialog>\n\n        <Dialog\n          fullScreen\n          open={this.state.openAddNewOfficerDialog}\n          onClose={this.handleAddNewOfficerDialogClose}\n          TransitionComponent={Transition}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.handleAddNewOfficerDialogClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n          <AddNewOfficer />\n        </Dialog>\n\n        <Dialog\n          fullScreen\n          open={this.state.openComplaintDialogState}\n          onClose={this.handleComplaintDialogOpen}\n          TransitionComponent={Transition}\n        >\n          <ManageComplaints\n            manageOfficer\n            OfficerIdArray={this.state.OfficerIdArray}\n            handleComplaintDialogClose={this.handleComplaintDialogClose}\n          />\n        </Dialog>\n\n        <Dialog\n          fullScreen\n          open={this.state.openChargeDialog}\n          onClose={this.handleChargeDialogClose}\n          TransitionComponent={Transition}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.handleChargeDialogClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n          <ManageCharge\n            officetype={this.state.officetype}\n            officerId={this.state.officerId}\n            postId={this.state.postId}\n            OnSave={this.handleChargeDialogClose}\n            officerData={this.allOfficersData}\n          />\n        </Dialog>\n\n        <Dialog\n          fullScreen\n          open={this.state.openOfficerDialogState}\n          onClose={this.handleOfficerDialogClose}\n          TransitionComponent={Transition}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.handleOfficerDialogClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n          <Profile OfficerData={this.state.OfficerDialogData} />\n        </Dialog>\n\n        <Paper style={{ margin: \"auto\" }}>\n          {this.state.Loading ? (\n            <LinearProgress className={classes.progress} />\n          ) : (\n            <div style={{ overflowX: \"auto\" }}>\n              <Grid container spacing={8} style={{ margin: \"auto\" }}>\n                <Grid item md={3} xs={12} className={classes.sideFilter}>\n                  {this.sideFilter(classes, officerRoleRender)}\n                </Grid>\n                <Grid item md={9} xs={12}>\n                  <Grid>\n                    <div className={classes.complaintChips}>\n                      <span style={{ margin: \"10px\" }}>\n                        <ComplaintChipCount\n                          type=\"Total Complaints\"\n                          data={this.state.tTotal}\n                        />\n                      </span>\n                      <span style={{ margin: \"10px\" }}>\n                        <ComplaintChipCount\n                          type=\"Pending\"\n                          data={this.state.tPending}\n                        />\n                      </span>\n                      <span style={{ margin: \"10px\" }}>\n                        <ComplaintChipCount\n                          type=\"Emergency\"\n                          data={this.state.tEmergency}\n                        />\n                      </span>\n                      <span style={{ margin: \"10px\" }}>\n                        <ComplaintChipCount\n                          type=\"Approved\"\n                          data={this.state.tApproved}\n                        />\n                      </span>\n                      <span style={{ margin: \"10px\" }}>\n                        <ComplaintChipCount\n                          type=\"Completed\"\n                          data={this.state.tCompleted}\n                        />\n                      </span>\n                    </div>\n                  </Grid>\n\n                  <TablePagination\n                    style={{ padding: 0, flex: 1 }}\n                    component=\"div\"\n                    count={this.state.OfficerData.length}\n                    rowsPerPageOptions={[15, 30, 45]}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                      \"aria-label\": \"Previous Page\"\n                    }}\n                    nextIconButtonProps={{\n                      \"aria-label\": \"Next Page\"\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  />\n\n                  <div style={{ overflowX: \"auto\" }}>\n                    <Table>\n                      <TableHead>\n                        <TableRow>\n                          {/* <TableCell className={classes.centerStyle} > <Checkbox checked={this.state.checkBoxSelectAll} onChange={this.handleCheckBoxChange('all')} /> </TableCell> */}\n                          <TableCell className={classes.centerStyle}>\n                            Officer Name\n                          </TableCell>\n                          <TableCell className={classes.centerStyle}>\n                            Officer Post\n                          </TableCell>\n                          {/* <TableCell className={classes.centerStyle} >Mobile</TableCell> */}\n                          <TableCell className={classes.centerStyle}>\n                            Analysis\n                          </TableCell>\n                          {/* <TableCell style={{ visibility: 'hidden' }}>Analysis</TableCell> */}\n                          <TableCell className={classes.centerStyle}>\n                            Actions\n                          </TableCell>\n                          {/* <TableCell className={classes.centerStyle} >Complaints</TableCell>\n                          <TableCell className={classes.centerStyle} >Charge</TableCell> */}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {this.state.OfficerData.slice(\n                          page * rowsPerPage,\n                          page * rowsPerPage + rowsPerPage\n                        ).map((item, index) => [\n                          <TableRow key={index}>\n                            {console.log(\"item\", item)}\n                            {/* <TableCell className={classes.centerStyle}><Checkbox checked={this.state.checkBoxes[index]} onChange={this.handleCheckBoxChange(item._id)} /> </TableCell> */}\n                            <Tooltip title={item.officer_id.phoneNo}>\n                              <TableCell className={classes.centerStyle}>\n                                {item.officer_id.name}{\" \"}\n                              </TableCell>\n                            </Tooltip>\n                            <Tooltip title={item.post_id}>\n                              <TableCell className={classes.centerStyle}>\n                                {item.office_type}{\" \"}\n                              </TableCell>\n                            </Tooltip>\n                            {/* <TableCell className={classes.centerStyle}>{item.officer_id.phoneNo} </TableCell> */}\n                            <TableCell>\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  justifyContent: \"center\",\n                                  alignItems: \"center\"\n                                }}\n                              >\n                                <Tooltip title=\"Total Complaint\">\n                                  <Avatar\n                                    className={classes.avatar}\n                                    style={{\n                                      background: \"rgba(0, 0, 255, 0.1)\",\n                                      color: \"black\"\n                                    }}\n                                  >\n                                    {item.complaint_data.total}\n                                  </Avatar>\n                                </Tooltip>\n                                <Tooltip title=\"Pending Complaint\">\n                                  <Avatar\n                                    className={classes.avatar}\n                                    style={{\n                                      background: \"rgba(155, 100, 0, 0.1)\",\n\n                                      color: \"black\"\n                                    }}\n                                  >\n                                    {item.complaint_data.pending}\n                                  </Avatar>\n                                </Tooltip>\n                                <Tooltip title=\"Emergency Complaint\">\n                                  <Avatar\n                                    className={classes.avatar}\n                                    style={{\n                                      background: \"rgba(255, 0, 0, 0.1)\",\n                                      color: \"black\"\n                                    }}\n                                  >\n                                    {item.complaint_data.emergency}\n                                  </Avatar>\n                                </Tooltip>\n                                <Tooltip title=\"Approved Complaint\">\n                                  <Avatar\n                                    className={classes.avatar}\n                                    style={{\n                                      background: \"rgba(128, 203, 196, 0.4)\",\n                                      color: \"black\"\n                                    }}\n                                  >\n                                    {item.complaint_data.approved}\n                                  </Avatar>\n                                </Tooltip>\n                                <Tooltip title=\"Completed Complaint\">\n                                  <Avatar\n                                    className={classes.avatar}\n                                    style={{\n                                      background: \"rgba(0, 255, 0, 0.1)\",\n\n                                      color: \"black\"\n                                    }}\n                                  >\n                                    {item.complaint_data.completed}\n                                  </Avatar>\n                                </Tooltip>\n                              </div>\n                            </TableCell>\n                            <TableCell className={classes.centerStyle}>\n                              {/* <Button\n                                onClick={() => {\n                                  this.handleOfficerDialogOpen(item);\n                                }}\n                                color=\"secondary\"\n                                size=\"small\"\n                                variant=\"text\"\n                              >\n                                Update\n                              </Button> */}\n                              {/* edit here */}\n                              <Tooltip title=\"Shows complaints of selected officer\">\n                                <Button\n                                  onClick={() => {\n                                    this.handleComplaintDialogOpen(item);\n                                  }}\n                                  color=\"secondary\"\n                                  size=\"small\"\n                                  variant=\"text\"\n                                >\n                                  View Complaints\n                                </Button>\n                              </Tooltip>\n                              <Tooltip title=\"Transfers Charge of selected officer\">\n                                <Button\n                                  onClick={() => {\n                                    this.handleChargeDialogOpen(item, index);\n                                  }}\n                                  color=\"secondary\"\n                                  variant=\"text\"\n                                  size=\"small\"\n                                >\n                                  Transfer Charge\n                                </Button>\n                              </Tooltip>\n                            </TableCell>\n                          </TableRow>\n\n                          // <TableRow>\n                          //         <TableCell colSpan={5} >\n                          //             <div style={{display : \"flex\",justifyContent:\"space-around\"}}>\n                          //                 <ComplaintChipCount type=\"\" data={item.total} />\n                          //                 <ComplaintChipCount type=\"Pending\" data={item.pending} />\n                          //                 <ComplaintChipCount type=\"Emergency\" data={item.emergency} />\n                          //                 <ComplaintChipCount type=\"Completed\" data={item.completed} />\n                          //             </div>\n                          //         </TableCell>\n                          // </TableRow>,\n\n                          // <TableRow style={{height:\"2px\"}}>\n                          //     <TableCell colSpan={5}></TableCell>\n                          // </TableRow>\n                        ])}\n                      </TableBody>\n\n                      {emptyRows > 0 && (\n                        <TableRow style={{ height: 49 * emptyRows }}>\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                    </Table>\n                  </div>\n                </Grid>\n              </Grid>\n              <Button\n                variant=\"extendedFab\"\n                color=\"secondary\"\n                onClick={this.sideFilterHandleOpen}\n                className={classes.sideFilterButton}\n              >\n                <FilterIcon />\n                &nbsp;Filter\n              </Button>\n            </div>\n          )}\n        </Paper>\n      </div>\n    );\n  }\n}\n\nManageOfficer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ManageOfficer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n      0.08,\n    ),\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  singleValue: {\n    fontSize: 16,\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    fontSize: 16,\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps,\n        },\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction SingleValue(props) {\n  return (\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused,\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\nclass RoadCode extends React.Component {\n  state = {\n    single: null,\n    multi: null,\n  };\n\n  handleChange = value => {\n    let newopt = value.map(item => {\n      return {\n          label: item.value,\n          value: item.value\n      }\n    })\n    this.props.setRoadCodes(newopt);\n    this.setState({\n      multi: newopt\n    })\n    // this.setState({\n    //   multi: newopt,\n    // }, () => {\n    //   \n    // });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        color: theme.palette.text.primary,\n        '& input': {\n          font: 'inherit',\n        },\n      }),\n    };\n\n    return (\n      <div className={classes.root}>\n        <NoSsr>\n          <Select\n            classes={classes}\n            styles={selectStyles}\n            textFieldProps={{\n              label: 'Road Code',\n              InputLabelProps: {\n                shrink: true,\n              },\n            }}\n            options={this.props.options}\n            components={components}\n            value={this.state.multi}\n            onChange={this.handleChange}\n            placeholder=\"Select Roads\"\n            isMulti\n          />\n        </NoSsr>\n      </div>\n    );\n  }\n}\n\nRoadCode.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(RoadCode);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Paper from '@material-ui/core/Paper';\n\nimport RoadCode from '../Components/RoadCodeAdd';\nimport GeneralDialog from '../Components/GeneralDialog';\nimport { url, getCookie, hierarchy } from \"../constants\";\n\nconst styles = theme => ({\n    wrapper: {\n        // marginTop: '-56px',\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        textAlign: 'center'\n    },\n    textWrapper: {\n        padding: '10px'\n    },\n    textField: {\n        width: '100%',\n        textAlign: 'left'\n    },\n    AddOfficerWrapper: {\n        margin: 'auto',\n        padding: '10px',\n        [theme.breakpoints.up('sm')]: {\n            width: \"50%\"\n        },\n    },\n    road_code_field: {\n        border: 'none',\n        borderBottom: '2px solid gray',\n        outline: \"none\",\n    }\n})\n\nclass AddOfficer extends Component {\n\n    state = {\n        startAnimation: false,\n        name: \"\",\n        email: \"\",\n        phoneNo: \"\",\n        password: \"\",\n        repassword: \"\",\n        role: \"\",\n        road_code: \"\",\n        sr_officer_id: \"\",\n        isDisabled: false,\n        sr_officer_list: [],\n        roads: []\n    }\n\n\n    \n    handleChange = e => {            \n        this.setState({\n            [e.target.name]: e.target.value\n        })\n\n        if(e.target.name === 'role') {\n\n            if(e.target.value === hierarchy[0]) {\n                fetch(url + \"roads/\")\n                .then(res => res.json())\n                .then(res => {   \n                    let roadList = res.data.map(data => {\n                        return {\n                            value: data.road_code,\n                            label: data.name\n                        }\n                    })\n                    \n                    this.setState({\n                        roads: roadList\n                    })\n                })\n                .catch(err => {\n                    console.log(err);\n                    this.handleDialogOpen(\"Cannot get road list\", \"Error\")\n                });\n            } else {\n                this.setState({\n                    roads: [],\n                    road_code: \"\"\n                })\n            }\n\n            if(e.target.value !== hierarchy[hierarchy.length - 1]) {\n\n                fetch(url + \"getSeniorIds/?role=\" + e.target.value)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({\n                        sr_officer_list: res.data\n                    })\n                })\n                .catch(err => {\n                    console.log(err);\n                    this.handleDialogOpen(\"Cannot get senior officer list\", \"Error\")\n                });\n\n            } else {\n                this.setState({\n                    sr_officer_list: [],\n                    sr_officer_id: \"\"\n                })\n            }\n\n        }\n\n    }\n\n    handlePasswordErrors = e => {    \n        if(this.state.password === \"\") {\n            return false\n        }\n        if(this.state.password === this.state.repassword) {\n            return false\n        }\n        return true\n    }\n\n    handleSave = e => {\n        if(\n            this.state.name === \"\" ||\n            this.state.email=== \"\" ||\n            this.state.phoneNo === \"\" ||\n            this.state.password === \"\" ||\n            this.state.repassword === \"\" ||\n            this.state.role === \"\"\n        ) {\n            this.handleDialogOpen(\"All Fields are Cumpalsory\", \"Error\");\n            return;\n        }\n\n        if(\n            this.state.role === hierarchy[0] &&\n            this.state.road_code === \"\"\n            // this.state.sr_officer_id === \"\"\n        ) {\n            this.handleDialogOpen(\"Please select road for officer\", \"Error\");\n            return;\n        }\n\n        if(\n            this.state.role !== hierarchy[hierarchy.length - 1] &&\n            this.state.sr_officer_id === \"\"\n        ) {\n            this.handleDialogOpen(\"Please select senior officer\", \"Error\");\n            return;\n        }\n\n        if(this.state.role === hierarchy[0]) {\n            this.setState({road_code :this.state.road_code.map(item => {\n                return item.value;\n            })})\n        }\n\n        fetch(url + \"signup/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'auth': 'token ' + getCookie(\"roadGPortalAuth\")\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n                name : this.state.name,\n                email : this.state.email,\n                phoneNo : this.state.phoneNo,\n                password : this.state.password,\n                role : this.state.role,\n                road_code : this.state.road_code,\n                srOfficerId : this.state.sr_officer_id\n            })\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.success){\n                this.handleDialogOpen(\"Officer added successfully!\", \"Success\")\n                this.setState( {\n                    name: \"\",\n                    email: \"\",\n                    phoneNo: \"\",\n                    password: \"\",\n                    repassword: \"\",\n                    role: \"\",\n                    road_code: \"\",\n                    sr_officer_id: \"\"\n                })\n            }else{\n                console.error(res);\n                alert(res.data);              \n            }\n        })\n        .catch(err => {                \n            this.handleDialogOpen(err.message, \"Error\")\n        });\n    }\n\n    handleDialogOpen = (dialogMsg, dialogTitle) => {        \n        this.setState({ \n            openDialog: true,\n            dialogMsg: dialogMsg,\n            dialogTitle: dialogTitle\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ openDialog: false });\n    };\n\n    componentDidMount() {\n        this.setState({\n            startAnimation: true\n        })\n    }\n\n    render() {\n        let { classes } = this.props;\n\n        return (\n          <div className={classes.wrapper}>\n            <GeneralDialog \n                openDialogState = {this.state.openDialog}\n                dialogTitle = {this.state.dialogTitle}\n                dialogMsg = {this.state.dialogMsg}  \n                handleClose={this.handleClose}\n                handleDialogOpen={this.handleDialogOpen}\n            >\n                <Button onClick={this.handleClose}>OK</Button>\n            </GeneralDialog>\n            <Paper className={classes.AddOfficerWrapper}>\n                {/* <Collapse in={this.state.startAnimation}> */}\n                <Toolbar>\n                    <Typography variant=\"headline\" style={{textAlign: 'center', width: '100%'}}>Add New Officer</Typography>\n                </Toolbar>\n                <Grid container>\n                    <Grid item xs={12} className={classes.textWrapper}>\n                        <TextField\n                            id=\"name\"\n                            label=\"Name\"\n                            name=\"name\"\n                            className={classes.textField}\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6} className={classes.textWrapper}>\n                        <TextField\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            className={classes.textField}\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6} className={classes.textWrapper}>\n                        <TextField\n                            id=\"phoneNo\"\n                            label=\"Phone Number\"\n                            name=\"phoneNo\"\n                            className={classes.textField}\n                            value={this.state.phoneNo}\n                            onChange={this.handleChange}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6} className={classes.textWrapper}>\n                        <TextField\n                            id=\"password\"\n                            label=\"Password\"\n                            name=\"password\"\n                            className={classes.textField}\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                            error={this.handlePasswordErrors()}\n                            helperText={this.state.password.length > 6 && this.state.password.length < 12 ? \"\" : \"Password length must be in 6 to 12\"}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6} className={classes.textWrapper}>\n                        <TextField\n                            id=\"repassword\"\n                            label=\"Confirm Password\"\n                            name=\"repassword\"\n                            className={classes.textField}\n                            value={this.state.repassword}\n                            onChange={this.handleChange}\n                            error={this.handlePasswordErrors()}\n                            helperText={this.state.password !== this.state.repassword ? \"Password not matched\" : \"\"}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} className={classes.textWrapper}>\n                        <FormControl className={classes.textField}>\n                            <InputLabel htmlFor=\"role\">Role</InputLabel>\n                            <Select\n                                id=\"role\"\n                                value={this.state.role}\n                                onChange={this.handleChange}\n                                inputProps={{\n                                    name: 'role',\n                                    id: 'role',\n                                }} >\n                                {\n                                    hierarchy.map((value, index) => (\n                                        <MenuItem value={value} key={index}>{value}</MenuItem>\n                                    ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    {\n                        this.state.role === hierarchy[0]\n                        ?(<Grid item xs={12} className={classes.textWrapper}>\n                            <FormControl className={classes.textField}>\n                                <RoadCode \n                                    options={this.state.roads}\n                                    setRoadCodes={opt => {\n                                        this.setState({\n                                            road_code: opt\n                                        })                                        \n                                    }} \n                                ></RoadCode>\n                            </FormControl>\n                        </Grid>)\n                        :null\n                    }\n                    {\n                        this.state.role && this.state.role !== hierarchy[hierarchy.length - 1]\n                        ?(<Grid item xs={12} className={classes.textWrapper}>\n                            <FormControl className={classes.textField}>\n                                <InputLabel htmlFor=\"sr_officer_id\">Senior Officer</InputLabel>\n                                <Select\n                                    value={this.state.sr_officer_id}\n                                    onChange={this.handleChange}\n                                    inputProps={{\n                                        name: 'sr_officer_id',\n                                        id: 'sr_officer_id',\n                                    }} >\n                                    {\n                                        this.state.sr_officer_list.map((value, index) => (\n                                            <MenuItem value={value._id} key={index}>{value.name}</MenuItem>\n                                        ))\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Grid>)\n                        :null\n                    }\n                </Grid>\n                <br />\n                <Grid container>\n                    <Grid item xs>\n                        <Button color=\"primary\" disabled={this.state.isDisabled} onClick={this.handleSave}>Save</Button>&nbsp;\n                        <Button color=\"secondary\" onClick={ () => {\n                            this.setState( {\n                                name: \"\",\n                                email: \"\",\n                                phoneNo: \"\",\n                                password: \"\",\n                                repassword: \"\",\n                                role: \"\",\n                                road_code: \"\",\n                                sr_officer_id: \"\"\n                            })\n                        } }>Reset</Button>\n                    </Grid>\n                </Grid>\n                {/* </Collapse> */}\n            </Paper>\n          </div>  \n        );\n    }\n}\n\nAddOfficer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(AddOfficer);\n","import React, { Component } from 'react';\n// import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nimport GeneralDialog from '../Components/GeneralDialog';\nimport { url, setCookie, getCookie } from \"../constants\";\nimport { tr } from 'date-fns/esm/locale';\n\n\n\nconst DialogTitle = withStyles(theme => ({\n    root: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        margin: 0,\n        padding: theme.spacing.unit * 2,\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing.unit,\n        top: theme.spacing.unit,\n        color: theme.palette.grey[500],\n    },\n}))(props => {\n    const { children, classes, onClose } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles(theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing.unit * 2,\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n    root: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        margin: 0,\n        padding: theme.spacing.unit,\n    },\n}))(MuiDialogActions);\n\n\n\nconst styles = theme => ({\n    wrapper: {\n        // marginTop: '-46px',\n        width: '100vw',\n        height: '100vh',\n        display: 'flex'\n    },\n    textWrapper: {\n        padding: '10px'\n    },\n    textField: {\n        width: '100%',\n    },\n    ProfileWrapper: {\n        margin:'auto',\n        textAlign: 'center',\n        padding: '20px',\n        // background: 'white',\n        // borderRadius: '2px',\n        [theme.breakpoints.up('sm')]: {\n            width: \"40%\"\n        },\n    }\n})\n\n\nclass Profile extends Component {\n\n    state = {\n        startAnimation: false,\n        openUpdateDialog: true,\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        phoneNo: \"\",\n        password: \"\",\n        newPassword: \"\",\n        confirmNewPassword: \"\",\n        validPhoneNo: true,\n        changed: false,\n        openDialog : false\n    }\n\n    handleChange = e => {\n        this.setState({\n            changed: true,\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handlePasswordErrors = e => {    \n        if(this.state.newPassword === \"\") {\n            return false\n        }\n        if(this.state.newPassword === this.state.confirmNewPassword) {\n            return false\n        }\n        return true\n    }\n\n    handleSave = () => {\n\n        this.setState({\n            changed: false\n        })\n\n        //phone No error\n        if(!this.state.validPhoneNo) {\n            this.handleDialogOpen(\"Please check your phone number\", \"Error\");\n            return;\n        }\n\n        if(this.handlePasswordErrors()) {\n            this.handleDialogOpen(\"Please check your password\", \"Error\");\n            return;\n        }\n        fetch(url + \"updateProfile/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'auth': 'token ' + getCookie(\"roadGPortalAuth\")\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n                name: this.state.name,\n                email: this.state.email,\n                phoneNo: this.state.phoneNo,\n                password: this.state.password,\n                newPassword: this.state.newPassword,\n            })\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log(res);            \n            if(res.success){\n                this.handleDialogOpen(res.data, \"Success\");\n                this.componentWillMount();\n            }else{\n                this.handleDialogOpen(res.data, \"Error\");\n                this.setState({\n                    changed: true\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err);                \n            this.handleDialogOpen(err+\"\", \"Error\")\n            this.setState({\n                changed: true\n            })\n        });\n    }\n\n    handleDialogOpen = (dialogMsg, dialogTitle) => {        \n        this.setState({ \n            openDialog: true,\n            dialogMsg: dialogMsg,\n            dialogTitle: dialogTitle\n        });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ openDialog: false });\n    };\n\n    componentWillMount() {\n        fetch(url + \"getUserInfo/\", {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'auth': 'token ' + getCookie(\"roadGPortalAuth\")\n                },\n                method: \"GET\",\n            }\n        )\n        .then(res => res.json())\n        .then(res => {\n            if(res.success){\n                // this.setState({\n                //     data: res.data\n                // })\n                setCookie(\"isUpdated\",\"false\",\"1\");\n                this.setState({...res.data});\n            }else{\n                console.error(res);               \n            }\n        })\n        .catch(err => { \n            console.log(err);\n                           \n            // this.handleDialogOpen(err.message, \"Error\")\n        });\n    }\n\n    componentDidMount() {\n        this.setState({\n            startAnimation: true\n        })\n    }\n\n    \n    handleClose = () => {\n        this.setState({ openUpdateDialog: false });\n    };\n\n    render() {\n        let { classes } = this.props;\n\n        return (\n          <div className={classes.wrapper}>\n\n            <GeneralDialog\n                openDialogState = {this.state.openDialog}\n                dialogTitle = {this.state.dialogTitle}\n                dialogMsg = {this.state.dialogMsg}  \n                handleClose={this.handleDialogClose}\n                handleDialogOpen={this.handleDialogOpen}\n            >\n                <Button onClick={this.handleDialogClose}>Ok</Button>\n            </GeneralDialog>\n            <Paper className={classes.ProfileWrapper}>\n                <Toolbar>\n                    <Typography variant=\"headline\" style={{textAlign: 'center', width: '100%'}}>Update Profile Here</Typography>\n                </Toolbar>\n                <Grid container>\n                    <Grid item xs={12} className={classes.textWrapper}>\n                        <TextField\n                            id=\"name\"\n                            label=\"Name\"\n                            className={classes.textField}\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6} className={classes.textWrapper}>\n                        <TextField\n                            id=\"email\"\n                            label=\"Email\"\n                            className={classes.textField}\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6} className={classes.textWrapper}>\n                        <TextField\n                            id=\"phoneNo\"\n                            label=\"Phone Number\"\n                            type=\"number\"\n                            className={classes.textField}\n                            value={this.state.phoneNo}\n                            onChange={(e) => { \n                                this.handleChange(e);\n                                if(e.target.value.length != 10) {\n                                    this.setState({\n                                        validPhoneNo: false\n                                    })\n                                } else {\n                                    this.setState({\n                                        validPhoneNo: true\n                                    })\n                                }\n                            }}\n                            helperText={ !this.state.validPhoneNo ? \"Please enter valid phone no\" : \"\"}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} className={classes.textWrapper}>\n                        <TextField\n                            id=\"password\"\n                            label=\"Old Password\"\n                            className={classes.textField}\n                            value={this.state.password}\n                            type=\"password\"\n                            onChange={this.handleChange}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6} className={classes.textWrapper}>\n                        <TextField\n                            id=\"newPassword\"\n                            label=\"New Password\"\n                            className={classes.textField}\n                            value={this.state.newPassword}\n                            type=\"password\"\n                            onChange={this.handleChange}\n                            error={this.handlePasswordErrors()}\n                            helperText={this.state.newPassword.length > 6 && this.state.newPassword.length < 12 ? \"\" : \"Password length must be in 6 to 12\"}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6} className={classes.textWrapper}>\n                        <TextField\n                            id=\"confirmNewPassword\"\n                            label=\"Confirm New Password\"\n                            className={classes.textField}\n                            value={this.state.confirmNewPassword}\n                            type=\"password\"\n                            onChange={this.handleChange}\n                            error={this.handlePasswordErrors()}\n                            helperText={this.state.newPassword !== this.state.confirmNewPassword ? \"Password not matched\" : \"\"}\n                            margin=\"none\"\n                        />\n                    </Grid>\n                </Grid>\n                <br />\n                <Grid container>\n                    <Grid item xs>\n                        <Button color=\"primary\" disabled={!this.state.changed} onClick={this.handleSave}>Save</Button>&nbsp;\n                        <Button color=\"secondary\" onClick={ () => {\n                            setCookie(\"roadGPortalAuth\", {}, -1);\n                            setCookie(\"firstTimeLogin\", false, -1);\n                            window.location.reload();\n                        } }>Logout</Button>\n                    </Grid>\n                    {/* <Grid item xs>\n                        \n                    </Grid> */}\n                </Grid>\n            </Paper>\n          </div>  \n        );\n    }\n}\n\nProfile.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Profile);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CacheRoute, { CacheSwitch } from 'react-router-cache-route';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TableChart from '@material-ui/icons/TableChart';\nimport PieChart from '@material-ui/icons/PieChart';\nimport Place from '@material-ui/icons/Place';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport NavBar from '../Components/NavBar';\nimport DashboardRoot from './DashboardRoot';\nimport ComplaintContainer from './ComplaintContainer';\nimport ManageOfficer from './ManageOfficer';\nimport AddOfficer from './AddOfficer';\nimport Profile from '../Components/Profile';\nimport { getCookie, hierarchy } from \"../constants\";\n\nimport bgImage from '../res/ROHAN.svg';\n// import AddOfficer from './AddOfficer';\n\nconst styles = theme => ({\n    wrapper: {\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'bottom',\n        [theme.breakpoints.down('sm')]: {\n            backgroundImage: `url(${bgImage})`,\n            backgroundPosition: '-250px 20px'\n            // background: 'white'\n        },\n    },\n    backgr: {\n        position: 'absolute',\n        height: '100vh',\n        width: '100vw',\n        top: '0px',\n        left: '0px',\n        right: '0px',\n        zIndex: '-9',\n    },\n    bgImage: {\n        position: 'absolute',\n        height: '100vh',\n        width: '100vw',\n        top: '0px',\n        left: '0px',\n        // right: '0px',\n        // zIndex: '-9',\n    }\n})\n\n\nclass Dashboard extends Component {\n\n    state = {\n        navBarItems: [\n            {\n                name: 'My Complaints',\n                path: '/Dashboard/Complaints/Table',\n                icon: TableChart\n            },\n            {\n                name: 'Maps',\n                path: '/Dashboard/Complaints/Maps',\n                icon: Place\n            },\n            ... getCookie('roadGPortalRole') !== hierarchy[0] ? [{\n                name: 'All Complaints & Manage Officer',\n                path: '/Dashboard/ManageOfficer',\n                icon: PieChart\n            }] : [],\n            // ... getCookie('roadGPortalRole') === hierarchy[hierarchy.length - 1] ? [{\n            //     name: 'Add Officer',\n            //     path: '/Dashboard/AddOfficer',\n            //     icon: PieChart\n            // }] : [],\n            {\n                name: 'Profile',\n                path: '/Dashboard/Profile',\n                icon: AccountCircle\n            },\n        ]\n    }\n\n    render() {\n        console.log(this.props);\n        \n        let { classes } = this.props;\n\n        return (\n          <div className={classes.wrapper}>\n            {/* <img src={bgImage} className={classes.bgImage} /> */}\n            {/* <div className={classes.backgr}></div> */}\n            {/* Insert Navbar here */}\n            <NavBar navBarItems={this.state.navBarItems} />\n            <CacheSwitch>\n                <CacheRoute exact path=\"/Dashboard/\" render={() => (<DashboardRoot />)} />\n                <CacheRoute exact path=\"/Dashboard/Complaints/*\" render={(locationProps) => (<ComplaintContainer {...locationProps.location.state}/>)} />\n                <CacheRoute exact path=\"/Dashboard/ManageOfficer\" render={() => (<ManageOfficer />)} />\n                <CacheRoute exact path=\"/Dashboard/AddOfficer\" render={() => (<AddOfficer />)} />\n                <CacheRoute exact path=\"/Dashboard/Profile\" render={() => (<Profile />)} />\n                <CacheRoute path=\"/Dashboard/*\">\n                    <Redirect to=\"/Dashboard/\" />\n                </CacheRoute>\n            </CacheSwitch>\n          </div>  \n        );\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);","import React, { Component } from 'react';\n// import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport AllInbox from '@material-ui/icons/AllInbox';\nimport AddAlert from '@material-ui/icons/AddAlert';\nimport Timer from '@material-ui/icons/Timer';\nimport Check from '@material-ui/icons/Check';\n\nimport CardBox from '../Components/DashboardCard';\n    \nconst styles = theme => ({\n    wrapper: {\n        // marginTop: '-56px',\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        [theme.breakpoints.down('sm')]: {\n            marginTop: '-66px',\n            // display: 'none',\n        },\n    }\n})\n\n\nclass AdminRoot extends Component {\n\n    state = {\n        startAnimation: false,\n        cardData: [\n            {\n                name: \"Manage\",\n                //value: 10,\n                icon: AllInbox,\n                color: \"primary\"\n            },\n            {\n                name: \"Profile\",\n                //value: 10,\n                icon: AddAlert,\n                color: \"alert\"\n            }\n            // {\n            //     name: \"Pending\",\n            //     value: 10,\n            //     icon: Timer,\n            //     color: \"alert\"\n            // },\n            // {\n            //     name: \"Completed\",\n            //     value: 10,\n            //     icon: Check,\n            //     color: \"success\"\n            // }\n        ]\n    }\n\n    componentDidMount() {\n        this.setState({\n            startAnimation: true\n        })\n    }\n\n    render() {\n        let { classes } = this.props;\n\n        return (\n          <div className={classes.wrapper} style={{textAlign: 'center'}}>\n            <div style={{margin: 'auto'}}>\n                <Grid container style={{margin:'auto'}}>\n                    <Grid item xs={12} md>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[0].icon} CardName={this.state.cardData[0].name} CardValue={this.state.cardData[0].value} CardColor={this.state.cardData[0].color} fromAdmin={true} link={\"/Admin/Manage\"}/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[1].icon} CardName={this.state.cardData[1].name} CardValue={this.state.cardData[1].value} CardColor={this.state.cardData[1].color} fromAdmin={true} link={'/Admin/Profile'}/>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    {/* <Grid item xs={12} md>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[2].icon} CardName={this.state.cardData[2].name} CardValue={this.state.cardData[2].value} CardColor={this.state.cardData[2].color} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[3].icon} CardName={this.state.cardData[3].name} CardValue={this.state.cardData[3].value} CardColor={this.state.cardData[3].color} />\n                            </Grid>\n                        </Grid>\n                    </Grid> */}\n                    \n                    {\n                        // this.state.cardData.map((item, index) => (\n                        //     <Grid item xs={6} md  />\n                        // ))\n                    }\n                </Grid>\n            </div>\n          </div>\n        );\n    }\n}\n\nAdminRoot.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AdminRoot);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Select from '@material-ui/core/Select';\n// import MenuItem from '@material-ui/core/MenuItem';\n\nimport { url } from \"../constants\";\n\nconst styles = theme => ({\n\n})\n\nclass Grievances extends Component {\n\n    state = {\n        _id: '',\n        open: false,\n        duration: 0,\n        update: false,\n        page: 0,\n        rowsPerPage: 5,\n        lists: []\n    };\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    //----------------------------------------------\n    //handling CRUD\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleDialougeOpen = () => {\n        this.setState({ open: true });\n    }\n\n    //read\n    read() {\n        fetch(url + \"manage/grienvances/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"GET\",\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.success){\n                this.setState({\n                    lists: res.data\n                })\n            }else {\n                console.log(\"Err\", res.data);\n                alert(res.data);                \n            }\n        })\n        .catch(err => {\n            console.log(\"new errre\",err);\n        });\n    }\n\n    componentWillMount() {\n        this.read()\n    }\n\n    //create\n    handleAdd = (event) => {\n        this.setState({\n            update: false,\n            name: \"\",\n            duration: 0,\n        })\n        this.handleDialougeOpen()\n    };\n\n    handlePush = () => {\n\n        if(!this.state.update) {\n            fetch(url + \"manage/grienvances/\", {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"POST\",\n                body: JSON.stringify({name: this.state.name, duration: String(this.state.duration)})\n            })\n            .then(res => res.json())\n            .then(res => {\n                if(res.success){\n                    this.setState({\n                        lists: [...this.state.lists, {\n                            _id: Math.floor(Math.random() * 1000),\n                            name: this.state.name,\n                            duration: this.state.duration\n                        }]\n                    })\n                    this.handleClose();                \n                }else {\n                    console.log(\"Err\", res.data);\n                    alert(res.data);                \n                }\n            })\n            .catch(err => {\n                console.log(\"new errre\",err);\n            });\n        } else {\n            fetch(url + \"manage/grienvances/\", {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"PUT\",\n                body: JSON.stringify({_id: this.state._id, name: this.state.name, duration: String(this.state.duration)})\n            })\n            .then(res => res.json())\n            .then(res => {\n                if(res.success){\n                    // this.setState({\n                    //     lists: [...this.state.lists, {\n                    //         _id: Math.floor(Math.random() * 1000),\n                    //         name: this.state.name,\n                    //         duration: this.state.duration\n                    //     }]\n                    // })\n                    this.read();\n                    this.handleClose();                \n                }else {\n                    console.log(\"Err\", res.data);\n                    alert(res.data);                \n                }\n            })\n            .catch(err => {\n                console.log(\"new errre\",err);\n            });\n        }\n\n    }\n\n    handleUpdate = (item) => {\n        this.setState({\n            update: true,\n            _id: item._id,\n            name: item.name,\n            duration: item.duration\n        })\n        this.handleDialougeOpen()\n    };\n\n    handleDelete = (item) => {\n\n        fetch(url + \"manage/grienvances/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"DELETE\",\n            body: JSON.stringify({_id: item._id})\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.success){\n                this.setState({\n                    lists: this.state.lists.filter(listItem => {\n                        return listItem._id != item._id\n                    })\n                })\n                // this.handleClose();                \n            }else {\n                console.log(\"Err\", res.data);\n                alert(res.data);                \n            }\n        })\n        .catch(err => {\n            console.log(\"new errre\",err);\n        });\n    };\n    //----------------------------------------------\n\n    //----------------------------------------------\n    //handling table pagination\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n      };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    //----------------------------------------------\n\n    render() {\n        const { rowsPerPage, page } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, 10 - page * rowsPerPage);\n        let { classes } = this.props; \n\n        return (\n            <div className={classes.wrapper}>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">{this.state.update ? \"Update\" : \"Add\" } Girevance Type</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Grievance Name\"\n                            type=\"text\"\n                            value={this.state.name}\n                            onChange={(e) => {\n                                this.setState({\n                                    name: e.target.value\n                                })\n                            }}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"duration\"\n                            label=\"Duration(in days)\"\n                            value={this.state.duration}\n                            onChange={(e) => {\n                                this.setState({\n                                    duration: e.target.value\n                                })\n                            }}\n                            type=\"number\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                        </Button>\n                        <Button onClick={this.handlePush} color=\"primary\">\n                        {!this.state.update ? \"Add\" : \"Update\"}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <div style={{overflowX: 'auto',}}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>index</TableCell>\n                                <TableCell>Girevance Name</TableCell>\n                                <TableCell>Estimated Duration(in days)</TableCell>\n                                <TableCell>\n                                    <Button \n                                        variant=\"raised\" \n                                        size=\"small\" \n                                        color=\"secondary\"\n                                        onClick={\n                                            () => {\n                                                this.handleAdd();\n                                            }\n                                        }\n                                    >\n                                        Add\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.state.lists\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((item, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell component=\"th\" >{page * rowsPerPage + index+1}</TableCell>\n                                        <TableCell>{item.name}</TableCell>\n                                        <TableCell>{\n                                            item.duration\n                                        }</TableCell>\n                                        <TableCell>\n                                            <Button \n                                                onClick={\n                                                    () => {\n                                                        this.handleUpdate(item);\n                                                    }\n                                                }\n                                                color=\"primary\"\n                                                variant=\"text\"\n                                                size=\"small\"\n                                            >update</Button>\n                                            <Button \n                                                onClick={\n                                                    () => {\n                                                        this.handleDelete(item);\n                                                    }\n                                                }\n                                                color=\"secondary\"\n                                                variant=\"text\"\n                                                size=\"small\"\n                                            >delete</Button>\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            }\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <Toolbar>\n                    <TablePagination\n                        style={{'padding' : 0,'flex' : 1}}\n                        component=\"div\"\n                        count={this.state.lists.length}\n                        rowsPerPageOptions={[5]}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                    />\n                </Toolbar>\n            </div>  \n        );\n    }\n}\n\nGrievances.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Grievances); ","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Select from '@material-ui/core/Select';\n// import MenuItem from '@material-ui/core/MenuItem';\n\nimport { url } from \"../constants\";\n\nconst styles = theme => ({\n\n})\n\nclass RejectionReasons extends Component {\n\n    state = {\n        _id: '',\n        open: false,\n        update: false,\n        page: 0,\n        rowsPerPage: 5,\n        lists: []\n    };\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    //----------------------------------------------\n    //handling CRUD\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleDialougeOpen = () => {\n        this.setState({ open: true });\n    }\n\n    //read\n    read() {\n        fetch(url + \"manage/rejections/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"GET\",\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.success){\n                this.setState({\n                    lists: res.data\n                })\n            }else {\n                console.log(\"Err\", res.data);\n                alert(res.data);                \n            }\n        })\n        .catch(err => {\n            console.log(\"new errre\",err);\n        });\n    }\n\n    componentWillMount() {\n        this.read()\n    }\n\n    handleAdd = (event) => {\n        this.setState({\n            update: false,\n            name: \"\",\n        })\n        this.handleDialougeOpen()\n    };\n\n    handlePush = () => {\n        if(!this.state.update) {\n            fetch(url + \"manage/rejections/\", {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"POST\",\n                body: JSON.stringify({name: this.state.name})\n            })\n            .then(res => res.json())\n            .then(res => {\n                if(res.success){\n                    this.read();\n                    this.handleClose();                \n                }else {\n                    console.log(res);\n\n                    console.log(\"Err\", res.data);\n                    alert(res.data);                \n                }\n            })\n            .catch(err => {\n                console.log(\"new errre\",err);\n            });\n        } else {\n            fetch(url + \"manage/rejections/\", {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"PUT\",\n                body: JSON.stringify({_id: this.state._id, name: this.state.name})\n            })\n            .then(res => res.json())\n            .then(res => {\n                if(res.success){\n                    this.read();\n                    this.handleClose();                \n                }else {\n                    console.log(\"Err\", res.data);\n                    alert(res.data);                \n                }\n            })\n            .catch(err => {\n                console.log(\"new errre\",err);\n            });\n        }\n    }\n\n    handleUpdate = (item) => {\n\n        console.log(item, Object.keys(item));\n        \n        this.setState({\n            update: true,\n            _id: item._id,\n            name: item.name,\n        })\n        this.handleDialougeOpen()\n    };\n\n    handleDelete = (item) => {\n        fetch(url + \"manage/rejections/\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"DELETE\",\n            body: JSON.stringify({_id: item._id})\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.success){\n                this.setState({\n                    lists: this.state.lists.filter(listItem => {\n                        return listItem._id != item._id\n                    })\n                })\n                // this.handleClose();                \n            }else {\n                console.log(\"Err\", res.data);\n                alert(res.data);                \n            }\n        })\n        .catch(err => {\n            console.log(\"new errre\",err);\n        });\n    };\n    //----------------------------------------------\n\n    //----------------------------------------------\n    //handling table pagination\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n      };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    //----------------------------------------------\n\n    render() {\n        const { rowsPerPage, page } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, 10 - page * rowsPerPage);\n        let { classes } = this.props; \n\n        return (\n            <div className={classes.wrapper}>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">{this.state.update ? \"Update\" : \"Add\" } Reason</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Rejection Reason\"\n                            type=\"text\"\n                            value={this.state.name}\n                            onChange={(e) => {\n                                this.setState({\n                                    name: e.target.value\n                                })\n                            }}\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                        </Button>\n                        <Button onClick={this.handlePush} color=\"primary\">\n                        {this.state.update ? \"Update\" : \"Add\"}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <div style={{overflowX: 'auto',}}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>index</TableCell>\n                                <TableCell>Rejection Reason</TableCell>\n                                <TableCell>\n                                    <Button \n                                        variant=\"raised\" \n                                        size=\"small\" \n                                        color=\"secondary\"\n                                        onClick={\n                                            () => {\n                                                this.handleAdd();\n                                            }\n                                        }\n                                    >\n                                        Add\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.state.lists\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((item, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell component=\"th\" >{page * rowsPerPage + index+1}</TableCell>\n                                        <TableCell>{item.name}</TableCell>\n                                        <TableCell>\n                                            <Button \n                                                onClick={\n                                                    () => {\n                                                        this.handleUpdate(item);\n                                                    }\n                                                }\n                                                color=\"primary\"\n                                                variant=\"text\"\n                                                size=\"small\"\n                                            >update</Button>\n                                            <Button \n                                                onClick={\n                                                    () => {\n                                                        this.handleDelete(item);\n                                                    }\n                                                }\n                                                color=\"secondary\"\n                                                variant=\"text\"\n                                                size=\"small\"\n                                            >delete</Button>\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            }\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <Toolbar>\n                    <TablePagination\n                        style={{'padding' : 0,'flex' : 1}}\n                        component=\"div\"\n                        count={this.state.lists.length}\n                        rowsPerPageOptions={[5]}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                    />\n                </Toolbar>\n            </div>  \n        );\n    }\n}\n\nRejectionReasons.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(RejectionReasons);","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport {url} from 'constants.js';\n\nclass CRUD extends Component {\n\n    static propTypes = {\n        tableName: PropTypes.string.isRequired,\n        crudUrl: PropTypes.string.isRequired,\n        columns: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string, \n                                                    api : PropTypes.string, \n                                                    type: PropTypes.oneOf(['text', 'number'])  }).isRequired),\n    };\n\n    state = {\n        updateDialogOpen: false,\n        update: false,  // Used for difference between Update and Add dialog ui/api calls\n        currentPage: 0,\n        rowsPerPage: 5,\n        lists: []\n    };\n\n    //Crud functions\n    handleAdd = (event) => {\n        let states ={}\n        this.props.columns.map(c => states[c.api] = \"\")\n        this.setState({\n            update: false,\n            updateDialogOpen: true,\n            ...states\n        })\n    };\n\n    handleUpdate = (item) => {\n\n        console.log(item, Object.keys(item));\n\n        this.setState({\n            update: true,\n            updateDialogOpen: true,\n            ...item\n        })\n    };\n\n\n    handleFetchAll() {\n\n        fetch(url + this.props.crudUrl, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"GET\",\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.success){\n                this.setState({\n                    lists: res.data\n                })\n            }else {\n                console.log(\"Err\", res.data);\n                alert(res.data);                \n            }\n        })\n        .catch(err => {\n            console.log(\"new errre\",err);\n        });\n    }\n\n    \n    handlePush = async () => {\n    \n    try{\n        \n        let res;\n\n        if(!this.state.update) {\n            res = await fetch(url + this.props.crudUrl, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"POST\",\n                body: JSON.stringify(this.state)\n            })\n            \n        } else {\n            res = await fetch(url + this.props.crudUrl, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"PUT\",\n                body: JSON.stringify(this.state)\n            })\n        }\n\n        res = await res.json()\n            \n        if(res.success){\n            this.handleUpdateDialogClose();\n            this.handleFetchAll();\n                        \n        }else {\n            console.log(\"Err\", res);\n            alert(res.data);                \n        }\n    }catch(e){ console.log(e) };\n    \n    }\n\n    \n    handleDelete = (item) => {\n\n        fetch(url + this.props.crudUrl, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"DELETE\",\n            body: JSON.stringify({_id: item._id})\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(res.success){\n                this.setState({\n                    lists: this.state.lists.filter(listItem => {\n                        return listItem._id != item._id\n                    })\n                })\n                // this.handleClose();                \n            }else {\n                console.log(\"Err\", res.data);\n                alert(res.data);                \n            }\n        })\n        .catch(err => {\n            console.log(\"new errre\",err);\n        });\n    };\n\n\n\n    componentWillMount() {\n        this.handleFetchAll()\n    }\n\n\n    //Dialog Functions\n    handleUpdateDialogClose = () => {\n        this.setState({ updateDialogOpen: false });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ updateDialogOpen: true });\n    }\n\n    //Table functions\n    handleChangePage = (event, currentPage) => {\n        this.setState({ currentPage });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    render() {\n\n\n        const { rowsPerPage, currentPage } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, 10 - currentPage * rowsPerPage);\n\n        return (\n\n            <div>\n                <Dialog\n                    open={this.state.updateDialogOpen}\n                    onClose={this.handleUpdateDialogClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">{this.state.update ? \"Update\" : \"Add\"} {this.props.tableName}</DialogTitle>\n                    <DialogContent>\n\n                        {this.props.columns.map(c => (\n                            <TextField\n                                margin=\"dense\"\n                                id=\"name\"\n                                label={c.name}\n                                disabled = {(this.state.update && c.disable) | false}\n                                type={c.type}\n                                value={this.state[c.api] ? this.state[c.api] : \"\"}\n                                onChange={(e) => {\n                                    this.setState({\n                                        [c.api] : e.target.value\n                                    })\n                                }}\n                                \n                                fullWidth\n                            />\n                        ))}\n                        \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleUpdateDialogClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handlePush} color=\"primary\">\n                            {this.state.update ? \"Update\" : \"Add\"}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <div style={{ overflowX: 'auto', }}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>index</TableCell>\n                                {this.props.columns.map(c => (\n                                    <TableCell>{c.name}</TableCell>\n                                ))}\n                                <TableCell>\n                                    <Button\n                                        variant=\"raised\"\n                                        size=\"small\"\n                                        color=\"secondary\"\n                                        onClick={\n                                            () => {\n                                                this.handleAdd();\n                                            }\n                                        }\n                                    >\n                                        Add\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.state.lists\n                                    .slice(currentPage * rowsPerPage, currentPage * rowsPerPage + rowsPerPage)\n                                    .map((item, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell component=\"th\" >{currentPage * rowsPerPage + index + 1}</TableCell>\n\n                                            {this.props.columns.map(c => (\n                                                <TableCell>{item[c.api]}</TableCell>\n                                            ))}         \n                                    \n                                            <TableCell>\n                                                <Button\n                                                    onClick={\n                                                        () => {\n                                                            this.handleUpdate(item);\n                                                        }\n                                                    }\n                                                    color=\"primary\"\n                                                    variant=\"text\"\n                                                    size=\"small\"\n                                                >update</Button>\n                                                <Button\n                                                    onClick={\n                                                        () => {\n                                                            this.handleDelete(item);\n                                                        }\n                                                    }\n                                                    color=\"secondary\"\n                                                    variant=\"text\"\n                                                    size=\"small\"\n                                                >delete</Button>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                            }\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <Toolbar>\n                    <TablePagination\n                        style={{ 'padding': 0, 'flex': 1 }}\n                        component=\"div\"\n                        count={this.state.lists.length}\n                        rowsPerPageOptions={[5]}\n                        rowsPerPage={rowsPerPage}\n                        page={currentPage}\n                        backIconButtonProps={{\n                            'aria-label': 'Previous Page',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': 'Next Page',\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                    />\n                </Toolbar>\n            </div>\n        )\n    }\n}\n\n\nexport default CRUD;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n// import Grid from '@material-ui/core/Grid';\n\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport Tabbed from '@material-ui/core/Tabs';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\n// import TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Grievances from \"../Components/grivancesTable\";\nimport RejectionReasons from \"../Components/rejectionReasons\";\nimport Crud from \"Components/crud\";\n// import Card from '@material-ui/core/Card';\n\nconst styles = theme => ({\n    wrapper: {\n        // marginTop: '-56px',\n        width: '100vw',\n        minHeight: '100vh',\n        display: 'flex',\n    },\n    ManageWrapper: {\n        margin: '100px auto auto auto',\n        textAlign: 'center',\n        // padding: '20px',\n        // borderRadius: '2px',\n        [theme.breakpoints.up('sm')]: {\n            width: \"70%\"\n        },\n    }\n})\n\nclass Manage extends Component {\n\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        let { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className={classes.wrapper}>\n                <Paper className={classes.ManageWrapper}>\n                    <AppBar position=\"static\" textColor=\"primary\" style={{ background: \"white\", color: 'black', }}>\n                        <Tabbed value={value} onChange={this.handleChange} centered>\n                            <Tab label=\"Manage Grievances\" />\n                            <Tab label=\"Manage Rejection Reasons\" />\n                            <Tab label=\"Manage Roads\" />\n                        </Tabbed>\n                    </AppBar>\n\n                    {value === 0 && <Crud   tableName={\"Grievances\"}\n                                            crudUrl={'manage/grienvances/'}\n                                            columns={[{ name: \"Name\" , api: \"name\"}, \n                                                      { name: \"Duration\", api:\"duration\" }, \n                                                    ]} />}\n\n                    {value === 1 && <Crud   tableName={\"Road\"}\n                                            crudUrl={'manage/rejections/'}\n                                            columns={[{ name: \"Rejection Reason\" , api: \"name\"}]} />}\n\n                    {value === 2 && <Crud   tableName={\"Road\"}\n                                            crudUrl={'manage/roads/'}\n                                            columns={[ { name: \"Road Name\",api: \"name\" }, \n                                                      { name: \"Road Code\",api: \"road_code\",disable : true}, \n                                                      { name: \"Road Division\",api: \"division\" }, \n                                                      { name: \"Road District\",api: \"district\" }]} />}\n                </Paper>\n            </div>\n        );\n    }\n}\n\nManage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Manage);","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TableChart from '@material-ui/icons/TableChart';\nimport AddBox from '@material-ui/icons/AddBox';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport NavBar from '../Components/NavBar';\nimport AdminRoot from './AdminRoot';\nimport Manage from \"./Manage\";\nimport AddOfficer from \"../Officer/AddOfficer\";\nimport Profile from '../Components/Profile';\n\nimport bgImage from '../res/ROHAN.svg';\n\nconst styles = theme => ({\n    wrapper: {\n        // marginTop: '56px',\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'top'\n    }\n})\n\nconst navBarItems = [\n    {\n        name: 'Manage',\n        path: '/Admin/Manage',\n        icon: TableChart\n    },\n    // {\n    //     name: 'Add Officer',\n    //     path: '/Admin/AddOfficer',\n    //     icon: AddBox\n    // },\n    {\n        name: 'Profile',\n        path: '/Admin/Profile',\n        icon: AccountCircle\n    }\n];\n\nclass AdminDashboard extends Component {\n\n    //state of login component\n    state = {\n        loginTab: true\n    }\n\n    toLoginTab = () => {\n        this.setState( {\n            loginTab: true\n        });\n    }\n\n    toForgotPassTab = () => {\n        this.setState( {\n            loginTab: false\n        });\n    }\n\n    render() {\n        let { classes } = this.props;\n\n        return (\n          <div className={classes.wrapper}>\n            <NavBar navBarItems={navBarItems} />\n            <Switch>\n                <Route exact path=\"/Admin/\" render={() => (<Manage />)} />\n                <Route exact path=\"/Admin/Manage/\" render={() => (<Manage />)} />\n                <Route exact path=\"/Admin/AddOfficer/\" render={() => (<AddOfficer />)} />\n                <Route exact path=\"/Admin/Profile\" render={() => (<Profile />)} />\n                <Route path=\"/Admin/*\">\n                    <Redirect to=\"/Admin/Manage\" />\n                </Route>\n            </Switch>\n          </div>  \n        );\n    }\n}\n\nAdminDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AdminDashboard);","\nimport React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport GeneralDialog from '../Components/GeneralDialog';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport logo from '../res/emblem.svg';\nimport {url} from \"../constants\";\nimport { Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    Card: {\n        margin: 'auto',\n        textAlign: 'center',\n        minWidth: '320px'\n    },\n    logoWrapper: {\n        position: 'relative',\n        textAlign:'center'\n    },\n    logo: {\n        width: '70px',\n        height: 'auto',\n    },\n    loginBtn: {\n        marginTop: '20px',\n        width: '100%',\n    },\n    forgotPasswordBtn: {\n        marginTop: '20px',\n        width: '200px'\n    },\n    textField: {\n        width: '100%'\n    },\n    wrapper: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex'\n    },    \n})\n\nclass ForgotPasswordComponent extends Component {\n    state={ \n        openDialog : false,\n        newPassword:\"\",\n        confirmPassword:\"\",\n        toLogin:false,\n        reset_name:\"Reset Password\"\n    }\n\n    handleDialogOpen = (dialogMsg, dialogTitle) => {        \n        this.setState({ \n            openDialog: true,\n            dialogMsg: dialogMsg,\n            dialogTitle: dialogTitle\n        });\n    };\n\n    \n    handleClose = () => {\n        this.setState({ openDialog: false });\n        if(this.state.toLogin){\n            this.props.history.push('/');\n        }\n    };\n\n    handleNewPassword = (event) =>{\n        this.setState({\n            newPassword:event.target.value,\n        })   \n    }\n    handleConfirmPassword = (event) =>{\n        this.setState({\n            confirmPassword:event.target.value,\n        })   \n    }\n\n    handleReset = () => {\n        console.log(this.props.match);\n        if(!(this.state.newPassword.length > 5)){\n            this.handleDialogOpen(\"Password must contain 6 charachters\",\"Error\");\n            return ;\n        }\n        if(this.state.confirmPassword === this.state.newPassword){\n            this.setState({\n                reset_name:\"PLEASE WAIT\"\n            })\n            fetch( url + \"verifyForgotPassword/\", {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: \"POST\",\n                body: JSON.stringify({password:this.state.newPassword,token:this.props.match.params.id})\n            }\n        )\n        .then(res => res.json())\n        .then(res => {\n            this.setState({\n                toLogin:true,\n                reset_name:\"Reset Password\"\n            })\n            if(res.success){\n                this.handleDialogOpen(\"Your password has been changed successfully !\");\n            }else{\n                this.handleDialogOpen(res.data,\"Error\");  \n            }\n        })\n        .catch(err => {\n            this.setState({\n                toLogin:true,\n                reset_name:\"Reset Password\"\n            })\n            console.log(err);   \n            this.handleDialogOpen(err,\"Please try again later \");        \n        });\n\n        }\n        else{\n            this.handleDialogOpen(\"New Password and Confirm Password is not same \",\"Error\");\n        }\n    }\n\n    render(){\n        let { classes } = this.props;\n\n        return(\n            <div className={classes.wrapper}>\n            <GeneralDialog \n                openDialogState = {this.state.openDialog}\n                dialogTitle = {this.state.dialogTitle}\n                dialogMsg = {this.state.dialogMsg}  \n                handleClose={this.handleClose}\n                handleDialogOpen={this.handleDialogOpen}\n            >\n                <Button onClick={this.handleClose}>OK</Button>\n            </GeneralDialog>\n            <Paper style={{margin:'auto',padding:'20px 50px 50px 50px'}}>\n            {/* <CardContent> */}\n                <div>\n                    <Typography variant=\"headline\" style={{ textTransform: 'capitalize', textAlign: 'center', margin: '0px 0px 20px 0px' }}>Reset your password here</Typography>\n                </div>\n                {/* <div className={classes.logoWrapper}>\n                    <img src={logo} className={classes.logo} alt=\"Road and Building\" />\n                </div> */}\n                <form onSubmit={\n                    e => {\n                        e.preventDefault();\n                    }\n                }>\n                    <br/>\n                    <div>\n                        <TextField\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"New Password\"\n                            value={this.state.newPassword}\n                            type=\"password\"\n                            className={classes.textField}\n                            margin=\"small\" \n                            onChange={this.handleNewPassword}\n                            />\n                    </div>\n                    <div>\n                        <TextField\n                            id=\"confirmPassword\"\n                            label=\"Confirm Password\"\n                            type=\"password\"\n                            value={this.state.confirmPassword}\n                            className={classes.textField}\n                            margin=\"small\" \n                            onChange={this.handleConfirmPassword}\n                            />\n                    </div>\n                    <div>\n                        <br/>\n                        <Button \n                        disabled={this.state.reset_name==\"Reset Password\"?false:true}\n                        type=\"submit\" variant=\"contained\" onClick={this.handleReset} color=\"primary\" className={classes.loginBtn}>\n                            {this.state.reset_name}\n                        </Button>\n                    </div>\n                </form>\n        </Paper>\n        </div>\n        );\n    }\n}\n\nForgotPasswordComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ForgotPasswordComponent);","import React, { Component } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport Login from './Authentication/';\nimport Dasboard from './Officer';\nimport AdminDasboard from './Admin';\nimport Resetpassword from './Components/ResetPasswordComponent.'\nimport { getCookie } from './constants';\n\nclass App extends Component {\n\n  //state of root app\n  setLogin = userType => {\n    this.setState({\n      isLoggedIn: true,\n      userType: userType\n    })     \n  }\n\n  constructor(props) {\n    super(props);\n    let value = getCookie(\"roadGPortalAuth\"),\n        userType = getCookie(\"roadGPortalUserType\");\n    if(value !== -1 && userType !== -1) {\n      this.state = {\n        isLoggedIn: true,\n        userType: userType,\n        token: value\n      }\n    } else {\n      this.state = {\n        isLoggedIn: false,\n      }\n    }\n  }\n\n  //checking login status for login route\n  checkLoginStatus = () => {\n    if(this.state.isLoggedIn) {\n      if(this.state.userType === 'officer') return (<Redirect to=\"/\" />)\n      else if(this.state.userType === 'admin') return (<Redirect to=\"/Admin\" />)\n    }\n    return (<Login setLogin={this.setLogin} />)\n  }\n\n  //checking login status for office dashboard\n  redirectIfNotLoggedInOfficer = () => {\n    return this.state.isLoggedIn && this.state.userType === 'officer' ? (<Dasboard />) : <Redirect to=\"/Login\" />;\n  }\n\n  //checking login status for admin dashboard\n  redirectIfNotLoggedInAdmin = () => {\n    return this.state.isLoggedIn && this.state.userType === 'admin' ? (<AdminDasboard />) : <Redirect to=\"/Login\" />;\n  }\n\n  handlereset = () =>{\n    return <Resetpassword/>;\n  }\n\n  //main render method\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          {/* main routes for app */}\n          <Switch>\n            <Route exact path=\"/Resetpassword/:id\" render={(props) => <Resetpassword {...props} />} / >\n            <Route exact path=\"/Login\" render={this.checkLoginStatus} />\n            <Route exact path=\"/Dashboard*\" render={this.redirectIfNotLoggedInOfficer} />\n            <Route path=\"/Admin\" render={this.redirectIfNotLoggedInAdmin} />\n            <Route path=\"/\">\n              <Redirect to=\"/Dashboard/\" />\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            // main: '#ff4400',//#0277BD\n            // main: '#0277BD'\n            main: '#263238'\n        },\n        secondary: {\n            // light: '#0066ff',\n            main: '#a0a0ff'\n        }\n    }\n})\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme} >\n        <App />\n    </MuiThemeProvider>\n    \n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}